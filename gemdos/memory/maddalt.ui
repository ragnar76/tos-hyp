!iflang [english]

!begin_node Maddalt
(!begin_liste) [Availability]
!item [Name:]
ØInform (!nolink [GEMDOS]) of alternative memoryÆ - Register 'Alternative'
RAM with (!nolink [GEMDOS]).
!item [Opcode:]
20
!item [Syntax:]
int32_t Maddalt ( void *start, int32_t size );

!item [Description:]
The (!nolink [GEMDOS]) routine Maddalt permits the inclusion of a block of
additional alternate-RAM in the (!nolink [GEMDOS]) memory list that would
not normally have been identified by the system. The following apply:
!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [start]
Start address of the memory block to be added to the (!nolink [GEMDOS]) free
list
!item [size]
Length of the memory block
!end_xlist
(!B)Note:(!b) The block remains the property of DOS and may not be
reclaimed. If the added blocks are not consecutive, the number of blocks
that can be added is restricted to around 12.

This function could be useful perhaps when using VME-bus cards in an
Atari-TT030, or similar hardware modifications, if their memory is to be
made accessible to (!nolink [GEMDOS]).
!item [(!nolink [Return]) value:]
The function returns the value 0 on success, else a negative error code.

!item [Availability:]
The function is only available from (!nolink[GEMDOS]) 0.19 on.

!item [Group:]
Memory management

!item [See also:] (!link [Binding] [Bindings for Maddalt]) ~ Mfree  ~ Malloc ~ 
      Mxalloc
(!ende_liste)


!begin_node Bindings for Maddalt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Maddalt ( void *start, int32_t size );
!item [Assembler:]
!begin_verbatim
move.l    size,-(sp)   ; Offset 6
pea       start        ; Offset 2
move.w    #20,-(sp)    ; Offset 0
trap      #1           ; GEMDOS
lea       $A(sp),sp    ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node

!else

!begin_node Maddalt
(!begin_liste) [Beschreibung]
!item [Name:]
ØInform Gemdos of alternative memoryÆ - Alternativen Speicher anmelden.
!item [Gemdosnummer:]
20
!item [Deklaration:]
int32_t Maddalt ( void *start, int32_t size );

!item [Beschreibung:]
Die GEMDOS-Routine Maddalt erlaubt es, einen Block von Alternate-RAM in die
Speicherliste des (!nolink [GEMDOS]) aufzunehmen. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [start]
Anfangsadresse des Speichers
!item [size]
LÑnge des Speicherbereichs
!end_xlist
(!B)Hinweis:(!b)  Der Block
bleibt Eigentum von DOS und darf nicht zurÅckgefordert werden. Wenn
hinzugefÅgte Blîcke nicht hintereinander liegen, ist die Anzahl der
hinzufÅgbaren Blîcke auf ca. 12 beschrÑnkt.

NÅtzlich kînnte diese Funktion etwa beim Einsatz von VME-Bus-Karten im
Atari-TT sein, wenn deren Speicher fÅr (!nolink [GEMDOS]) zugÑnglich gemacht werden
soll.
!item [Ergebnis:]
Die Funktion liefert den Wert 0, oder eine negative Fehlermeldung.

!item [VerfÅgbar:] Die Funktion ist erst ab (!nolink [GEMDOS]) 0.19 verfÅgbar.

!item [Gruppe:]
Speicherverwaltung

!item [Querverweis:] (!link [Binding] [Bindings fÅr Maddalt]) ~ Mfree  ~ Malloc ~ 
			Mxalloc
(!ende_liste)


!begin_node Bindings fÅr Maddalt
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Maddalt ( void *start, int32_t size );
!item [Assembler:]
!begin_verbatim
move.l    size,-(sp)   ; Offset 6
pea       start        ; Offset 2
move.w    #20,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif
