!iflang [english]


!begin_node Flock
(!begin_liste) [Availability]
!item [Name:]
ØFile record lockingÆ - Lock or unlock part of a file.

!item [Opcode:]
92

!item [Syntax:]
int32_t Flock ( int16_t handle, int16_t mode, int32_t start, int32_t length );

!item [Description:]
The (!nolink [GEMDOS]) routine Flock serves to protect portions of a file
from access by other processes. The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
File ID
!item [mode]
!begin_xlist !short
!item [0 =]
Apply lock
!item [1 =]
Remove lock
!end_xlist
!item [start]
Start position in the file
!item [length]
Number of bytes affected
!end_xlist

(!B)Warning:(!b) This function is optional, hence the call may return EINVFN
as a reply. In particular, one should note that Flock need not be available
on (!I)all(!i) (!nolink [installed]) file-systems.

!item [(!nolink [Return]) value:]
The function can return the following results:

!begin_xlist !short [ENSLOCK :]
!item [E_OK :]
No error has arisen
!item [ELOCKED :]
Overlapping portion of file already locked
!item [ENSLOCK :]
Matching lock not found for removal
!end_xlist

!item [Availability:]
Only present when '(!link [_FLK][Cookie, _FLK])' cookie exists.

!item [Group:]
File functions

!item [See also:]
(!link [Binding] [Bindings for Flock ]) ~ Fcreate ~ Fopen ~ Fclose ~
Fdelete ~ Ptermres ~ F_SETLK
(!ende_liste)


!begin_node Bindings for Flock
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Flock ( int16_t handle, int16_t mode, int32_t start, int32_t length );

!item [Assembler:]
!begin_verbatim
move.l    length,-(sp)  ; Offset 10
move.l    start,-(sp)   ; Offset  6
move.w    mode,-(sp)    ; Offset  4
move.w    handle,-(sp)  ; Offset  2
move.w    #92,-(sp)     ; Offset  0
trap      #1            ; GEMDOS
lea       $E(sp),sp     ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Flock
(!begin_liste) [Beschreibung]
!item [Name:]
Øfile record lockingÆ - Teile einer Datei sperren oder freigeben.

!item [Gemdosnummer:]
92

!item [Deklaration:]
int32_t Flock ( int16_t handle, int16_t mode, int32_t start, int32_t length );

!item [Beschreibung:]
Die GEMDOS-Routine Flock dient dazu, Teile von Dateien gegen den Zugriff von
anderen Prozessen zu schÅtzen. Es gilt:

!begin_xlist !short[Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Dateikennung
!item [mode]
!begin_xlist !short
!item [0 =]
Blockierung setzen
!item [1 =]
Blockierung aufheben
!end_xlist
!item [start]
Startposition in der Datei
!item [length]
Anzahl der betroffenen Bytes
!end_xlist

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden. Es sollte insbesondere beachtet werden, daû Flock
nicht auf (!I)allen(!i) installierten Dateisystemen zur VerfÅgung stehen
muss.

!item [Ergebnis:]
Die Funktion liefert folgende Resultate:

!begin_xlist !short [ENSLOCK :]
!item [E_OK :]
kein Fehler aufgetreten
!item [ELOCKED :]
Blockierung bereits vorhanden
!item [ENSLOCK :]
Zu entfernende Blockierung existiert nicht
!end_xlist

!item [VerfÅgbar:]
Nur vorhanden wenn der Cookie (!link [_FLK][Cookie, _FLK]) gesetzt ist.

!item [Gruppe:]
Dateifunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Flock ]) ~ Fcreate ~ Fopen ~ Fclose ~
Fdelete ~ Ptermres ~ F_SETLK
(!ende_liste)


!begin_node Bindings fÅr Flock
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Flock ( int16_t handle, int16_t mode, int32_t start, int32_t length );

!item [Assembler:]
!begin_verbatim
move.l    length,-(sp)  ; Offset 10
move.l    start,-(sp)   ; Offset  6
move.w    mode,-(sp)    ; Offset  4
move.w    handle,-(sp)  ; Offset  2
move.w    #92,-(sp)     ; Offset  0
trap      #1            ; GEMDOS aufrufen
lea       $E(sp),sp     ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
