!iflang [english]


!begin_node Fchown
(!begin_liste) [Availability]
!item [Name:]
ØFchownÆ - Alter owner/group ID.

!item [Opcode:]
305

!item [Syntax:]
int32_t Fchown ( int8_t *name, int16_t uid, int16_t gid );

!item [Description:]
The function alters the user/group ID of the file (!I)name(!i), which
(!nolink [control]) the access rights of the file.

This call can only be issued by a process that has an effective user
identifier (EUID) which is 0, or which corresponds to the UID of the file;
in the latter case the new UID must correspond to the old one, and in
addition the calling process must be a member of the group with the group
number GID.

!item [(!nolink [Return]) value:]
The function can return the following results:

!begin_xlist !short [EACCDN :]
!item [E_OK :]
No error has arisen
!item [EINVFN :]
The file-system does not support the concept of user/group IDs (example
(!nolink [TOS])-FS)
!item [EACCDN :]
The EUID of the calling process differs from the UID of the file-owner and
is also non-zero
!end_xlist

!item [Availability:]
Available when a 'MiNT' cookie with a version of at least 0.90 exists.

!item [Group:]
File functions

!item [See also:]
(!link [Binding] [Bindings for Fchown]) ~ Fchmod ~ Fxattr ~
(!link [XFS-concept in MagiC][MagiC's XFS-concept])
(!ende_liste)


!begin_node Bindings for Fchown
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fchown ( int8_t *name, int16_t uid, int16_t gid );

!item [Assembler:]
!begin_verbatim
move.w    gid,-(sp)    ; Offset 8
move.w    uid,-(sp)    ; Offset 6
pea       name         ; Offset 2
move.w    #305,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
lea       $A(sp),sp    ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Fchown
(!begin_liste) [Beschreibung]
!item [Name:]
ØFchownÆ - EigentÅmer/Gruppenkennungen Ñndern.

!item [Gemdosnummer:]
305

!item [Deklaration:]
int32_t Fchown ( int8_t *name, int16_t uid, int16_t gid );

!item [Beschreibung:]
Die Funktion Ñndert die Benutzer-/Gruppenkennung der Datei (!I)name(!i), die
wiederum die Zugriffsrechte der Datei regeln.

Dieser Aufruf kann nur von einem Prozeû erfolgen der eine effektive
Benutzerkennung (EUID) hat, die 0 ist, oder die der UID der Datei
entspricht. Im letzteren Fall muû die neue UID der alten entsprechen, und
darÅber hinaus der aufrufende Prozeû Mitglied der Gruppe mit der
Gruppennummer GID sein.

!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:

!begin_xlist !short [EACCDN :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [EINVFN :]
das Filesystem unterstÅtzt nicht das Konzept von
Benutzer-/Gruppenkennungen (Beispiel: TOS-FS).
!item [EACCDN :]
Die EUID des aufrufenden Prozesses differiert von der UID des
Dateibesitzers und ist auch nicht 0.
!end_xlist

!item [VerfÅgbar:]
VerfÅgbar, wenn ein 'MiNT' Cookie mit einer Versionsnummer von mindestens
0.90 existiert.

!item [Gruppe:]
Dateifunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Fchown]) ~ Fchmod ~ Fxattr ~
(!link [XFS-Konzept in MagiC][Das XFS-Konzept von MagiC])
(!ende_liste)


!begin_node Bindings fÅr Fchown
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fchown ( int8_t *name, int16_t uid, int16_t gid );

!item [Assembler:]
!begin_verbatim
move.w    gid,-(sp)    ; Offset 8
move.w    uid,-(sp)    ; Offset 6
pea       name         ; Offset 2
move.w    #305,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
lea       $A(sp),sp    ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
