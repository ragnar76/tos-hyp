!iflang [english]


!begin_node Dgetdrv
(!begin_liste) [Availability]
!item [Name:]
ØDisk get driveÆ - Obtain the current drive.

!item [Opcode:]
25

!item [Syntax:]
int16_t Dgetdrv ( VOID );

!item [Description:]
The (!nolink [GEMDOS]) routine Dgetdrv obtains the current drive.

!item [(!nolink [Return]) value:]
The function returns a number, which is coded as follows:

!begin_xlist !short [Value]
!item [Value]
Meaning
!item [~]
~
!item [0]
Drive A:
!item [1]
Drive B:
!item [2]
Drive C:
!item [3]
Drive D: (etc.)
!end_xlist

(!B)Note:(!b) As of (!nolink [MagiC 3]), drives from A: to Z:, i.e. values
from 0 to 25, are permissible.

!item [Availability:]
All (!nolink [GEMDOS]) versions.

!item [Group:]
Directory functions

!item [See also:]
(!link [Binding] [Bindings for Dgetdrv]) ~ Dsetdrv ~ _drvbits
(!ende_liste)


!begin_node Bindings for Dgetdrv
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Dgetdrv ( VOID );

!item [Assembler:]
!begin_verbatim
move.w    #25,-(sp)    ; Offset 0
trap      #1           ; GEMDOS
addq.l    #2,sp        ; Correct stack
!end_verbatim

!item [GFA-Basic]
Fehler%=Gemdos(&H19)
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dgetdrv
(!begin_liste) [Beschreibung]
!item [Name:]
Ødisk get driveÆ - ermittelt das aktuelle Laufwerk.

!item [Gemdosnummer:]
25

!item [Deklaration:]
int16_t Dgetdrv ( VOID );

!item [Beschreibung:]
Die GEMDOS-Routine Dgetdrv ermittelt das aktuelle Laufwerk.

!item [Ergebnis:]
Die Funktion liefert als Ergebnis eine Zahl, die wie folgt codiert ist:

!begin_xlist !short [Wert]
!item [Wert]
Bedeutung
!item [~]
~
!item [0]
Laufwerk-A
!item [1]
Laufwerk-B
!item [2]
Laufwerk-C
!item [3]
Laufwerk-D  (usw.)
!end_xlist

(!B)Hinweis:(!b) Ab MagiC 3 sind Laufwerke von A bis Z, d.h. Werte von 0 bis
25 zulÑssig.

!item [VerfÅgbar:]
Alle (!nolink [GEMDOS]) Versionen.

!item [Gruppe:]
Verzeichnisfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dgetdrv]) ~ Dsetdrv ~ _drvbits
(!ende_liste)


!begin_node Bindings fÅr Dgetdrv
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Dgetdrv ( VOID );

!item [Assembler:]
!begin_verbatim
move.w    #25,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim

!item [GFA-Basic]
Fehler%=Gemdos(&H19)
(!ende_liste)
!end_node
!end_node


!endif
