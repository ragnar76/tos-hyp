!iflang [english]


!begin_node Dxreaddir
(!begin_liste) [Availability]
!item [Name:]
ØDxreaddirÆ - Read directory information, obtain attributes.

!item [Opcode:]
322, (0x142)

!item [Syntax:]
int32_t Dxreaddir ( int16_t ln, int32_t dirh, int8_t *buf, XATTR *xattr, int32_t *xr );

!item [Description:]
The function Dxreaddir returns the next file from the directory with the
handle (!I)dirh(!i). The filename and the optional 4 byte long file index
are stored in the buffer specified in (!I)buf(!i).

The file index is omitted if the compatibility mode was specified for
Dopendir. If two filenames have the same index, they represent the same
file.

(!nolink [MagiC]) returns for FAT file-systems the following index data:

!begin_itemize !short
!item Directories: Start cluster in Motorola format
!item Other files:
!begin_xlist !short
!item [High word =]
Start cluster of the directory
!item [Low word =]
Position within the directory >> 5
!end_xlist
!end_itemize

This procedure is similar to that used by Linux and Solaris. The drawback is
that files alter their index during a move.

The parameter (!I)ln(!i) specifies the length of the receiving buffer
(!I)buf(!i). The extended file attributes are stored similarly to Fxattr in
the (!I)xattr(!i) structure, where symbolic links are not dissolved.

(!B)Note:(!b) This part of the call may fail even though the filename was
readable. In that case a separate return code will be stored in the LONG
value to which the parameter (!I)xr(!i) points.

!item [(!nolink [Return]) value:]
The function can return the following results:

!begin_xlist !short [ERANGE :]
!item [E_OK :]
No error has arisen
!item [ENMFIL :]
No further files found
!item [ERANGE :]
The receiving buffer is not large enoough
!end_xlist

!item [Availability:] 
(!nolink [MagiC]) as of Version 3.0, MiNT 1.11 onwards.

!item [Group:] Directory functions

!item [See also:]
(!link [Binding] [Bindings for Dxreaddir]) ~ Dreaddir ~ Dopendir ~
Dclosedir ~ Drewinddir
(!ende_liste)


!begin_node Bindings for Dxreaddir
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Dxreaddir ( int16_t ln, int32_t dirh, int8_t *buf, XATTR *xattr, int32_t *xr );

!item [Assembler:]
!begin_verbatim
pea       xr           ; Offset 16
pea       xattr        ; Offset 12
pea       buf          ; Offset  8
move.l    dirh         ; Offset  4
move.w    ln           ; Offset  2
move.w    #322,-(sp)   ; Offset  0
trap      #1           ; GEMDOS
lea       $14(sp),sp   ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Dxreaddir
(!begin_liste) [Beschreibung]
!item [Name:]
ØDxreaddirÆ - Verzeichnis Informationen lesen.

!item [Gemdosnummer:]
322, (0x142)

!item [Deklaration:]
int32_t Dxreaddir ( int16_t ln, int32_t dirh, int8_t *buf, XATTR *xattr, int32_t *xr );

!item [Beschreibung:]
Die Funktion liefert die nÑchste Datei aus dem Verzeichnis mit dem Handle
(!I)dirh(!i). Der Dateiname und der optionale 4 Bytes groûe Dateiindex
werden in dem durch (!I)buf(!i) spezifizierten Puffer abgelegt.

Der Dateiindex wird weggelassen, wenn bei Dopendir der KompatibilitÑtmodus
angegeben wurde. Wenn zwei Dateinamen den gleichen Index besitzen, stehen
sie fÅr die selbe Datei.

MagiC liefert fÅr FAT-Dateisysteme die folgenden Index-Daten:

!begin_itemize !short
!item Verzeichnisse: Startcluster im Motorola-Format
!item sonstige Dateien:
!begin_xlist !short
!item [Hiword =]
Startcluster des Verzeichnisses
!item [Loword =]
Position innerhalb des Verzeichnisses >> 5
!end_xlist
!end_itemize

Dieses Verfahren ist Ñhnlich wie das, welches Linux und Solaris verwenden.
Nachteil ist, daû Dateien beim Verschieben ihren Index Ñndern.

Der Parameter (!I)ln(!i) gibt die LÑnge des aufnehmendes Puffers (!I)buf(!i)
an. Die erweiterten Dateiattribute werden analog zu Fxattr in der Struktur
(!I)xattr(!i) abgelegt, wobei symbolische Links nicht aufgelîst werden.

(!B)Hinweis:(!b) Dieser Teil des Aufrufs kann fehlschlagen, obwohl der
Dateiname lesbar war. In diesem Fall wird ein getrennter Returncode in dem
long-Wert abgelegt, auf das der Parameter (!I)xr(!i) zeigt.

!item [Ergebnis:]
Die Funktion kann folgende RÅckgabewerte liefern:

!begin_xlist !short [ERANGE :]
!item [E_OK :]
kein Fehler aufgetreten.
!item [ENMFIL :]
keine weiteren Dateien gefunden.
!item [ERANGE :]
der aufnehmende Puffer ist nicht groû genug.
!end_xlist

!item [VerfÅgbar:] 
(!nolink [MagiC]) ab Version 3.0, ab MiNT 1.11

!item [Gruppe:] Verzeichnisfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Dxreaddir]) ~ Dreaddir ~ Dopendir ~
Dclosedir ~ Drewinddir
(!ende_liste)


!begin_node Bindings fÅr Dxreaddir
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Dxreaddir ( int16_t ln, int32_t dirh, int8_t *buf, XATTR *xattr, int32_t *xr );

!item [Assembler:]
!begin_verbatim
pea       xr           ; Offset 16
pea       xattr        ; Offset 12
pea       buf          ; Offset  8
move.l    dirh         ; Offset  4
move.w    ln           ; Offset  2
move.w    #322,-(sp)   ; Offset  0
trap      #1           ; GEMDOS aufrufen
lea       $14(sp),sp   ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
