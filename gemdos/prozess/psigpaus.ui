!iflang [english]


!begin_node Psigpause
(!begin_liste) [Availability]
!item [Name:]
ØPsigpauseÆ - Set a new signal mask and then suspend process until the
arrival of a signal.

!item [Opcode:]
310

!item [Syntax:]
void Psigpause ( int32_t mask );

!item [Description:]
The function Psigpause sets a new signal mask (!I)mask(!i), and suspends the
called process until a signal arrives that is not masked or ignored.

If a handler has been (!nolink [installed]) for this signal with Psignal,
then this will be called before the function returns. If the handler
executes a longjump to another part of the program, or the process
terminates, then the function will never return.

(!B)Note:(!b) When the function returns, the signal mask will be reset to
the value that applied before the call of Psigpause. Thus the signal mask
set by the function is only valid temporarily. In MagiC, problems may arise
if several threads call this function at the same time, as the signal mask
here is process-(!nolink [global]).

!item [(!nolink [Return]) value:]
The function returns always 0.

!item [Availability:]
Available when a 'MiNT' cookie with a version of at least 0.95 exists, and
(!nolink [MagiC]) as of Version 4.50.

!item [Group:]
Process functions

!item [See also:]
(!link [Binding][Bindings for Psigpause]) ~ Pause ~ Psigblock ~ Psignal ~
Psigsetmask ~ Signals
(!ende_liste)


!begin_node Bindings for Psigpause
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
void Psigpause ( int32_t mask );

!item [Assembler:]
!begin_verbatim
move.w    mask,-(sp)   ; Offset 2
move.w    #310,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #4,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Psigpause
(!begin_liste) [Beschreibung]
!item [Name:]
ØPsigpauseÆ - Prozess bis zum Eintreffen eines Signals suspendieren.

!item [Gemdosnummer:]
310

!item [Deklaration:]
void Psigpause ( int32_t mask );

!item [Beschreibung:]
Die Funktion setzt die neue Signalmaske (!I)mask(!i), und suspendiert den
aufrufenden Prozess, bis ein Signal eintrifft, welches nicht maskiert ist
oder ignoriert wird.

Falls per Psignal fÅr dieses Signal ein Handler installiert wurde, wird
dieser aufgerufen, bevor die Funktion zurÅckkehrt. Falls der Handler einen
longjump in einen anderen Programmteil ausfÅhrt oder der Prozess terminiert,
wird die Funktion niemals zurÅckkehren.

(!B)Hinweis:(!b) Wenn die Funktion zurÅckkehrt, wird die Signalmaske auf den
Wert zurÅckgesetzt, der vor dem Aufruf von Psigpause gÅltig war. Die von der
Funktion gesetzte Signalmaske ist also nur temporÑr gÅltig. In MagiC kann es
Probleme geben wenn mehrere Threads gleichzeitig diese Funktion aufrufen, da
die Signalmaske hier prozessglobal ist.

!item [Ergebnis:]
Die Funktion liefert immer 0 zurÅck.

!item [VerfÅgbar:]
VerfÅgbar, wenn ein 'MiNT' Cookie mit einer Versionsnummer von mindestens
0.95 existiert und in (!nolink [MagiC]) ab Version 4.50.

!item [Gruppe:]
Prozessfunktionen

!item [Querverweis:]
(!link [Binding][Bindings fÅr Psigpause]) ~ Pause ~ Psigblock ~ Psignal ~
Psigsetmask ~ Signale
(!ende_liste)


!begin_node Bindings fÅr Psigpause
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
void Psigpause ( int32_t mask );

!item [Assembler:]
!begin_verbatim
move.w    mask,-(sp)   ; Offset 2
move.w    #310,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
