!iflang [english]


!begin_node Pgetppid
(!begin_liste) [Availability]
!item [Name:]
ØPgetppidÆ - Get process ID for parent process.

!item [Opcode:]
268 (0x010c)

!item [Syntax:]
int16_t Pgetppid ( void );

!item [Description:]
The function Pgetppid returns the PID of the parent process of the currently
active (calling) process.

In the FreeMiNT kernel, processes are represented as a tree. The root of the
tree is the kernel itself (PID 0). At boot time, the kernel launches another
process (which can be 'init' in case of a Unix-like setup, or an
(!nolink [AES]), a shell or whatever) specified by the INIT or GEM keyword
in the mint.cnf file. This process will launch other processes (daemons,
accessories, programs etc) that are its so-called children.
      
Therefore, every process (but the kernel, obviously) is created by its
so-called parent. The Pgetppid() (get parent's PID) call allows
determination the PID of the parent of the calling process. To have a good
illustration of this, you can use the 'ps' command in your shell. You will
see that all accessories parent is the (!nolink [AES]), and that the daemons
are started by the 'init' program.

!item [(!nolink [Return]) value:]
Process ID of the parent (positive). If the current process was started
directly from the kernel, 0 will be returned. A return value of -1 signals
that the process has no parent.

!item [Availability:]
As of the first in MultiTOS integrated MiNT version 1.04 and
(!nolink [MagiC]) as of Version 3.0.

!item [Group:]
Process functions

!item [See also:]
(!link [Binding] [Bindings for Pgetppid]) ~ Pgetpgrp ~ Pgetpid
(!ende_liste)


!begin_node Bindings for Pgetppid
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Pgetppid ( void );

!item [Assembler:]
!begin_verbatim
move.w    #268,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #2,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Pgetppid
(!begin_liste) [Beschreibung]
!item [Name:]
ØPgetppidÆ - Prozess ID fÅr Vater Prozess erfragen.

!item [Gemdosnummer:]
268 (0x010c)

!item [Deklaration:]
int16_t Pgetppid ( void );

!item [Beschreibung:]
Die Funktion liefert die PID des Parent-Prozesses, des z.Zt. aktiven
Prozesses.

In the FreeMiNT kernel, processes are represented as a tree. The root
of the tree is the kernel itself (PID 0). At boot time, the kernel
launches another process (which can be 'init' in case of a Unix-like
setup, or an AES, a shell or whatever) specified by the INIT or GEM
keyword in the mint.cnf file. This process will launch other processes
(daemons, accessories, programs etc) that are its so-called children.
	    
Therefore, every process (but the kernel, obviously) is created by its
so-called parent. The Pgetppid() (get parent's PID) call allows to
determine the PID of the parent of the calling process. To have a good
illustration of this, you can use the 'ps' command in your shell. You
will see that all accessories's parent is the (!nolink [AES]), and that the daemons
are started by the 'init' program.

!item [Ergebnis:]
Prozess-ID des Parent (positiv). Wenn der aktuelle Prozess direkt vom Kernel
gestartet wurde, wird 0 zurÅck geliefert. Ein RÅckgabewert von -1
signalisiert, daû der Prozess keinen Parent besitzt.

!item [VerfÅgbar:]
Seit der ersten in MultiTOS integrierten MiNT Version 1.04 und
(!nolink [MagiC]) ab Version 3.0.

!item [Gruppe:]
Prozessfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Pgetppid]) ~ Pgetpgrp ~ Pgetpid
(!ende_liste)


!begin_node Bindings fÅr Pgetppid
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int16_t Pgetppid ( void );

!item [Assembler:]
!begin_verbatim
move.w    #268,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
