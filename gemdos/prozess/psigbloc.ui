!iflang [english]


!begin_node Psigblock
(!begin_liste) [Availability]
!item [Name:]
ØPsigblockÆ - Alter signal mask.

!item [Opcode:]
278

!item [Syntax:]
int32_t Psigblock ( int32_t mask );

!item [Description:]
The function Psigblock blocks selected signals from delivery. It adds the
signals specified in (!I)mask(!i) to the set of currently blocking signals.
For this, each bit of the parameter (!I)mask(!i) represents one signal. If
bit (!I)n(!i) in (!I)mask(!i) is set, it means that the signal with the
number (!I)n(!i) will be blocked.

One should note that some signals (e.g. SIGKILL) can not be blocked. The
kernel will delete these signals from (!I)mask(!i) before any change of the
signal set is performed.

Furthermore it should be pointed out that blocked signals also remain
blocked via Pfork/Pvfork calls. After a Pexec call the child always starts
with an empty set of signals to be blocked, irrespective of which signals
were blocked by its parent.

(!B)Warning:(!b) This function is optional, hence a call may be answered
with EINVFN.

!item [(!nolink [Return]) value:]
The function returns the set of blocked signals that were valid before the
call. So with a (!nolink [Psigsetmask]) call the old set can be recovered
again.

!item [Availability:]
As of the first in MultiTOS integrated MiNT version 1.04 and in MagiC from
Version 4.50 onwards.

!item [Group:]
Process functions

!item [See also:]
(!link [Binding] [Bindings for Psigblock]) ~ Psigsetmask ~ Signals
(!ende_liste)


!begin_node Bindings for Psigblock
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Psigblock ( int32_t mask );

!item [Assembler:]
!begin_verbatim
move.l    mask,-(sp)   ; Offset 2
move.w    #278,-(sp)   ; Offset 0
trap      #1           ; GEMDOS
addq.l    #6,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Psigblock
(!begin_liste) [Beschreibung]
!item [Name:]
ØPsigblockÆ - Signalmaske verÑndern.

!item [Gemdosnummer:]
278

!item [Deklaration:]
int32_t Psigblock ( int32_t mask );

!item [Beschreibung:]
Die Funktion Psigblock blockiert den Empfang ausgewÑhlter Signale. Sie fÅgt
die in (!I)mask(!i) angegebenen Signale der Menge der aktuell blockierenden
(!nolink [Signale]) hinzu. Dabei reprÑsentiert jedes Bit des Parameters
(!I)mask(!i) ein Signal. Wenn Bit n in (!I)mask(!i) gesetzt ist, bedeutet
dies, daû das Signal mit der Nummer n blockiert wird.

Zu beachten ist, daû manche (!nolink [Signale]) (z.B. SIGKILL) nicht
blockiert werden kînnen. Der Kernel wird diese (!nolink [Signale]) aus
(!I)mask(!i) lîschen, bevor die jeweilige énderung der Signalmengen
vorgenommen wird.

Ferner sei darauf hingewiesen, daû blockierte (!nolink [Signale]) auch Åber
Pfork/Pvfork Aufrufe hinweg blockiert bleiben. Nach einem Pexec-Aufruf
startet der Child stets mit einer leeren Menge zu blockierender
(!nolink [Signale]), unabhÑngig davon, welche Signale vom Parent blockiert
wurden.

(!B)Achtung:(!b) Diese Funktion ist optional, daher darf ein Aufruf mit
EINVFN beantwortet werden.

!item [Ergebnis:]
Die Funktion liefert die Menge der blockierten (!nolink [Signale]) zurÅck,
die vor dem Aufruf gÅltig waren. öber einen Aufruf von
(!nolink [Psigsetmask]) kann so die alte Menge wieder hergestellt werden.

!item [VerfÅgbar:]
Seit der ersten in MultiTOS integrierten MiNT Version 1.04 und sie steht in
MagiC ab Version 4.50 zur VerfÅgung.

!item [Gruppe:]
Prozessfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Psigblock]) ~ Psigsetmask ~ Signale
(!ende_liste)


!begin_node Bindings fÅr Psigblock
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Psigblock ( int32_t mask );

!item [Assembler:]
!begin_verbatim
move.l    mask,-(sp)   ; Offset 2
move.w    #278,-(sp)   ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
