!iflang [english]


!begin_node Cconout
(!begin_liste) [Availability]
!item [Name:]
ØCharacter console outputÆ - Write one character to the standard output
device.

!item [Opcode:]
2

!item [Syntax:]
int32_t Cconout ( int16_t c );

!item [Description:]
The (!nolink [GEMDOS]) routine Cconout writes the character (!I)c(!i) to
(!nolink [GEMDOS]) handle 1 - normally the standard output device con: - as
a rule the screen.

(!B)Note:(!b) The character (!I)c(!i) contain the associated ASCII-code in
bits 0..7 (all other bits have to be 0). No line-feed translation is done at
the output, so ASCII 13 and ACII 10 must be sent to start a new line. The
function works correctly with redirection of the input/output only as of
(!nolink [GEMDOS]) Version 0.15; with earlier versions, do not redirect this
handle to a write-only device since the call tries to read from the output
stream to process the 'special' keys.

!item [(!nolink [Return]) value:]
The return value of the function depends on the operating system. The
following apply: 

!begin_xlist !short [MiNT/MagiC > 3.00]
!item [Operating system]
Value
!item [~]
~
!item [TOS]
No sensible return value
!item [(!nolink [MagiC]) < 3.00]
!begin_xlist !short [< 0]
!item [< 0]
= Error
!item [0L]
= Output device is full
!item [1L]
= Output was successful
!end_xlist 
!item [MiNT/(!nolink [MagiC]) > 3.00]
!begin_xlist !short [< 0]
!item [< 0]
= Error
!item [0L]
= Output device is full
!item [1L]
= Output was successful
!item [4L]
= Output to the terminal was successful
!end_xlist
!end_xlist

!item [Availability:]
All (!nolink [GEMDOS]) versions.

!item [Group:]
Character input/output

!item [See also:]
(!link [Binding] [Bindings for Cconout])Cconin ~  Cconos ~ VT52 terminal
(!ende_liste)


!begin_node Bindings for Cconout
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Cconout ( int16_t c );

!item [Assembler:]
!begin_verbatim
move.w    c,-(sp)      ; Offset 2
move.w    #2,-(sp)     ; Offset 0
trap      #1           ; GEMDOS
addq.l    #4,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Cconout
(!begin_liste) [Beschreibung]
!item [Name:]
Øcharacter console outputÆ - schreibt ein Zeichen auf das
StandardausgabegerÑt.

!item [Gemdosnummer:]
2

!item [Deklaration:]
int32_t Cconout ( int16_t c );

!item [Beschreibung:]
Die GEMDOS-Routine Cconout schreibt das Zeichen (!I)c(!i) auf das
(!nolink [GEMDOS]) Handle 1 - normalerweise das StandardausgabegerÑt. Als
StandardausgabegerÑt dient in der Regel der Bildschirm.

(!B)Hinweis:(!b) Das Zeichen (!I)c(!i) enthÑlt in den Bits 0..7 den
zugehîrigen ASCII-Code (alle anderen Bits mÅssen 0 sein). Es erfolgt keine
Umwandlung von Linefeed, deshalb mÅssen ASCII 13 und ACII 10 ausgegeben
werden, um einen Zeilenumbruch zu erzeugen. Die Funktion arbeitet bei
Umlenkung der Ein- bzw. Ausgabe erst ab (!nolink [GEMDOS])-Version 0.15
korrekt. FÅr Ñltere Versionen darf dieses Handle nicht auf ein reines
Ausgabedevice umgelenkt werden, da dieser Aufruf versucht, aus dem
Ausgabestream zu lesen um spezielle Tastenkombinationen zu bearbeiten.

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist vom Betriebssystem abhÑngig. Es gilt:

!begin_xlist !short [MiNT/MagiC > 3.00]
!item [Betriebssystem]
Wert
!item [~]
~
!item [TOS]
kein sinnvoller RÅckgabewert
!item [MagiC < 3.00]
!begin_xlist !short [< 0]
!item [< 0]
= Fehler
!item [0L]
= AusgabegerÑt ist voll
!item [1L]
= Ausgabe war erfolgreich
!end_xlist 
!item [MiNT/(!nolink [MagiC]) > 3.00]
!begin_xlist !short [< 0]
!item [< 0]
= Fehler
!item [0L]
= AusgabegerÑt ist voll
!item [1L]
= Ausgabe war erfolgreich
!item [4L]
= Ausgabe auf dem Terminal war erfolgreich
!end_xlist
!end_xlist

!item [VerfÅgbar:]
Alle GEMDOS Versionen.

!item [Gruppe:]
Zeichenweise Ein-/Ausgabe

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Cconout])Cconin ~  Cconos ~ VT-52-Terminal
(!ende_liste)


!begin_node Bindings fÅr Cconout
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Cconout ( int16_t c );

!item [Assembler:]
!begin_verbatim
move.w    c,-(sp)      ; Offset 2
move.w    #2,-(sp)     ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
