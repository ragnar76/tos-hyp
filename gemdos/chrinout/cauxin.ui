!iflang [english]


!begin_node Cauxin
(!begin_liste) [Availability]
!item [Name:]
ØCharacter auxiliary inputÆ - Input via serial port.

!item [Opcode:]
3

!item [Syntax:]
int32_t Cauxin ( void );

!item [Description:]
The (!nolink [GEMDOS]) routine Cauxin reads a character byte from the
(!nolink [GEMDOS]) handle 2 - normally the serial port aux:. The function
waits until the character arrives.

(!B)Note:(!b) Atari recommends use of the (!nolink [BIOS]) function Bconin
for this, as Cauxin can cause problems when its handle is redirected and
end-of-file is encountered.

!item [(!nolink [Return]) value:]
The function returns the read-in character in the low byte of the returned
WORD.

!item [Availability:]
All (!nolink [GEMDOS]) versions.

!item [Group:]
Character input/output

!item [See also:]
(!link [Binding] [Bindings for Cauxin]) ~ Cauxout ~ Bconin
(!ende_liste)


!begin_node Bindings for Cauxin
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Cauxin ( void );

!item [Assembler:]
!begin_verbatim
move.w    #3,-(sp)     ; Offset 0
trap      #1           ; GEMDOS
addq.l    #2,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Cauxin
(!begin_liste) [Beschreibung]
!item [Name:]
Øcharacter auxiliary inputÆ - Eingabe Åber serielle Schnittstelle.

!item [Gemdosnummer:]
3

!item [Deklaration:]
int32_t Cauxin ( void );
!item [Beschreibung:]
Die GEMDOS-Routine Cauxin liest ein Zeichen von Handle 2 ein - normalerweise
die seriellen Schnittstelle aux:. Die Funktion wartet solange, bis das
Zeichen eingetroffen ist.

(!B)Hinweis:(!b) Atari empfiehlt, fÅr diese Zwecke die BIOS-Funktion Bconin
zu verwenden.

!item [Ergebnis:]
Die Funktion liefert als Ergebnis das eingelesene Zeichen im low Byte des
zurÅckgelieferten WORDs.

!item [VerfÅgbar:]
Alle GEMDOS Versionen.

!item [Gruppe:]
Zeichenweise Ein-/Ausgabe

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Cauxin]) ~ Cauxout ~ Bconin
(!ende_liste)


!begin_node Bindings fÅr Cauxin
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Cauxin ( void );

!item [Assembler:]
!begin_verbatim
move.w    #3,-(sp)     ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #2,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
