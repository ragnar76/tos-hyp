!iflang [english]


!begin_node Crawio
(!begin_liste) [Availability]
!item [Name:]
ØCharacter raw input outputÆ - Permit unbuffered input/output.

!item [Opcode:]
6

!item [Syntax:]
int32_t Crawio ( int16_t w );

!item [Description:]
The (!nolink [GEMDOS]) routine Crawio combines unbuffered console input and
output in one function. The following applies for the parameter (!I)w(!i),
of which only the lower 8 bits are significant (others should be 0):

!begin_xlist !short [Value]
!item [Value]
Meaning
!item [~]
~
!item [0xff]
Read character from standard input
!item [else]
Output character to standard output
!end_xlist

(!B)Note:(!b) The function works correctly with input/output redirection
only as of (!nolink [GEMDOS]) Version 0.15.

!item [(!nolink [Return]) value:]
If the parameter (!I)w(!i) has the value 0xff, the function returns a
bit-array LONG with the ASCII-code of the character in the lower WORD (bits
0 .. 7). If the read character originates from the keyboard, then the lower
8 bits of the higher WORD (bits 16 .. 23) will contain the scancode of the
keyboard, with Shift-key status in the upper 8 bits provided bit 3 of the
system variable (!I)conterm(!i) is set. Note that if a non-ASCII key is
pressed, the ASCII-code returned will be 0. A return value of 0 means that
no character is available.

!item [Availability:]
All (!nolink [GEMDOS]) versions.

!item [Group:]
Character input/output

!item [See also:]
(!link [Binding] [Bindings for Crawio]) ~ Cconin ~ Cconout ~ VT-52 terminal
(!ende_liste)


!begin_node Bindings for Crawio
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Crawio ( int16_t w );

!item [Assembler:]
!begin_verbatim
move.w    w,-(sp)      ; Offset 2
move.w    #6,-(sp)     ; Offset 0
trap      #1           ; GEMDOS
addq.l    #4,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node


!else


!begin_node Crawio
(!begin_liste) [Beschreibung]
!item [Name:]
Øcharacter raw input outputÆ - ermîglicht ungepufferte Ein-/Ausgaben.

!item [Gemdosnummer:]
6

!item [Deklaration:]
int32_t Crawio ( int16_t w );

!item [Beschreibung:]
Die GEMDOS-Routine Crawio fÅhrt ungepufferte Ein-Ausgaben durch. FÅr den
Parameter (!I)w(!i) gilt, wobei nur die unteren 8 Bits beachtet werden (und
alle anderen Bits 0 sein sollten):

!begin_xlist !short [sonst]
!item [Wert]
Bedeutung
!item [~]
~
!item [0xff]
Zeichen von Standardeingabe lesen
!item [sonst]
Zeichen auf Standardausgabe ausgeben
!end_xlist

(!B)Hinweis:(!b) Die Funktion arbeitet bei Umlenkung der Ein-/Ausgabe erst
ab (!nolink [GEMDOS])-Version 0.15 korrekt.

!item [Ergebnis:]
Falls der Parameter (!I)w(!i) den Wert 0xff besitzt, liefert die Funktion in
einem LONG den ASCII Code des eingelesenen Zeichens im niederwertige WORD
(Bits 0 .. 7) zurÅck. Wurde das Zeichen von der Tastatur gelesen, enthÑlt
das hîherwertige WORD (Bits 16 ... 23) den Scancode der Tastatur mit dem
Status der Shifttaste in den oberen 8 Bits wenn Bit 3 der Systemvariable
(!I)conterm(!i) gesetzt ist. Wenn eine Nicht-ASCII Taste gedrÅckt wurde,
wird als ASCII Code 0 zurÅckgeliefert.

Ein Wert von 0 bedeutet, daû kein Zeichen verfÅgbar ist.

!item [VerfÅgbar:]
Alle GEMDOS Versionen.

!item [Gruppe:]
Zeichenweise Ein-/Ausgabe

!item [Querverweis:]
(!link [Binding] [Bindings fÅr Crawio]) ~ Cconin ~ Cconout ~ VT-52-Terminal
(!ende_liste)


!begin_node Bindings fÅr Crawio
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Crawio ( int16_t w );

!item [Assembler:]
!begin_verbatim
move.w    w,-(sp)      ; Offset 2
move.w    #6,-(sp)     ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #4,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node


!endif
