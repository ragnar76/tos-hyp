!iflang [english]

!begin_node Srealloc
(!begin_liste) [Availability]
!item [Name:]
ØSreallocÆ - Allocate screen memory.
!item [Opcode:]
21
!item [Syntax:]
int32_t Srealloc ( int32_t len );

!item [Description:]
The (!nolink [GEMDOS]) routine Srealloc allocates a block of length
(!I)len(!i) bytes for the screen memory.

The screen memory is a block of the ST-RAM whose owner is the boot process.
The address of the screen memory (logbase or physbase) is not affected by
this function.

!item [(!nolink [Return]) value:]
The function returns (if (!I)len(!i) has the value -1) the maximum possible
size of the screen memory.


!item [Availability:] As of (!nolink [GEMDOS]) 0.30 ((!nolink [TOS]) 4).

!item [Group:]
System functions

!item [See also:] (!link [Binding] [Bindings for Srealloc])
(!ende_liste)


!begin_node Bindings for Srealloc
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Srealloc ( int32_t len );
!item [Assembler:]
!begin_verbatim
move.l    len,-(sp)    ; Offset 2
move.w    #21,-(sp)    ; Offset 0
trap      #1           ; GEMDOS
addq.l    #6,sp        ; Correct stack
!end_verbatim
(!ende_liste)
!end_node
!end_node

!else

!begin_node Srealloc
(!begin_liste) [Beschreibung]
!item [Name:]
ØSreallocÆ - Bildschirmspeicher allozieren.
!item [Gemdosnummer:]
21
!item [Deklaration:]
int32_t Srealloc ( int32_t len );

!item [Beschreibung:]
Die GEMDOS-Routine Srealloc alloziert fÅr den Bildschirmspeicher einen
Bereich der LÑnge (!I)len(!i) Bytes.

Der Bildschirmspeicher ist ein Block des ST-RAM, dessen Eigner der
Bootprozeû ist. Die Adresse des Bildschirmspeichers (logbase oder physbase)
wird von dieser Funktion nicht beeinfluût.

!item [Ergebnis:]
Die Funktion liefert (falls (!I)len(!i) den Wert -1 besitzt) die maximal
mîgliche Grîûe des Bildschirmspeichers zurÅck.


!item [VerfÅgbar:] ab GEMDOS 0.30 (TOS 4).

!item [Gruppe:]
Systemfunktionen

!item [Querverweis:] (!link [Binding] [Bindings fÅr Srealloc])
(!ende_liste)


!begin_node Bindings fÅr Srealloc
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Srealloc ( int32_t len );
!item [Assembler:]
!begin_verbatim
move.l    len,-(sp)    ; Offset 2
move.w    #21,-(sp)    ; Offset 0
trap      #1           ; GEMDOS aufrufen
addq.l    #6,sp        ; Stack korrigieren
!end_verbatim
(!ende_liste)
!end_node
!end_node

!endif
