!iflang [english]

!begin_node vqt_justified

(!begin_liste) [Availability]

!item [Name:]
ØInquire justified graphics textÆ - Obtain offsets for text characters from
a reference point.

!item [Opcode:]
132

!item [Syntax:]
void vqt_justified ( int16_t handle, int16_t x, int16_t y, int8_t *string, int16_t length,
                     int16_t word_space, int16_t char_space, int16_t *offsets );

!item [Description:]
The call vqt_justified obtains for each character of a graphics text string
the X- and Y-offsets from a given reference point. The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [x]
X-coordinate, (!U)and(!u)
!item [y]
Y-coordinate of the reference point for text alignment
!item [string]
Pointer to the character string
!item [length]
Text length in pixels (ref. to X-axis)
!item [word_space]
Inter-word spaces:
!begin_xlist !short [<> 0 =]
!item [~~ 0 =]
Do not stretch
!item [<> 0 =]
Stretch
!end_xlist
!item [char_space]
Inter-character spaces:
!begin_xlist !short [<> 0 =]
!item [~~ 0 =]
Do not stretch
!item [<> 0 =]
Stretch
!end_xlist
!item [offsets]
Contains the X- and Y-offsets for each character in text string
!end_xlist

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
PC-(!nolink [GEM]) as of Version 2.0.

!item [Group:]
Inquire functions

!item [See also:]
(!link [Binding] [Bindings for vqt_justified])

(!ende_liste)
!end_node



!begin_node Bindings for vqt_justified
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vqt_justified ( int16_t handle, int16_t x, int16_t y, int8_t *string, int16_t length,
                     int16_t word_space, int16_t char_space, int16_t *offsets );

!item [Binding:]
!begin_verbatim
void vqt_justified (int16_t handle, int16_t x, int16_t y,
                    int8_t *string, int16_t length,
                    int16_t word_space, int16_t char_space,
                    int16_t *offsets)
{
   int16_t i;

   intin[0] = word_space;
   intin[1] = char_space;

   ptsin[0] = x;
   ptsin[1] = y;
   ptsin[2] = length;
   ptsin[3] = 0;
   
   i = 0;
   while (string[i++])
      ;

   contrl[0] = 132;
   contrl[1] = 2;
   contrl[3] = i;
   contrl[6] = handle;
   pooff = offsets;

   vdi ();

   pooff = ptsout;
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]   !! 132   # Function Opcode
contrl+2  !! contrl[1]   !! 2     # Entry in ptsin
contrl+4  !! contrl[2]   !! n     # Entry in ptsout
contrl+6  !! contrl[3]   !! 2+n   # Entry in intin
contrl+8  !! contrl[4]   !! 0     # Entry in intout
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! word_space
intin+2   !! intin[1]    !! char_space
intin+4   !! intin[2]    !! string[0..n+1]
ptsin     !! ptsin[0]    !! x
ptsin+2   !! ptsin[1]    !! y
ptsin+4   !! ptsin[2]    !! length
ptsin+6   !! ptsin[3]    !! 0
ptsout    !! ptsout[...] !! offsets[...]
!end_table

(!ende_liste)
!end_node

!else

!begin_node vqt_justified

(!begin_liste) [Beschreibung]

!item [Name:]
ØInquire justified graphics textÆ - Offsets von einem Ausrichtungspunkt
erfragen.

!item [VDI-Nummer:]
132

!item [Deklaration:]
void vqt_justified ( int16_t handle, int16_t x, int16_t y, int8_t *string, int16_t length,
                     int16_t word_space, int16_t char_space, int16_t *offsets );

!item [Beschreibung:]
Die Funktion ermittelt fÅr jedes Zeichen eines Strings die x- und y-Offsets
von einem gegebenen Ausrichtungspunkt. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [x]
x-Koordinate
!item [y]
y-Koordinate des Punktes fÅr die Textausrichtung
!item [string]
Zeiger auf die Zeichenkette
!item [length]
TextlÑnge in Pixeln (bzgl. x-Achse)
!item [word_space]
WortzwischenrÑume
!begin_xlist !short [<> 0 =]
!item [~~ 0 =]
nicht dehnen
!item [<> 0 =]
dehnen
!end_xlist
!item [char_space]
ZeichenzwischenrÑume
!begin_xlist !short [<> 0 =]
!item [~~ 0 =]
nicht dehnen
!item [<> 0 =]
dehnen
!end_xlist
!item [offsets]
enthÑlt fÅr jedes Zeichen im String den x- und y-Offset
!end_xlist

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
PC-(!nolink [GEM]) ab Version 2.0

!item [Gruppe:]
Auskunftsfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vqt_justified])

(!ende_liste)
!end_node



!begin_node Bindings fÅr vqt_justified
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vqt_justified ( int16_t handle, int16_t x, int16_t y, int8_t *string, int16_t length,
                     int16_t word_space, int16_t char_space, int16_t *offsets );

!item [Umsetzung:]
!begin_verbatim
void vqt_justified (int16_t handle, int16_t x, int16_t y,
                    int8_t *string, int16_t length,
                    int16_t word_space, int16_t char_space,
                    int16_t *offsets)
{
   int16_t i;

   intin[0] = word_space;
   intin[1] = char_space;

   ptsin[0] = x;
   ptsin[1] = y;
   ptsin[2] = length;
   ptsin[3] = 0;
   
   i = 0;
   while (string[i++])
      ;

   contrl[0] = 132;
   contrl[1] = 2;
   contrl[3] = i;
   contrl[6] = handle;
   pooff = offsets;

   vdi ();

   pooff = ptsout;
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 132   # Opcode der Funktion
contrl+2  !! contrl[1]   !! 2     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! n     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 2+n   # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! word_space
intin+2   !! intin[1]    !! char_space
intin+4   !! intin[2]    !! string[0..n+1]
ptsin     !! ptsin[0]    !! x
ptsin+2   !! ptsin[1]    !! y
ptsin+4   !! ptsin[2]    !! length
ptsin+6   !! ptsin[3]    !! 0
ptsout    !! ptsout[...] !! offsets[...]
!end_table

(!ende_liste)
!end_node

!endif
