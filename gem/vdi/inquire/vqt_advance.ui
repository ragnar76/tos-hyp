!iflang [english]

!begin_node vqt_advance

(!begin_liste) [Availability]

!item [Name:]
ØInquire outline text advance placement vectorÆ - Obtain position for the
next vector character.

!item [Opcode:]
247

!item [Syntax:]
void vqt_advance ( int16_t handle, int16_t ch, int16_t *x_advance,
                   int16_t *y_advance, int16_t *remx, int16_t *remy );

!item [Description:]
The call vqt_advance calculates offsets (advance vector and remainder) to be
able to write the next character of a string at the correct position. The
following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [ch]
Character of interest
!item [x_advance]
X-spacing in pixels
!item [y_advance]
Y-spacing in pixels
!item [remx]
X-decimal remainder (mod 16384)
!item [remy]
Y-decimal remainder (mod 16384)
!end_xlist

(!B)Notes:(!b) (!I)x_advance(!i) and (!I)y_advance(!i) added to the position
where the last character was rendered gives the place where to draw the next
character. The vector works in all directions and with all text rotations.

The function is required particularly when the angle for text rotation is
anything but 0, 90, 180 or 270 degrees.

The returned values refer only to the spacing that is used for the positioning
of the next character, i.e. (!I)x_advance(!i) does (!I)not(!i) include any
parts of a character that overhangs the em-square.

The (!I)remx(!i) and (!I)remy(!i) remainders should be summed by the
application outputting the text and used to nudge the advance vector by a
pixel when required.
               

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
FSMGDOS, as of SpeedoGDOS 4.00 and from NVDI 3.00 on.

!item [Group:]
Inquire functions

!item [See also:]
(!link [Binding] [Bindings for vqt_advance]) ~ vqt_advance32 ~ vst_rotation ~
SpeedoGDOS ~ NVDI

(!ende_liste)
!end_node



!begin_node Bindings for vqt_advance
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vqt_advance ( int16_t handle, int16_t ch, int16_t *x_advance,
                   int16_t *y_advance, int16_t *remx, int16_t *remy );

!item [Binding:]
!begin_verbatim
void vqt_advance ( int16_t handle, int16_t ch,
                   int16_t *x_advance, int16_t *y_advance,
                   int16_t *remx, int16_t *remy );
{
   intin[0] = ch;

   contrl[0] = 247;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   x_advance = ptsout[0];
   y_advance = ptsout[1];
   remx      = ptsout[2];
   remy      = ptsout[3];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 247   # Function Opcode
contrl+2  !! contrl[1]    !! 0     # Entry in ptsin
contrl+4  !! contrl[2]    !! 4     # Entry in ptsout
contrl+6  !! contrl[3]    !! 1     # Entry in intin
contrl+8  !! contrl[4]    !! 0     # Entry in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! ch
ptsout    !! ptsout[0]    !! x_advance
ptsout+2  !! ptsout[1]    !! y_advance
ptsout+4  !! ptsout[2]    !! remx
ptsout+6  !! ptsout[3]    !! remy
!end_table

The returned values refer only to the spacing that is used for the positioning
of the next character, i.e. (!I)x_advance(!i) does (!I)not(!i) include any
parts of a character that overhangs the em-square.

(!ende_liste)
!end_node

!else

!begin_node vqt_advance

(!begin_liste) [Beschreibung]

!item [Name:]
ØInquire Outline text advance placement vectorÆ - Position fÅr nÑchstes
Vektor-Zeichen ermitteln.

!item [VDI-Nummer:]
247

!item [Deklaration:]
void vqt_advance ( int16_t handle, int16_t ch, int16_t *x_advance,
                   int16_t *y_advance, int16_t *remx, int16_t *remy );

!item [Beschreibung:]
Die Funktion berechnet Offsets, um das nÑchste Zeichen eines Strings an die
richtige Position schreiben zu kînnen. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [ch]
interessierendes Zeichen
!item [x_advance]
x-Abstand in Pixeln
!item [y_advance]
y-Abstand in Pixeln
!item [remx]
x-Nachkommarest (mod 16384)
!item [remy]
y-Nachkommarest (mod 16384)
!end_xlist

(!B)Hinweis:(!b) Die Funktion wird inbesondere dann benîtigt, wenn der
Winkel fÅr Textrotationen ein anderer als 0, 90, 180 oder 270 Grad ist.

Bei den gelieferten Werten handelt es sich nur um den Abstand, der fÅr die
Positionierung des nÑchsten Zeichens benutzt wird, d.h. (!I)x_advance(!i)
beinhaltet (!I)keine(!i) ZeichenÅberhÑnge.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
FSMGDOS, ab SpeedoGDOS 4.00 und ab NVDI 3.00. 

!item [Gruppe:]
Auskunftsfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vqt_advance]) ~ vqt_advance ~ vst_rotation ~
SpeedoGDOS ~ NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vqt_advance
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vqt_advance ( int16_t handle, int16_t ch, int16_t *x_advance,
                   int16_t *y_advance, int16_t *remx, int16_t *remy );

!item [Umsetzung:]
!begin_verbatim
void vqt_advance ( int16_t handle, int16_t ch,
                   int16_t *x_advance, int16_t *y_advance,
                   int16_t *remx, int16_t *remy );
{
   intin[0] = ch;

   contrl[0] = 247;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   x_advance = ptsout[0];
   y_advance = ptsout[1];
   remx      = ptsout[2];
   remy      = ptsout[3];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 247   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 4     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0]     !! ch
ptsout    !! ptsout[0]    !! x_advance
ptsout+2  !! ptsout[1]    !! y_advance
ptsout+4  !! ptsout[2]    !! remx
ptsout+6  !! ptsout[3]    !! remy
!end_table

Es handelt sich bei x_advance und y_advance nur um den Abstand, der fÅr die
Positionierung des nÑchsten Zeichens benutzt wird, d.h. x_advance beinhaltet
(!I)keine(!i) ZeichenÅberhÑnge.

(!ende_liste)
!end_node

!endif
