!iflang [english]

!begin_node vqt_f_extent

(!begin_liste) [Availability]

!item [Name:]
ØInquire outline font text extentÆ - Obtain the length of a string in a
vector font.

!item [Opcode:]
240

!item [Syntax:]
void vqt_f_extent ( int16_t handle, int8_t *string, int16_t *extent );

!item [Description:]
The call vqt_f_extent adds the character widths of a string of text in a
vector font, working to a precision of 1/65536 pixels, and returns the bounding
box needed to enclose a text string (in pixels). The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [string]
Character string
!item [extent[0!]]
X-coordinate, (!U)and(!u)
!item [extent[1!]]
Y-coordinate of the bottom left corner
!item [extent[2!]]
X-coordinate, (!U)and(!u)
!item [extent[3!]]
Y-coordinate of the bottom right corner
!item [extent[4!]]
X-coordinate, (!U)and(!u)
!item [extent[5!]]
Y-coordinate of the top right corner
!item [extent[6!]]
X-coordinate, (!U)and(!u)
!item [extent[7!]]
Y-coordinate of the top left corner
!end_xlist

(!B)Note:(!b) Unlike vqt_extent, this function also respects possible
(!link [kerning][Kerning]) values, and takes the remainders generated by outline
fonts into account, so providing far more accurate results.

(!B)Attention:(!b) This function does not return the bounding box of the string.
It adds only the advance widths of the characters. You should use this function to
determine the position of the text cursor. If you would like to use it to determine the maximum size of the
redraw area you should add the maximum character width the leftmost and
rightmost coordinates of the box (if the text is skewed you should also add the
skewing offset). To determine a more exact bounding box you should call
vqt_real_extent.


(!B)Important:(!b)
If the text is rotated by 90, 180 or 270 degrees, this function works as
senselessly as vqt_extent: It changes the reference point of the coordinate
system. In all other cases it works as you would expect it to.

As of (!nolink [NVDI]) 3 it is recommended to use the function vqt_real_extent
instead.
               
!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
As of SpeedoGDOS 4.00 and from NVDI 3.00 onwards.

!item [Group:]
Inquire functions

!item [See also:]
(!link [Binding] [Bindings for vqt_f_extent]) ~ vqt_extent ~ SpeedoGDOS ~ NVDI

(!ende_liste)
!end_node



!begin_node Bindings for vqt_f_extent
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vqt_f_extent ( int16_t handle, int8_t *string, int16_t *extent );

!item [Binding:]
!begin_verbatim
void vqt_f_extent (int16_t handle, int8_t *string,
                   int16_t *extent)
{
   intin[0..n-1] = string[0..n-1];

   contrl[0] = 240;
   contrl[1] = 0;
   contrl[3] = n;
   contrl[6] = handle;

   vdi ();

   extent[0..7] = ptsout[0..7];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]     !! 240   # Function Opcode
contrl+2  !! contrl[1]     !! 0     # Entry in ptsin
contrl+4  !! contrl[2]     !! 4     # Entry in ptsout
contrl+6  !! contrl[3]     !! n     # Entry in intin
contrl+8  !! contrl[4]     !! 0     # Entry in intout
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..n-1] !! string[0..n-1]
ptsout    !! ptsout[0..7]  !! extent[0..7]
!end_table

(!ende_liste)
!end_node

!else

!begin_node vqt_f_extent

(!begin_liste) [Beschreibung]

!item [Name:]
ØInquire Outline-Font Text ExtentÆ - ermittelt die LÑnge eines Strings im
Vektor-Zeichensatz.

!item [VDI-Nummer:]
240

!item [Deklaration:]
void vqt_f_extent ( int16_t handle, int8_t *string, int16_t *extent );

!item [Beschreibung:]
Die Funktion addiert die Zeichenweiten eines Strings. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [string]
Adresse der Zeichenkette
!item [extent[0!]]
x-Koordinate
!item [extent[1!]]
y-Koordinate der unteren linken Ecke
!item [extent[2!]]
x-Koordinate
!item [extent[3!]]
y-Koordinate der unteren rechten Ecke
!item [extent[4!]]
x-Koordinate
!item [extent[5!]]
y-Koordinate der oberen rechten Ecke
!item [extent[6!]]
x-Koordinate
!item [extent[7!]]
y-Koordinate der oberen linken Ecke 
!end_xlist

(!B)Hinweis:(!b) Im Gegensatz zu vqt_extent beachtet die Funktion auch
etwaige Kerning-Werte.

(!B)Achtung:(!b) Diese Funktion liefert (!I)nicht(!i) das den Text umgebende
Rechteck. Sie addiert nur die Schrittweiten und beachtet auch nicht linke
oder rechte ZeichenÅberhÑnge. Sie ist im Prinzip nur zur
Cursor-Positionierung gedacht. Wer aber mit dieser Funktion die Grîûe eines
neuzuzeichnenden Bildbereiches ermitteln mîchte, muû links und rechts
sicherheitshalber die Breite des grîûten Zeichens hinzuaddieren (und die
Neigung beachten).

(!B)Vorsicht:(!b) Aus KompatibilitÑtsgrÅnden verhÑlt sich diese Funktion bei
90, 180 und 270 Grad genauso unsinnig wie das alte (!nolink [vqt_extent]) - der
Bezugspunkt wird geÑndert!

Ab (!nolink [NVDI])-3 empfiehlt sich stattdessen die Verwendung von vqt_real_extent.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.00 und ab NVDI 3.00

!item [Gruppe:]
Auskunftsfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vqt_f_extent]) ~ vqt_extent ~ SpeedoGDOS ~ NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vqt_f_extent
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vqt_f_extent ( int16_t handle, int8_t *string, int16_t *extent );

!item [Umsetzung:]
!begin_verbatim
void vqt_f_extent (int16_t handle, int8_t *string,
                   int16_t *extent)
{
   intin[0..n-1] = string[0..n-1];

   contrl[0] = 240;
   contrl[1] = 0;
   contrl[3] = n;
   contrl[6] = handle;

   vdi ();

   extent[0..7] = ptsout[0..7];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]     !! 240   # Opcode der Funktion
contrl+2  !! contrl[1]     !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]     !! 4     # EintrÑge in ptsout
contrl+6  !! contrl[3]     !! n     # EintrÑge in intin
contrl+8  !! contrl[4]     !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..n-1] !! string[0..n-1]
ptsout    !! ptsout[0..7]  !! extent[0..7]
!end_table

(!ende_liste)
!end_node

!endif
