!iflang [english]

!begin_node vs_clip

(!begin_liste) [Availability]

!item [Name:]
ØSet clipping rectangleÆ

!item [Opcode:]
129

!item [Syntax:]
void vs_clip ( int16_t handle, int16_t clip_flag, int16_t *pxyarray );

!item [Description:]
The call vs_clip limits all graphical output to a
               given region. The following apply:

!begin_xlist !short [pxyarray+0+]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [clip_flag]
!begin_xlist !short
!item [0 =]
Clipping off
!item [1 =]
Clipping on
!end_xlist
!item [pxyarray[0!]]
X-coordinate, (!U)and(!u)
!item [(!nolink [pxyarray])[1!]]
Y-coordinate of a rectangle corner point
!item [(!nolink [pxyarray])[2!]]
X-coordinate, (!U)and(!u)
!item [(!nolink [pxyarray])[3!]]
Y-coordinate of the diagonally opposite corner point
!end_xlist


(!B)Note:(!b) Do not switch off clipping, because a graphic object which is
drawn outside of the visible screen area will overwrite memory or cause a bus
error.

If the working area is to include the complete screen, it is advisable to set
the screen dimensions for vs_clip obtained from v_opnvwk.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all drivers.

!item [Group:]
Control functions

!item [See also:]
(!link [Binding] [Bindings for vs_clip]) ~ Clipping

(!ende_liste)
!end_node



!begin_node Bindings for vs_clip
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vs_clip ( int16_t handle, int16_t clip_flag, int16_t *pxyarray );

!item [Binding:]
!begin_verbatim
void vs_clip (int16_t handle, int16_t clip_flag,
              int16_t *pxyarray)
{
   intin[0] = clip_flag;
   ptsin[0..3] = pxyarray[0..3];

   contrl[0] = 129;
   contrl[1] = 2;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]   !! 129   # Function opcode
contrl+2  !! contrl[1]   !! 2     # Entry in ptsin
contrl+4  !! contrl[2]   !! 0     # Entry in ptsout
contrl+6  !! contrl[3]   !! 1     # Entry in intin
contrl+8  !! contrl[4]   !! 0     # Entry in intout
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! clip_flag
ptsin     !! ptsin[0..3] !! pxyarray[0..3]
!end_table

(!ende_liste)
!end_node

!else

!begin_node vs_clip

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet clipping RectangleÆ - setzt Begrenzungsrechteck.

!item [VDI-Nummer:]
129

!item [Deklaration:]
void vs_clip ( int16_t handle, int16_t clip_flag, int16_t *pxyarray );

!item [Beschreibung:]
Die Funktion begrenzt alle grafischen Ausgaben auf einen bestimmten Bereich.
Es gilt:

!begin_xlist !short [pxyarray+0+]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [clip_flag]
!begin_xlist !short
!item [0 =]
Clipping einschalten
!item [1 =]
(!nolink [Clipping]) ausschalten
!end_xlist
!item [pxyarray[0!]]
x-Koordinate
!item [(!nolink [pxyarray])[1!]]
y-Koordinate des Eckpunktes
!item [(!nolink [pxyarray])[2!]]
x-Koordinate
!item [(!nolink [pxyarray])[3!]]
y-Koordinate der diagonal gegenÅberliegenden Ecke
!end_xlist

(!B)Hinweis:(!b) Das (!nolink [Clipping]) sollte aus SicherheitsgrÅnden immer
eingeschaltet werden, da die Ausgaberoutinen beim öberschreiten der
Bildschirmgrenzen sehr schnell groûe Speicherbereiche Åberschreiben, was zu
unerfreulichen AbtÅrzen und DatenmÅll fÅhren kann.

Wenn der Arbeitsbereich den ganzen Bildschirm einbeziehen soll, ist es
ratsam, bei vs_clip() die bei v_opnvwk() erhaltenen Bildschirmausmaûe
einzustellen.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all drivers.

!item [Gruppe:]
Kontrollfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vs_clip]) ~ Clipping

(!ende_liste)
!end_node



!begin_node Bindings fÅr vs_clip
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vs_clip ( int16_t handle, int16_t clip_flag, int16_t *pxyarray );

!item [Umsetzung:]
!begin_verbatim
void vs_clip (int16_t handle, int16_t clip_flag,
              int16_t *pxyarray)
{
   intin[0] = clip_flag;
   ptsin[0..3] = pxyarray[0..3];

   contrl[0] = 129;
   contrl[1] = 2;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 129   # Opcode der Funktion
contrl+2  !! contrl[1]   !! 2     # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! 1     # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0     # EintrÑge in intout
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! clip_flag
ptsin     !! ptsin[0..3] !! pxyarray[0..3]
!end_table

(!ende_liste)
!end_node

!endif
