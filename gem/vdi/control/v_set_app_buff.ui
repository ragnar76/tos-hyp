!iflang [english]

!begin_node v_set_app_buff

(!begin_liste) [Availability]

!item [Name:]
ØReserve Bezier workspaceÆ - Designate memory for generating Bezier splines.

!item [Opcode:]
-1

!item [Syntax:]
void v_set_app_buff ( int16_t handle, int16_t **address, int16_t nparagraphs );

!item [Description:]
The call v_set_app_buff designates buffer memory for use by the Bezier spline
generation routines. The following apply:

!begin_xlist !short [nparagraphs]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [address]
Address of the buffer
!item [nparagraphs]
Buffer size in 16-byte blocks
!end_xlist

(!B)Note:(!b) If Bezier functions are called then the spline data will be stored
in this buffer. Before program termination one should use this function to set a
NULL pointer as a buffer of size 0. The application is then responsible for
deallocating the reserved memory.

If this function is not called by the application then GDOS will create its own
buffer of around 8 kbyte.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
FONTGDOS, FSMGDOS, as of (!nolink [GEM])/3 Release 3.1, from SpeedoGDOS 4.00 and
from NVDI 2.10 on. The function surfaces in the (paper) documentation for NVDI 2.10,
but no longer in all remaining descriptions.

!item [Group:]
Control functions

!item [See also:]
(!link [Binding] [Bindings for v_set_app_buff]) ~ v_bez_on ~ v_bez_off ~ v_bez ~
v_bez_fill ~ v_bez_qual ~ (!link [GDOS][About the GDOS])  ~ SpeedoGDOS

(!ende_liste)
!end_node


!begin_node Bindings for v_set_app_buff
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_set_app_buff ( int16_t handle, int16_t **address, int16_t nparagraphs );

!item [Binding:]
!begin_verbatim
void v_set_app_buff ( int16_t handle, int16_t **address,
                      int16_t nparagraphs )
{
   intin[0..1] = address;
   intin[2] = nparagraphs;

   contrl[0] = -1;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[5] = 6;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]     !! -1    # Function opcode
contrl+2  !! contrl[1]     !! 0     # Entry in ptsin
contrl+4  !! contrl[2]     !! 0     # Entry in ptsout
contrl+6  !! contrl[3]     !! 3     # Entry in intin
contrl+8  !! contrl[4]     !! 0     # Entry in intout
contrl+10 !! contrl[5]     !! 6     # Sub-opcode
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..1]   !! address
intin+4   !! intin[2]      !! nparagraphs
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_set_app_buff

(!begin_liste) [Beschreibung]

!item [Name:]
ØReserve Bezier workspaceÆ - Speicher fÅr Bezier-Spline-Erzeugung
reservieren.

!item [VDI-Nummer:]
-1

!item [Deklaration:]
void v_set_app_buff ( int16_t handle, int16_t **address, int16_t nparagraphs );

!item [Beschreibung:]
Die Funktion legt den Puffer fÅr die Bezier-Spline Erzeugung fest. Es gilt:

!begin_xlist !short [nparagraphs]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [adress]
Adresse des Puffers
!item [nparagraphs]
Grîûe des Puffers in 16-Byte Blîcken
!end_xlist

(!B)Hinweis:(!b) Werden Bezier-Funktionen aufgerufen, so werden in diesem
Puffer die Spline-Daten abgelegt. Vor Programmende sollte man mit dieser
Funktion einen Null-Zeiger als Puffer mit Grîûe 0 setzen.

Wenn diese Funktion von der Applikation nicht aufgerufen wird, legt GDOS
einen eigenen Puffer von ca. 8 Kbyte an.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
FONTGDOS, FSMGDOS, ab GEM/3 Release 3.1, ab SpeedoGDOS 4.00 und ab NVDI 2.10.
Die Funktion taucht in der Doku (Papierform) zu NVDI 2.10 auf. Bei allen
restlichen Beschreibungen nicht mehr.

!item [Gruppe:]
Kontrollfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_set_app_buff]) ~ v_bez_on ~ v_bez_off ~ v_bez ~
v_bez_fill ~ v_bez_qual ~ (!link [GDOS][Das GDOS])  ~ SpeedoGDOS

(!ende_liste)
!end_node


!begin_node Bindings fÅr v_set_app_buff
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_set_app_buff ( int16_t handle, int16_t **address, int16_t nparagraphs );

!item [Umsetzung:]
!begin_verbatim
void v_set_app_buff ( int16_t handle, int16_t **address,
                      int16_t nparagraphs )
{
   intin[0..1] = address;
   intin[2] = nparagraphs;

   contrl[0] = -1;
   contrl[1] = 0;
   contrl[3] = 3;
   contrl[5] = 6;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]     !! -1    # Opcode der Funktion
contrl+2  !! contrl[1]     !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]     !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]     !! 3     # EintrÑge in intin
contrl+8  !! contrl[4]     !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]     !! 6     # Unterfunktion
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0..1]   !! address
intin+4   !! intin[2]      !! nparagraphs
!end_table

(!ende_liste)
!end_node

!endif
