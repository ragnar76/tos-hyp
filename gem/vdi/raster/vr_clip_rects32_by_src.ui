!iflang [english]

!begin_node vr_clip_rects32_by_src

(!begin_liste) [Availability]

!item [Name:]
Ø(!nolink [Clip]) rectangles by source rectangleÆ

!item [Opcode:]
171 (Sub-Opcode 3)

!item [Syntax:]
int16_t vr_clip_rects32_by_src ( int16_t handle, RECT32 *src_clip_rect,
                            RECT32 *src_rect, RECT16 *dst_rect,
                            RECT32 *clipped_src_rect,
                            RECT32 *clipped_dst_rect );

!item [Description:]
The call vr_clip_rects32_by_src cuts the source rectangle with a clipping
rectangle, using 32-bit coordinates (this function respects the rounding
behaviour of vr_transfer_bits). The following apply:

!begin_xlist !short [clipped_src_rect]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier

!item [src_clip_rect]
(!nolink [Clipping]) rectangle for the source (continuous coordinates, 32-bit)

!item [src_rect]
Source rectangle (continuous coordinates, 32-bit)

!item [dst_rect]
Destination rectangle (continuous coordinates, 32-bit)

!item [clipped_src_rect]
Clipped source rectangle (continuous coordinates, 32-bit)

!item [clipped_dst_rect]
Clipped destination rectangle (continuous coordinates, 32-bit)

!end_xlist


!item [(!nolink [Return]) value:]
0: No clipping of the rectangles (!nl)
1: All OK

!item [Availability:]
As of NVDI 5.02.

If the driver offers the new clip functions, then bit 2 will be set in
(!I)work_out[30](!i) in the extended parameters of vq_extnd.

!item [Group:]
Raster functions

!item [See also:]
(!link [Binding] [Bindings for vr_clip_rects32_by_src]) ~ vr_transfer_bits

(!ende_liste)
!end_node



!begin_node Bindings for vr_clip_rects32_by_src
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vr_clip_rects32_by_src ( int16_t handle, RECT32 *src_clip_rect,
                            RECT32 *src_rect, RECT16 *dst_rect,
                            RECT32 *clipped_src_rect,
                            RECT32 *clipped_dst_rect );

!item [Binding:]
!begin_verbatim
int16_t vr_clip_rects32_by_src ( int16_t handle,
                                 RECT32 *src_clip_rect,
                                 RECT32 *src_rect,
                                 RECT16 *dst_rect,
                                 RECT32 *clipped_src_rect,
                                 RECT32 *clipped_dst_rect )
{
   ptsin[0..7] = src_clip_rect; 
   ptsin[8..15] = src_rect; 
   ptsin[16..23] = dst_rect; 

   contrl[0] = 171;
   contrl[1] = 12;
   contrl[3] = 0;
   contrl[5] = 3;
   contrl[6] = handle;

   vdi ();

   clipped_src_rect = ptsout[0..7];   
   clipped_dst_rect = ptsout[8..15];   

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 171   # Function opcode
contrl+2  !! contrl[1]    !! 12    # Entry in ptsin
contrl+4  !! contrl[2]    !! 8     # Entry in ptsout
contrl+6  !! contrl[3]    !! 0     # Entry in intin
contrl+8  !! contrl[4]    !! 1     # Entry in intout
contrl+10 !! contrl[5]    !! 3     # Sub-opcode
contrl+12 !! contrl[6]    !! handle
ptsin     !! ptsin[0..7]  !! src_clip_rect
ptsin+16  !! ptsin[8..15] !! src_rect
ptsin+32  !! ptsin[16..23]!! dst_rect
ptsout    !! ptsout[0..7] !! clipped_src_rect
ptsout+16 !! ptsout[8..15] !! clipped_dst_rect
intout    !! intout[0]    !! Return value
!end_table

(!ende_liste)
!end_node

!else

!begin_node vr_clip_rects32_by_src

(!begin_liste) [Beschreibung]

!item [Name:]
ØClip Rects By Source RectangleÆ 

!item [VDI-Nummer:]
171 (Unterfunktion 3)

!item [Deklaration:]
int16_t vr_clip_rects32_by_src ( int16_t handle, RECT32 *src_clip_rect,
                            RECT32 *src_rect, RECT16 *dst_rect,
                            RECT32 *clipped_src_rect,
                            RECT32 *clipped_dst_rect );

!item [Beschreibung:]
Quellrechteck mit einem Clipping-Rechteck schneiden und das
Zielrechteck anpassen (die Funktion berÅcksichtigt das
Rundungsverhalten von vr_transfer_bits).

!begin_xlist !short [clipped_src_rect]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation

!item [src_clip_rect]
(!nolink [Clipping])-Rechteck fÅr das Quelle (kontinuierliche Koordinaten)

!item [src_rect]
Quellrechteck (kontinuierliche Koordinaten)

!item [dst_rect]
Zielrechteck (kontinuierliche Koordinaten)

!item [clipped_src_rect]
geschnittenes Quellrechteck (kontinuierliche Koordinaten)

!item [clipped_dst_rect]
geschnittenes Zielrechteck (kontinuierliche Koordinaten)

!end_xlist


!item [Ergebnis:]
0: kein Schnitt der Rechtecke (!nl)
1: alles in Ordnung

!item [VerfÅgbar:]
ab NVDI 5.02

Wenn der Treiber die neuen Clipfunktionen
anbietet, ist bei den erweiterten Parametern von vq_extnd in
work_out[30] Bit 2 gesetzt.

!item [Gruppe:]
Rasterfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vr_clip_rects32_by_src]) ~ vr_transfer_bits

(!ende_liste)
!end_node



!begin_node Bindings fÅr vr_clip_rects32_by_src
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vr_clip_rects32_by_src ( int16_t handle, RECT32 *src_clip_rect,
                            RECT32 *src_rect, RECT16 *dst_rect,
                            RECT32 *clipped_src_rect,
                            RECT32 *clipped_dst_rect );

!item [Umsetzung:]
!begin_verbatim
int16_t vr_clip_rects32_by_src ( int16_t handle,
                                 RECT32 *src_clip_rect,
                                 RECT32 *src_rect,
                                 RECT16 *dst_rect,
                                 RECT32 *clipped_src_rect,
                                 RECT32 *clipped_dst_rect )
{
   ptsin[0..7] = src_clip_rect; 
   ptsin[8..15] = src_rect; 
   ptsin[16..23] = dst_rect; 

   contrl[0] = 171;
   contrl[1] = 12;
   contrl[3] = 0;
   contrl[5] = 3;
   contrl[6] = handle;

   vdi ();

   clipped_src_rect = ptsout[0..7];   
   clipped_dst_rect = ptsout[8..15];   

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 171   # Opcode der Funktion
contrl+2  !! contrl[1]    !! 12    # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 8     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 0     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 1     # EintrÑge in intout
contrl+10 !! contrl[5]    !! 3     # Sub-Opcode
contrl+12 !! contrl[6]    !! handle
ptsin     !! ptsin[0..7]  !! src_clip_rect
ptsin+16  !! ptsin[8..15] !! src_rect
ptsin+32  !! ptsin[16..23]!! dst_rect
ptsout    !! ptsout[0..7] !! clipped_src_rect
ptsout+16 !! ptsout[8..15] !! clipped_dst_rect
intout    !! intout[0]    !! RÅckgabewert
!end_table

(!ende_liste)
!end_node

!endif
