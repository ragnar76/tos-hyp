!iflang [english]

!begin_node v_dspcur

(!begin_liste) [Availability]

!item [Name:]
ØPlace graphic cursor at locationÆ - Position the graphic cursor at the
specified position.

!item [Opcode:]
5 (Escape 18)

!item [Syntax:]
void v_dspcur ( int16_t handle, int16_t x, int16_t y );

!item [Description:]
The call v_dspcur sets the graphic cursor (mouse pointer) at a specified
position. The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [x]
New X-coordinate for mouse pointer
!item [y]
New Y-coordinate for mouse pointer
!end_xlist

(!B)Note:(!b) The function is only available on devices that permit position
input, such as mouse, joystick or trackball, for instance.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Special graphic functions

!item [See also:]
(!link [Binding] [Bindings for v_dspcur])

(!ende_liste)
!end_node



!begin_node Bindings for v_dspcur
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_dspcur ( int16_t handle, int16_t x, int16_t y );

!item [Binding:]
!begin_verbatim
void v_dspcur (int16_t handle, int16_t x, int16_t y)
{
   ptsin[0] = x;
   ptsin[1] = y;
  
   contrl[0] = 5;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[5] = 18;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 5     # Function opcode
contrl+2  !! contrl[1] !! 1     # Entry in ptsin
contrl+4  !! contrl[2] !! 0     # Entry in ptsout
contrl+6  !! contrl[3] !! 0     # Entry in intin
contrl+8  !! contrl[4] !! 0     # Entry in intout
contrl+10 !! contrl[5] !! 18    # Escape/Sub-opcode
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! x
ptsin+2   !! ptsin[1]  !! y
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_dspcur

(!begin_liste) [Beschreibung]

!item [Name:]
ØPlace Graphic Cursor at LocationÆ - positioniert den Grafikcursor an die
angegebene Position.

!item [VDI-Nummer:]
5 (Escape 18)

!item [Deklaration:]
void v_dspcur ( int16_t handle, int16_t x, int16_t y );

!item [Beschreibung:]
Die Funktion setzt den Grafikcursor an eine bestimmte Position. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [x]
neue x-Koordinate
!item [y]
neue y-Koordinate
!end_xlist

(!B)Hinweis:(!b) Die Funktion ist nur auf GerÑten verfÅgbar, die
Positionseingaben zulassen, also z.B. Maus, Joystick oder Trackball.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis. 

!item [VerfÅgbar:]
Supported by all screen drivers.

!item [Gruppe:]
Grafikspezial-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_dspcur])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_dspcur
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_dspcur ( int16_t handle, int16_t x, int16_t y );

!item [Umsetzung:]
!begin_verbatim
void v_dspcur (int16_t handle, int16_t x, int16_t y)
{
   ptsin[0] = x;
   ptsin[1] = y;
  
   contrl[0] = 5;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[5] = 18;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 5     # Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+10 !! contrl[5] !! 18    # Escape/Sub-Oopcode
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! x
ptsin+2   !! ptsin[1]  !! y
!end_table

(!ende_liste)
!end_node

!endif
