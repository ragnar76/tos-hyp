!iflang [english]

!begin_node v_bit_image

(!begin_liste) [Availability]

!item [Name:]
ØOutput bit image fileÆ - Output a bit image file on the printer.

!item [Opcode:]
5 (Escape 23)

!item [Syntax:]
void v_bit_image ( int16_t handle, CONST int8_t *filename, int16_t aspect,
                   int16_t x_scale, int16_t y_scale, int16_t h_align, int16_t v_align,
                   int16_t *xyarray );

!item [Description:]
The call v_bit_image permits print output of the image data stored in a
bit-Image (IMG) file. The following apply:

!begin_xlist !short [xyarray+0+]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [filename]
Pointer to filename
!item [aspect]
Aspect ratio:
!begin_xlist !short
!item [0 =]
Ignore aspect ratio
!item [1 =]
Respect pixel aspect ratio
!end_xlist
!item [x_scale]
Scaling of the X-axis, (!U)and(!u)
!item [y_scale]
Scaling of the Y-axis, for both of which the following apply:
!begin_xlist !short
!item [0 =]
Rational (exact)
!item [1 =]
Integer
!end_xlist
!item [h_align]
(!B)Horizontal alignment:(!b)
!begin_xlist
!item [0 =]
Left
!item [1 =]
Center
!item [2 =]
Right
!end_xlist
!item [v_align]
(!B)Vertical alignment:(!b)
!begin_xlist !short
!item [0 =]
Top
!item [1 =]
Middle
!item [2 =]
Bottom
!end_xlist
!item [xyarray[0!]]
X-coordinate, (!U)and(!u)
!item [xyarray[1!]]
Y-coordinate of top left corner of the output rectangle
!item [xyarray[2!]]
X-coordinate, (!U)and(!u)
!item [xyarray[3!]]
Y-coordinate of the bottom right corner of the output recangle
!end_xlist

(!B)Notes:(!b) If the aspect ratio in (!I)aspect(!i) is honoured, then
circles will appear as circles, squares as squares etc. The image will then
be stretched correspondingly on the output device. In some circumstances this
can look bad when, say, fine dot rasters are stretched or com!-pressed. If the
ratio is ignored, it is possible that circles will become ellipses etc.

If rational scaling is used, the image will appear at the coordinates given by
the (!nolink [VDI]) format rectangle pointed to by (!I)xyarray(!i); if integer
scaling is used, the image will be displayed as large as possible within the
given coordinates, using (!I)h_align(!i) and (!I)v_align(!i) for justifying the
image.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all printer, metafile, and memory drivers.

!item [Group:]
Special graphic functions

!item [See also:]
(!link [Binding] [Bindings for v_bit_image]) ~ v_xbit_image ~
(!link [GDOS][About the GDOS])  ~
(!link [XIMG format][The XIMG format for pixel images])

(!ende_liste)
!end_node



!begin_node Bindings for v_bit_image
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_bit_image ( int16_t handle, CONST int8_t *filename, int16_t aspect,
                   int16_t x_scale, int16_t y_scale, int16_t h_align, int16_t v_align,
                   int16_t *xyarray );

!item [Binding:]
!begin_verbatim
void v_bit_image (int16_t handle, CONST int8_t *filename,
                  int16_t aspect, int16_t x_scale,
                  int16_t y_scale, int16_t h_align,
                  int16_t v_align, int16_t *xyarray)
{
   int16_t tmp;

   ptsin[0..3] = xyarray[0..3];
   intin[0] = aspect;
   intin[1] = x_scale;
   intin[2] = y_scale;
   intin[3] = h_align;
   intin[4] = v_align;

   tmp = 5;
   while (intin[tmp++] = *filename++)
      ;

   contrl[0] = 5;
   contrl[1] = 2;
   contrl[3] = --tmp;
   contrl[5] = 23;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]     !! 5     # Function opcode
contrl+2  !! contrl[1]     !! 2     # Entry in ptsin
contrl+4  !! contrl[2]     !! 0     # Entry in ptsout
contrl+6  !! contrl[3]     !! n+5   # Entry in intin
contrl+8  !! contrl[4]     !! 0     # Entry in intout
contrl+10 !! contrl[5]     !! 23    # Escape/Sub-opcode
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0]      !! aspect
intin+2   !! intin[1]      !! x_scale
intin+4   !! intin[2]      !! y_scale
intin+6   !! intin[3]      !! h_align
intin+8   !! intin[4]      !! v_align
intin+10  !! intin[5..n+4] !! filename[0..n-1]
ptsin     !! ptsin[0..3]   !! xyarray[0..3]
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_bit_image

(!begin_liste) [Beschreibung]

!item [Name:]
ØOutput Bit Image FileÆ - gibt ein Bit-Imagefile auf dem Drucker aus.

!item [VDI-Nummer:]
5 (Escape 23)

!item [Deklaration:]
void v_bit_image ( int16_t handle, CONST int8_t *filename, int16_t aspect,
                   int16_t x_scale, int16_t y_scale, int16_t h_align, int16_t v_align,
                   int16_t *xyarray );

!item [Beschreibung:]
Die Funktion erlaubt die Ausgabe der in einer Bit-Image (IMG) Datei
gespeicherten Bild-Information. Es gilt:

!begin_xlist !short [xyarray+0+]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [filename]
Zeiger auf Datei-Namen
!item [aspect]
Abbildungsmaûstab
!begin_xlist !short
!item [0 =]
wird ignoriert
!item [1 =]
Pixel werden berÅcksichtigt
!end_xlist
!item [x_scale]
Skalierung der x-Achse
!item [y_scale]
Skalierung der y-Achse, dabei gilt jeweils:
!begin_xlist !short
!item [0 =]
rational (exakter)
!item [1 =]
ganzzahlig
!end_xlist
!item [h_align]
(!B)horizontale Ausrichtung(!b)
!begin_xlist
!item [0 =]
linksbÅndig
!item [1 =]
zentriert
!item [2 =]
rechtsbÅndig
!end_xlist
!item [v_align]
(!B)vertikale (!nolink [Ausrichtung])(!b)
!begin_xlist !short
!item [0 =]
oben
!item [1 =]
zentriert
!item [2 =]
unten
!end_xlist
!item [xyarray[0!]]
x-Koordinate
!item [xyarray[1!]]
y-Koordinate der oberen linken Ecke
!item [xyarray[2!]]
x-Koordinate
!item [xyarray[3!]]
y-Koordinate der unteren rechten Ecke des Ausgaberechteckes.
!end_xlist

(!B)Hinweis:(!b) Wird in (!I)aspect(!i) der Abbildungsmaûstab
berÅcksichtigt, so erscheinen Kreise als Kreise, Quadrate als Quadrate etc.
Das Bild wird auf dem AusgabegerÑt dann entsprechend gedehnt. Dies kann u.U.
schlecht aussehen, wenn z.B. feine Punktraster gedehnt oder gestaucht
werden. Wird das VerhÑltnis ignoriert, so kînnen aus Kreisen auch Ellipsen
werden.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all printer, metafile, and memory drivers.

!item [Gruppe:]
Grafikspezial-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_bit_image]) ~ v_xbit_image ~
(!link [GDOS][Das GDOS]) ~
(!link [XIMG-Format][Das XIMG-Format fÅr Pixelbilder])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_bit_image
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_bit_image ( int16_t handle, CONST int8_t *filename, int16_t aspect,
                   int16_t x_scale, int16_t y_scale, int16_t h_align, int16_t v_align,
                   int16_t *xyarray );

!item [Umsetzung:]
!begin_verbatim
void v_bit_image (int16_t handle, CONST int8_t *filename,
                  int16_t aspect, int16_t x_scale,
                  int16_t y_scale, int16_t h_align,
                  int16_t v_align, int16_t *xyarray)
{
   int16_t tmp;

   ptsin[0..3] = xyarray[0..3];
   intin[0] = aspect;
   intin[1] = x_scale;
   intin[2] = y_scale;
   intin[3] = h_align;
   intin[4] = v_align;

   tmp = 5;
   while (intin[tmp++] = *filename++)
      ;

   contrl[0] = 5;
   contrl[1] = 2;
   contrl[3] = --tmp;
   contrl[5] = 23;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]     !! 5     # Opcode der Funktion
contrl+2  !! contrl[1]     !! 2     # EintrÑge in ptsin
contrl+4  !! contrl[2]     !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3]     !! n+5   # EintrÑge in intin
contrl+8  !! contrl[4]     !! 0     # EintrÑge in intout
contrl+10 !! contrl[5]     !! 23    # Escape/Sub-Opcode
contrl+12 !! contrl[6]     !! handle
intin     !! intin[0]      !! aspect
intin+2   !! intin[1]      !! x_scale
intin+4   !! intin[2]      !! y_scale
intin+6   !! intin[3]      !! h_align
intin+8   !! intin[4]      !! v_align
intin+10  !! intin[5..n+4] !! filename[0..n-1]
ptsin     !! ptsin[0..3]   !! xyarray[0..3]
!end_table

(!ende_liste)
!end_node

!endif
