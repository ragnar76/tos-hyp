!iflang [english]

!begin_node vq_curaddress

(!begin_liste) [Availability]

!item [Name:]
ØInquire current alpha cursor addressÆ

!item [Opcode:]
5 (Escape 15)

!item [Syntax:]
void vq_curaddress ( int16_t handle, int16_t *row, int16_t *column );

!item [Description:]
The call vq_curaddress obtains the current alpha text cursor position.

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [row]
Row number (1 to the maximum number of rows)
!item [column]
 Column number (1 to the maximum number of columns)
!end_xlist

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Text functions

!item [See also:]
(!link [Binding] [Bindings for vq_curaddress]) ~ v_enter_cur

(!ende_liste)
!end_node



!begin_node Bindings for vq_curaddress
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vq_curaddress ( int16_t handle, int16_t *row, int16_t *column );

!item [Binding:]
!begin_verbatim
void vq_curaddress (int16_t handle, int16_t *row,
                    int16_t *column)
{
   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[5] = 15;
   contrl[6] = handle;

   vdi ();

   *row    = intout[0];
   *column = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 5     # Function opcode
contrl+2  !! contrl[1] !! 0     # Entry in ptsin
contrl+4  !! contrl[2] !! 0     # Entry in ptsout
contrl+6  !! contrl[3] !! 0     # Entry in intin
contrl+8  !! contrl[4] !! 2     # Entry in intout
contrl+10 !! contrl[5] !! 15    # Escape/Sub-opcode
contrl+12 !! contrl[6] !! handle
intout    !! intout[0] !! row
intout+2  !! intout[1] !! column
!end_table

(!ende_liste)
!end_node

!else

!begin_node vq_curaddress

(!begin_liste) [Beschreibung]

!item [Name:]
ØInquire Current Alpha Cursor AddressÆ - ermittelt die aktuelle
Alphacursorposition.

!item [VDI-Nummer:]
5 (Escape 15)

!item [Deklaration:]
void vq_curaddress ( int16_t handle, int16_t *row, int16_t *column );

!item [Beschreibung:]
Die Funktion ermittelt die aktuelle Position des Alpha-Cursors. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [row]
aktuelle Zeile
!item [column]
aktuelle Spalte
!end_xlist

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all screen drivers.

!item [Gruppe:]
Text-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vq_curaddress]) ~ v_enter_cur

(!ende_liste)
!end_node



!begin_node Bindings fÅr vq_curaddress
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vq_curaddress ( int16_t handle, int16_t *row, int16_t *column );

!item [Umsetzung:]
!begin_verbatim
void vq_curaddress (int16_t handle, int16_t *row,
                    int16_t *column)
{
   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[5] = 15;
   contrl[6] = handle;

   vdi ();

   *row    = intout[0];
   *column = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 5     # Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 2     # EintrÑge in intout
contrl+10 !! contrl[5] !! 15    # Escape/Sub-Opcode
contrl+12 !! contrl[6] !! handle
intout    !! intout[0] !! row
intout+2  !! intout[1] !! column
!end_table

(!ende_liste)
!end_node

!endif
