!iflang [english]

!begin_node v_curleft

(!begin_liste) [Availability]

!item [Name:]
ØAlpha cursor leftÆ - Move the alpha cursor left by one character.

!item [Opcode:]
5 (Escape 7)

!item [Syntax:]
void v_curleft ( int16_t handle );

!item [Description:]
The call v_curleft moves the alpha cursor on the workstation with the ID
(!I)handle(!i) one column to the left.

(!B)Note:(!b) If it is already in the first column, nothing happens.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all screen drivers.

!item [Group:]
Text functions

!item [See also:]
(!link [Binding] [Bindings for v_curleft]) ~ v_enter_cur

(!ende_liste)
!end_node



!begin_node Bindings for v_curleft
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_curleft ( int16_t handle );

!item [Binding:]
!begin_verbatim
void v_curleft (int16_t handle)
{
   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[5] = 7;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 5     # Function opcode
contrl+2  !! contrl[1] !! 0     # Entry in ptsin
contrl+4  !! contrl[2] !! 0     # Entry in ptsout
contrl+6  !! contrl[3] !! 0     # Entry in intin
contrl+8  !! contrl[4] !! 0     # Entry in intout
contrl+10 !! contrl[5] !! 7     # Escape/Sub-opcode
contrl+12 !! contrl[6] !! handle
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_curleft

(!begin_liste) [Beschreibung]

!item [Name:]
ØAlpha Cursor leftÆ - bewegt den Alphacursor um ein Zeichen nach links.

!item [VDI-Nummer:]
5 (Escape 7)

!item [Deklaration:]
void v_curleft ( int16_t handle );

!item [Beschreibung:]
Die Funktion bewegt den Alphacursor auf der Workstation mit der Kennung
(!I)handle(!i) eine Spalte nach links.

(!B)Hinweis:(!b) Befindet sich der Cursor bereits in der linkesten Spalte,
so hat die Funktion keine Auswirkung.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.  

!item [VerfÅgbar:]
Supported by all screen drivers.

!item [Gruppe:]
Text-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_curleft]) ~ v_enter_cur

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_curleft
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_curleft ( int16_t handle );

!item [Umsetzung:]
!begin_verbatim
void v_curleft (int16_t handle)
{
   contrl[0] = 5;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[5] = 7;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 5     # Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+10 !! contrl[5] !! 7     # Escape/Sub-Opcode
contrl+12 !! contrl[6] !! handle
!end_table

(!ende_liste)
!end_node

!endif
