!iflang [english]

!begin_node v_write_meta

(!begin_liste) [Availability]

!item [Name:]
ØWrite metafile itemÆ - Write an object to a metafile.

!item [Opcode:]
5 (Escape 99)

!item [Syntax:]
void v_write_meta ( int16_t handle, int16_t num_intin, int16_t *a_intin,
                    int16_t num_ptsin, int16_t *a_ptsin );

!item [Description:]
The call v_write_meta permits the marking of a parameter written to a metafile
with an opcode as a user-defined graphic object. The following apply:

!begin_xlist !short [a_intin+num_intin-1+]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [num_intin]
Number of values in intin array (0 - 127)
!item [num_ptsin]
Number of values in ptsin array(0 - 127)
!item [a_intin[0!]]
Sub-opcode (user-defined)
!item [a_intin[1!]]
~
!item [:]
~
!item [:]
~
!item [a_intin[num_intin-1!]]
User-defined information
!item [a_ptsin[0!]]
~
!item [:]
~
!item [:]
~
!item [a_ptsin[num_ptsin-1!]]
User-defined information
!end_xlist

(!B)Note:(!b) Sub-opcodes 0 to 100 are reserved; some have been pre-defined:

!begin_table [l|l]
(!I)a_intin(!i) !!  Meaning
!hline
10 !! Start group
11 !! End group
49 !! Set no line style
50 !! Set attribute shadow on
51 !! Set attribute shadow off
80 !! Start draw area type primitive
81 !! End draw area type primitive
!end_table

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
Supported by all metafile drivers.

!item [Group:]
Metafile functions

!item [See also:]
(!link [Binding] [Bindings for v_write_meta]) ~ (!link [GDOS][About the GDOS]) ~
v_meta_extents ~ Metafile format ~
(!link [sub-opcodes][Metafile sub-opcodes])

(!ende_liste)
!end_node



!begin_node Bindings for v_write_meta
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void v_write_meta ( int16_t handle, int16_t num_intin, int16_t *a_intin,
                    int16_t num_ptsin, int16_t *a_ptsin );

!item [Binding:]
!begin_verbatim
void v_write_meta (int16_t handle, int16_t num_intin,
                   int16_t *a_intin, int16_t num_ptsin,
                   int16_t *a_ptsin)
{
   intin[0..num_intin-1] = a_intin[0..num_intin-1];
   ptsin[0..num_ptsin-1] = a_ptsin[0..num_ptsin-1];

   contrl[0] = 5;
   contrl[1] = num_ptsin;
   contrl[3] = num_intin;
   contrl[5] = 99;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]   !! 5         # Function opcode
contrl+2  !! contrl[1]   !! num_ptsin # Entry in ptsin
contrl+4  !! contrl[2]   !! 0         # Entry in ptsout
contrl+6  !! contrl[3]   !! num_intin # Entry in intin
contrl+8  !! contrl[4]   !! 0         # Entry in intout
contrl+10 !! contrl[5]   !! 99        # Escape/Sub-opcode
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! User-defined sub-opcode
intin+2   !! intin[1..n] !! User-defined information
ptsin     !! ptsin[0..m] !! User-defined information
!end_table

(!ende_liste)
!end_node

!else

!begin_node v_write_meta

(!begin_liste) [Beschreibung]

!item [Name:]
ØWrite Metafile ItemÆ - schreibt ein Objekt in ein Metafile.

!item [VDI-Nummer:]
5 (Escape 99)

!item [Deklaration:]
void v_write_meta ( int16_t handle, int16_t num_intin, int16_t *a_intin,
                    int16_t num_ptsin, int16_t *a_ptsin );

!item [Beschreibung:]
Die Funktion erlaubt es, die in ein Metafile geschriebenen Parameter mit
einem Opcode als benutzerdefinierte GegenstÑnde zu markieren. Es gilt:

!begin_xlist !short [a_intin+num_intin-1+]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [num_intin]
Anzahl der Werte im Intin-Array
!item [num_ptsin]
Anzahl der Werte im Ptsin-Array
!item [a_intin[0!]]
Sub-Opcode (benutzerdefiniert)
!item [a_intin[1!]]
~
!item [:]
~
!item [:]
~
!item [a_intin[num_intin-1!]]
benutzerdefinierte Information
!item [a_ptsin[0!]]
~
!item [:]
~
!item [:]
~
!item [a_ptsin[num_ptsin-1!]]
benutzerdefinierte Information
!end_xlist

(!B)Hinweis:(!b) Die Nummern 0 bis 100 sind (!I)reserviert(!i), d.h. als
Sub-Opcodes kommen Nummern ab 101 in Frage.

!begin_table [l|l]
(!I)a_intin(!i) !!  Bedeutung
!hline
10 !! Start group
11 !! End group
49 !! Set no line style
50 !! Set attribute shadow on
51 !! Set attribute shadow off
80 !! Start draw area type primitive
81 !! End draw area type primitive
!end_table

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Supported by all metafile drivers.

!item [Gruppe:]
Metafile-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr v_write_meta]) ~ (!link [GDOS][Das GDOS]) ~
v_meta_extents ~ Metafile-Format ~
(!link [Sub-Opcodes][Metafile Sub-Opcodes])

(!ende_liste)
!end_node



!begin_node Bindings fÅr v_write_meta
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void v_write_meta ( int16_t handle, int16_t num_intin, int16_t *a_intin,
                    int16_t num_ptsin, int16_t *a_ptsin );

!item [Umsetzung:]
!begin_verbatim
void v_write_meta (int16_t handle, int16_t num_intin,
                   int16_t *a_intin, int16_t num_ptsin,
                   int16_t *a_ptsin)
{
   intin[0..num_intin-1] = a_intin[0..num_intin-1];
   ptsin[0..num_ptsin-1] = a_ptsin[0..num_ptsin-1];

   contrl[0] = 5;
   contrl[1] = num_ptsin;
   contrl[3] = num_intin;
   contrl[5] = 99;
   contrl[6] = handle;

   vdi ();
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]   !! 5         # Opcode der Funktion
contrl+2  !! contrl[1]   !! num_ptsin # EintrÑge in ptsin
contrl+4  !! contrl[2]   !! 0         # EintrÑge in ptsout
contrl+6  !! contrl[3]   !! num_intin # EintrÑge in intin
contrl+8  !! contrl[4]   !! 0         # EintrÑge in intout
contrl+10 !! contrl[5]   !! 99        # Escape/Sub-Opcode
contrl+12 !! contrl[6]   !! handle
intin     !! intin[0]    !! benutzerdef. Sub-Opcode
intin+2   !! intin[1..n] !! benutzerdef. Information
ptsin     !! ptsin[0..m] !! benutzerdef. Information
!end_table

(!ende_liste)
!end_node

!endif
