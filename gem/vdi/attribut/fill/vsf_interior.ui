!iflang [english]

!begin_node vsf_interior

(!begin_liste) [Availability]

!item [Name:]
ØSet fill interior styleÆ - Set the fill-pattern type.

!item [Opcode:]
23

!item [Syntax:]
int16_t vsf_interior ( int16_t handle, int16_t style );

!item [Description:]
This function selects the fill-pattern type for a filled 2-dimensional graphic object.

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [style]
Requested (!link [fill type][Graphical overview of fill-type and pattern index])
!begin_xlist
!item [0 =]
Hollow
!item [1 =]
Solid
!item [2 =]
Pattern
!item [3 =]
Hatch
!item [4 =]
User-defined style
!end_xlist
!end_xlist

(!B)Note:(!b)
If the requested type is invalid, type 0 (hollow) will be selected.

!item [(!nolink [Return]) value:]
The function returns the fill-type actually selected.

!item [Availability:]
Supported by all drivers.

!item [Group:]
Fill attributes

!item [See also:]
(!link [Binding] [Bindings for vsf_interior]) ~ v_fillarea ~ v_contourfill ~ vr_recfl ~
v_bar ~ v_pieslice ~ v_circle ~ v_ellipse ~ v_ellpie ~ v_rfbox ~ vsf_style ~ vsf_udpat

(!ende_liste)
!end_node



!begin_node Bindings for vsf_interior
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vsf_interior ( int16_t handle, int16_t style );

!item [Binding:]
!begin_verbatim
int16_t vsf_interior (int16_t handle, int16_t style)
{
   intin[0] = style;

   contrl[0] = 23;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 23    # Function Opcode
contrl+2  !! contrl[1] !! 0     # entry in ptsin
contrl+4  !! contrl[2] !! 0     # entry in ptsout
contrl+6  !! contrl[3] !! 1     # entry in intin
contrl+8  !! contrl[4] !! 1     # entry in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! style
intout    !! intout[0] !! Return Value
!end_table

(!ende_liste)
!end_node

!else

!begin_node vsf_interior

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet Fill Interior StyleÆ - bestimmt den FÅllmustertyp.

!item [VDI-Nummer:]
23

!item [Deklaration:]
int16_t vsf_interior ( int16_t handle, int16_t style );

!item [Beschreibung:]
Die Funktion bestimmt den FÅlltyp. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [style]
gewÅnschter (!link [FÅlltyp][Grafische öbersicht von FÅlltyp und Musterindex])
!begin_xlist
!item [0 =]
leer
!item [1 =]
deckend
!item [2 =]
gemustert
!item [3 =]
schraffiert
!item [4 =]
frei definierbar
!end_xlist
!end_xlist

(!B)Hinweis:(!b) Bei öbergabe eines ungÅltigen Typs wird der FÅlltyp
(!I)leer(!i) angenommen.

!item [Ergebnis:]
Die Funktion liefert den tatsÑchlich ausgewÑhlten FÅlltyp zurÅck.

!item [VerfÅgbar:]
Supported by all drivers.

!item [Gruppe:]
FÅlltyp-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsf_interior])   ~   v_fillarea ~   v_contourfill ~  vr_recfl ~
v_bar ~ v_pieslice ~ v_circle ~ v_ellipse ~ v_ellpie ~ v_rfbox ~ vsf_style ~ vsf_udpat

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsf_interior
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vsf_interior ( int16_t handle, int16_t style );

!item [Umsetzung:]
!begin_verbatim
int16_t vsf_interior (int16_t handle, int16_t style)
{
   intin[0] = style;

   contrl[0] = 23;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   return ( intout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 23    # Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 1     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! style
intout    !! intout[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node

!endif
