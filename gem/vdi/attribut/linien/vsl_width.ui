!iflang [english]

!begin_node vsl_width

(!begin_liste) [Availability]

!item [Name:]
ØSet polyline widthÆ

!item [Opcode:]
16

!item [Syntax:]
int16_t vsl_width ( int16_t handle, int16_t width );

!item [Description:]
The call vsl_width sets the line width for lines and perimeters. The following
apply:

!begin_xlist !short [Paramter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [width]
Line width (must be odd!)
!end_xlist

(!B)Note:(!b) The width of the line always refers to the coordinates in the
X-direction. As the (!nolink [VDI]) can only draw lines an odd number of
pixels thick, the actually set width is smaller or equal to the selected width
as values will be rounded down to the nearest odd number. The function is
(!I)not(!i) available on all output devices.

Most device drivers ignore the line type and draw solid lines if the line is
more than one pixel wide.
               
!item [(!nolink [Return]) value:]
The function returns the line width actually set.

!item [Availability:]
Supported by all devices.

!item [Group:]
Lines attributes

!item [See also:]
(!link [Binding] [Bindings for vsl_width])  ~ v_pline ~ v_arc ~ v_ellarc ~ v_rbox

(!ende_liste)
!end_node



!begin_node Bindings for vsl_width
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vsl_width ( int16_t handle, int16_t width );

!item [Binding:]
!begin_verbatim
int16_t vsl_width (int16_t handle, int16_t width)
{
   ptsin[0] = width;
   ptsin[1] = 0;

   contrl[0] = 16;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   return ( ptsout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 16    # Function Opcode
contrl+2  !! contrl[1] !! 1     # entry in ptsin
contrl+4  !! contrl[2] !! 1     # entry in ptsout
contrl+6  !! contrl[3] !! 0     # entry in intin
contrl+8  !! contrl[4] !! 0     # entry in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! width
ptsin+2   !! ptsin[1]  !! 0
ptsout    !! ptsout[0] !! Return value
ptsout+2  !! ptsout[1] !! 0
!end_table

(!ende_liste)
!end_node

!else

!begin_node vsl_width

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet Polyline WidthÆ - setzt die Linienbreite.

!item [VDI-Nummer:]
16

!item [Deklaration:]
int16_t vsl_width ( int16_t handle, int16_t width );

!item [Beschreibung:]
Die Funktion setzt die Linienbreite. Es gilt:

!begin_xlist !short [Paramter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [width]
Linienbreite (ungerade)
!end_xlist

(!B)Hinweis:(!b) Die Breite der Linie bezieht sich immer auf Koordinaten in
x-Richtung. Die tatsÑchlich gesetzte Breite ist kleiner oder gleich der
gewÑhlten Breite. Die Funktion ist (!I)nicht(!i) auf allen AusgabegerÑten
verfÅgbar.

Linien die breiter als 1 Pixel sind werden von den meisten Treibern nur ohne
Muster gezeichnet.

!item [Ergebnis:]
Die Funktion liefert die tatsÑchlich eingestellte StrichstÑrke.

!item [VerfÅgbar:]
Supported by all devices.

!item [Gruppe:]
Linien-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsl_width])  ~ v_pline ~  v_arc ~  v_ellarc ~  v_rbox

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsl_width
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vsl_width ( int16_t handle, int16_t width );

!item [Umsetzung:]
!begin_verbatim
int16_t vsl_width (int16_t handle, int16_t width)
{
   ptsin[0] = width;
   ptsin[1] = 0;

   contrl[0] = 16;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   return ( ptsout[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 16    # Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 1     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! width
ptsin+2   !! ptsin[1]  !! 0
ptsout    !! ptsout[0] !! Return-Wert
ptsout+2  !! ptsout[1] !! 0
!end_table

(!ende_liste)
!end_node

!endif
