!iflang [english]

!begin_node vst_width

(!begin_liste) [Availability]

!item [Name:]
ØSet character width (absolute mode)Æ - Set character width in pixels.

!item [Opcode:]
231

!item [Syntax:]
void vst_width ( int16_t handle, int16_t width, int16_t *char_width,
                 int16_t *char_height, int16_t *cell_width, int16_t *cell_height );

!item [Description:]
The call vst_width sets the character width in pixels. The following apply:

!begin_xlist !short [cell_height]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [width]
Desired character width
!item [char_width]
Selected character width
!item [char_height]
Seleted character height
!item [cell_width]
Selected character cell width
!item [cell_height]
Selected character cell height
!end_xlist

(!B)Note:(!b) The next call of vst_height, vst_point or vst_arbpt32 resets the
width. You should use vst_setsize32 instead of vst_width because vst_width
uses only an integer value as a relative width and therefore it does not offer
the required accuracy.
               
!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
As of SpeedoGDOS 4.20, and NVDI 3.00 onwards.

!item [Group:]
Text attributes

!item [See also:]
(!link [Binding] [Bindings for vst_width])  ~ vst_arbpt ~ vst_height ~ vst_point ~
vst_setsize

(!ende_liste)
!end_node



!begin_node Bindings for vst_width
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vst_width ( int16_t handle, int16_t width, int16_t *char_width,
                 int16_t *char_height, int16_t *cell_width, int16_t *cell_height );

!item [Binding:]
!begin_verbatim
void vst_width (int16_t handle, int16_t width,
                int16_t *char_width, int16_t *char_height,
                int16_t *cell_width, int16_t *cell_height)
{
   ptsin[0] = width;

   contrl[0] = 231;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *char_width  = ptsout[0];
   *char_height = ptsout[1];
   *cell_width  = ptsout[2];
   *cell_height = ptsout[3];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 231   # Function Opcode
contrl+2  !! contrl[1] !! 1     # entry in ptsin
contrl+4  !! contrl[2] !! 2     # entry in ptsout
contrl+6  !! contrl[3] !! 0     # entry in intin
contrl+8  !! contrl[4] !! 0     # entry in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! width
ptsout    !! ptsout[0] !! char_width
ptsout+2  !! ptsout[1] !! char_height
ptsout+4  !! ptsout[2] !! cell_width
ptsout+6  !! ptsout[3] !! cell_height
!end_table

(!ende_liste)
!end_node

!else

!begin_node vst_width

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet character width (absolute mode)Æ - Zeichenbreite in Pixeln setzen

!item [VDI-Nummer:]
231

!item [Deklaration:]
void vst_width ( int16_t handle, int16_t width, int16_t *char_width,
                 int16_t *char_height, int16_t *cell_width, int16_t *cell_height );

!item [Beschreibung:]
Die Funktion setzt die Zeichenbreite in Pixeln. Es gilt:

!begin_xlist !short [cell_height]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [width]
gewÅnschte Zeichenbreite
!item [char_width]
ausgewÑhlte Zeichenbreite
!item [char_height]
ausgewÑhlte Zeichenhîhe
!item [cell_width]
ausgewÑhlte Zeichenzellenbreite
!item [cell_height]
ausgewÑhlte Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Durch den nÑchsten Aufruf von vst_height, vst_point oder
vst_arbpt32 wird die gesetzte Breite wieder zurÅckgesetzt. Zum Einstellen des
Breiten-Hîhen VerhÑltnisses ist vst_setsize32 besser geeignet, da diese
Funktion eine feinere Einstellung ermîglicht.


!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
ab SpeedoGDOS 4.20 und ab NVDI 3.00

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_width])  ~ vst_arbpt ~ vst_height ~ vst_point ~
vst_setsize

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_width
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vst_width ( int16_t handle, int16_t width, int16_t *char_width,
                 int16_t *char_height, int16_t *cell_width, int16_t *cell_height );

!item [Umsetzung:]
!begin_verbatim
void vst_width (int16_t handle, int16_t width,
                int16_t *char_width, int16_t *char_height,
                int16_t *cell_width, int16_t *cell_height)
{
   ptsin[0] = width;

   contrl[0] = 231;
   contrl[1] = 1;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();

   *char_width  = ptsout[0];
   *char_height = ptsout[1];
   *cell_width  = ptsout[2];
   *cell_height = ptsout[3];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 231   # Opcode der Funktion
contrl+2  !! contrl[1] !! 1     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0     # EintrÑge in intin
contrl+8  !! contrl[4] !! 0     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
ptsin     !! ptsin[0]  !! width
ptsout    !! ptsout[0] !! char_width
ptsout+2  !! ptsout[1] !! char_height
ptsout+4  !! ptsout[2] !! cell_width
ptsout+6  !! ptsout[3] !! cell_height
!end_table

(!ende_liste)
!end_node

!endif
