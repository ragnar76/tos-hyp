!iflang [english]

!begin_node vst_arbpt32

(!begin_liste) [Availability]

!item [Name:]
ØSet character cell height in arbitrary pointsÆ -
Set the character cell height in points for an outline font.

!item [Opcode:]
246

!item [Syntax:]
fix31 vst_arbpt32 ( int16_t handle, fix31 point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Description:]
The call vst_arbpt32 sets the current character height for an outline font
in printer points, and can include fractional sizes. The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [point]
Desired character height
!item [chwd]
Resulting character width
!item [chht]
Resulting character height
!item [cellwd]
Resulting character cell width
!item [cellht]
Resulting character cell height
!end_xlist

(!B)Notes:(!b) In contrast to vst_point, the function permitsthe scaling to
(!I)any(!i) point size, irrespective of the values listed in EXTEND.SYS.
               
If negative values are set, the characters will be mirrorred (reflected) about
the X-axis.

The returned character widths are rounded-off values, which cannot be used without
more ado for calculating overall text widths.
               
!item [(!nolink [Return]) value:]
The function returns the character height actually set in 1/65536 of a point.

This is not clear from the SpeedoGDOS documentation. It's possible that only the
character height in points is returned.
               
!item [Availability:]
With FSM-GDOS, SpeedoGDOS as of Version 4.00, and NVDI 3.00 onwards. In the
documentation for NVDI 3.00 this function is wrongly called vst_arbpt.
               
!item [Group:]
Text attributes

!item [See also:]
(!link [Binding] [Bindings for vst_arbpt32]) ~ vst_point ~ vst_setsize ~ SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings for vst_arbpt32
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
fix31 vst_arbpt32 ( int16_t handle, fix31 point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Binding:]
!begin_verbatim
fix31 vst_arbpt32 (int16_t handle, fix31 point,
                   int16_t *chwd, int16_t *chht,
                   int16_t *cellwd, int16_t *cellht)
{
   intin[0..1] = point;

   contrl[0] = 246;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0..1] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0]    !! 246   # Function Opcode
contrl+2  !! contrl[1]    !! 0     # entry in ptsin
contrl+4  !! contrl[2]    !! 2     # entry in ptsout
contrl+6  !! contrl[3]    !! 2     # entry in intin
contrl+8  !! contrl[4]    !! 2     # entry in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! point
intout    !! intout[0..1] !! Return value
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwe
ptsout+6  !! ptsout[3]    !! cellht
!end_table
(!ende_liste)
!end_node

!else

!begin_node vst_arbpt32

(!begin_liste) [Beschreibung]

!item [Name:]
ØSet character cell height by arbitrary pointsÆ - Setzen der
Zeichenzellenhîhe in Punkten.

!item [VDI-Nummer:]
246

!item [Deklaration:]
fix31 vst_arbpt32 ( int16_t handle, fix31 point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Beschreibung:]
Die Funktion setzt die aktuelle Zeichenhîhe in Printerpunkten. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [point]
gewÅnschte Zeichenhîhe
!item [chwd]
resultierende Zeichenbreite
!item [chht]
resultierende Zeichenhîhe
!item [cellwd]
resultierende Zeichenzellenbreite
!item [cellht]
resultierende Zeichenzellenhîhe
!end_xlist

(!B)Hinweis:(!b) Im Gegensatz zu vst_point erlaubt die Funktion die
Skalierung in (!I)jeder(!i) Punktgrîûe, unabhÑngig davon, welche Angaben in
EXTEND.SYS stehen. 

Wenn man negative Werte einstellt, werden die Zeichen an der x-Achse
gespiegelt. Bei den zurÅckgelieferten Zeichenbreiten handelt es sich um
gerundete Werte, die man nicht ohne weiteres zur Breitenberechnung benutzen
kann.

!item [Ergebnis:]
Die Funktion liefert die gesetzte Zeichenhîhe in 1/65536 Punkten zurÅck.

Aus der SpeedoGDOS Dokumentation geht das nicht hervor. Es ist mîglich das hier nur
die Zeichenhîhe in Punkte zurÅckgeliefert wird.

!item [VerfÅgbar:]
Beim FSM-GDOS, SpeedoGDOS ab Version 4.00 und ab NVDI 3.00. In der Doku zu NVDI 3.00 wird die Funktion
fÑlschlicherweise vst_arbpt genannt.

!item [Gruppe:]
Text-Attribute

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vst_arbpt32]) ~ vst_point ~ vst_setsize ~ SpeedoGDOS ~
NVDI

(!ende_liste)
!end_node



!begin_node Bindings fÅr vst_arbpt32
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
fix31 vst_arbpt32 ( int16_t handle, fix31 point, int16_t *chwd,
                    int16_t *chht, int16_t *cellwd, int16_t *cellht );

!item [Umsetzung:]
!begin_verbatim
fix31 vst_arbpt32 (int16_t handle, fix31 point,
                   int16_t *chwd, int16_t *chht,
                   int16_t *cellwd, int16_t *cellht)
{
   intin[0..1] = point;

   contrl[0] = 246;
   contrl[1] = 0;
   contrl[3] = 2;
   contrl[6] = handle;

   vdi ();

   *chwd   = ptsout[0];
   *chht   = ptsout[1];
   *cellwd = ptsout[2];
   *cellht = ptsout[3];

   return ( intout[0..1] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0]    !! 246   Opcode der Funktion
contrl+2  !! contrl[1]    !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2]    !! 2     # EintrÑge in ptsout
contrl+6  !! contrl[3]    !! 2     # EintrÑge in intin
contrl+8  !! contrl[4]    !! 2     # EintrÑge in intout
contrl+12 !! contrl[6]    !! handle
intin     !! intin[0..1]  !! point
intout    !! intout[0..1] !! Return-Wert
ptsout    !! ptsout[0]    !! chwd
ptsout+2  !! ptsout[1]    !! chht
ptsout+4  !! ptsout[2]    !! cellwe
ptsout+6  !! ptsout[3]    !! cellht
!end_table
(!ende_liste)
!end_node

!endif
