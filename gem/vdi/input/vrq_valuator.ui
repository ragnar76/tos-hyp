!iflang [english]

!begin_node vrq_valuator

(!begin_liste) [Availability]

!item [Name:]
ØInput valuator, Request modeÆ - Obtain value changes of input devices.

!item [Opcode:]
29

!item [Syntax:]
void vrq_valuator ( int16_t handle, int16_t valuator_in,
                    int16_t *valuator_out, int16_t *terminator );

!item [Description:]
The call vrq_valuator obtains a value change that is the result of various
key presses (on the valuator device) until a terminating character is entered
in REQUEST mode. The following apply:

!begin_xlist !short [valuator_out]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [valuator_in]
Initial value of valuator device
!item [valuator_out]
Output value of valuator
!item [terminator]
Actuated key causing termination
!end_xlist

All values lie between 1 and 100. Typcal keys for value changes are cursor-up
or cursor-down. With these one gets the following value changes to the
value current at the time:

!begin_table [l|r]
Keypress !! Value
!hline
Cursor-up !! + 10
Cursor-down !! - 10
Shift + Cursor-up !! + 01
Shift + Cursor-down !! - 01
!end_table

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
The function is (!I)not(!i) supported by all device drivers (also not in the
ROM). The input functions of the (!nolink [VDI]) work only on the
(!I)physical(!i) workstation, which is normally used by the (!nolink [AES]).

!item [Group:]
Input functions

!item [See also:]
(!link [Binding] [Bindings for vrq_valuator]) ~ vsm_valuator ~ vsin_mode

(!ende_liste)
!end_node



!begin_node Bindings for vrq_valuator
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void vrq_valuator ( int16_t handle, int16_t valuator_in,
                    int16_t *valuator_out, int16_t *terminator );

!item [Binding:]
!begin_verbatim
void vrq_valuator (int16_t handle, int16_t valuator_in,
                   int16_t *valuator_out, int16_t *terminator)
{
   intin[0] = valuator_in;

   contrl[0] = 29;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *valuator_out = intout[0];
   *terminator   = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 29    # Function opcode
contrl+2  !! contrl[1] !! 0     # Entry in ptsin
contrl+4  !! contrl[2] !! 0     # Entry in ptsout
contrl+6  !! contrl[3] !! 1     # Entry in intin
contrl+8  !! contrl[4] !! 2     # Entry in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! valuator_in
intout    !! intout[0] !! valuator_out
intout+2  !! intout[1] !! terminator
!end_table

(!ende_liste)
!end_node

!else

!begin_node vrq_valuator

(!begin_liste) [Beschreibung]

!item [Name:]
ØInput Valuator, Request ModeÆ - stellt WertverÑnderungen im REQUEST-Modus
fest.

!item [VDI-Nummer:]
29

!item [Deklaration:]
void vrq_valuator ( int16_t handle, int16_t valuator_in,
                    int16_t *valuator_out, int16_t *terminator );

!item [Beschreibung:]
Die Funktion ermittelt eine WertverÑnderung, die sich aus verschiedenen
TastenbetÑtigungen ergibt. Es gilt:

!begin_xlist !short [valuator_out]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [valuator_in]
Anfangswert
!item [valuator_out]
Ausgabewert
!item [terminator]
betÑtigte Taste
!end_xlist

Es werden immer Werte zwischen 1 und 100 zurÅckgegeben. Typische Tasten fÅr
WertverÑnderung sind Cursor-hoch bzw. Cursor-runter. Hier erhÑlt man
folgende WertverÑnderung zum jeweils aktuellen Wert:

!begin_table [l|r]
Tastendruck !! Wert
!hline
Cursor hoch !! + 10
Cursor runter !! - 10
Shift + Cursor hoch !! + 01
Shift + Cursor runter !! - 01
!end_table

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis.

!item [VerfÅgbar:]
Die Funktion wird (!I)nicht(!i) von allen GerÑtetreibern
(auch nicht dem im ROM) unterstÅtzt. Die Eingabefunktionen des VDI arbeiten
nur auf der (!I)physikalischen(!i) Workstation, die im Normalfall von den
AES benutzt wird.

!item [Gruppe:]
Eingabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vrq_valuator]) ~ vsm_valuator ~ vsin_mode

(!ende_liste)
!end_node



!begin_node Bindings fÅr vrq_valuator
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
void vrq_valuator ( int16_t handle, int16_t valuator_in,
                    int16_t *valuator_out, int16_t *terminator );

!item [Umsetzung:]
!begin_verbatim
void vrq_valuator (int16_t handle, int16_t valuator_in,
                   int16_t *valuator_out, int16_t *terminator)
{
   intin[0] = valuator_in;

   contrl[0] = 29;
   contrl[1] = 0;
   contrl[3] = 1;
   contrl[6] = handle;

   vdi ();

   *valuator_out = intout[0];
   *terminator   = intout[1];
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 29    # Opcode der Funktion
contrl+2  !! contrl[1] !! 0     # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0     # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 1     # EintrÑge in intin
contrl+8  !! contrl[4] !! 2     # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intin     !! intin[0]  !! valuator_in
intout    !! intout[0] !! valuator_out
intout+2  !! intout[1] !! terminator
!end_table

(!ende_liste)
!end_node

!endif
