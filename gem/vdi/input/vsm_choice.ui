!iflang [english]

!begin_node vsm_choice

(!begin_liste) [Availability]

!item [Name:]
ØInput choice, Sample modeÆ - Ascertain which function key was pressed last.

!item [Opcode:]
30

!item [Syntax:]
int16_t vsm_choice ( int16_t handle, int16_t *choice );

!item [Description:]
The call vsm_choice obtains the current value of the 'choice' device, normally
the number of the last pressed function key. The folowing apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [handle]
Workstation identifier
!item [choice]
Pressed function key or 0, if none such was struck
!end_xlist

The number of function keys depends on the device in each case. If another key
has been activated, then the associated code number will be returned.

!item [(!nolink [Return]) value:]
The function returns the selection status (0 = no key, 1 = key pressed).

!item [Availability:]
Although the function is implemented in ROM, it does not seem to work properly.
The function is (!I)not(!i) supported by all device drivers. The input functions
of the (!nolink [VDI]) work only on the (!I)physical(!i) workstation,
which is normally used by the (!nolink [AES]).
               
!item [Group:]
Input functions

!item [See also:]
(!link [Binding] [Bindings for vsm_choice]) ~ vrq_choice ~ vsin_mode

(!ende_liste)
!end_node



!begin_node Bindings for vsm_choice
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t vsm_choice ( int16_t handle, int16_t *choice );

!item [Binding:]
!begin_verbatim
int16_t vsm_choice ( int16_t handle, int16_t *choice )
{
   contrl[0] = 30;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();
 
   *choice = intout[0];
   return ( contrl[4] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
contrl    !! contrl[0] !! 30     # Function opcode
contrl+2  !! contrl[1] !! 0      # Entry in ptsin
contrl+4  !! contrl[2] !! 0      # Entry in ptsout
contrl+6  !! contrl[3] !! 0      # Entry in intin
contrl+8  !! contrl[4] !! status # Entry in intout
contrl+12 !! contrl[6] !! handle
intout    !! intout[0] !! choice
!end_table

(!ende_liste)
!end_node

!else

!begin_node vsm_choice

(!begin_liste) [Beschreibung]

!item [Name:]
ØInput choice, Sample ModeÆ - ermittelt welche Funktionstaste zuletzt
gedrÅckt wurde.

!item [VDI-Nummer:]
30

!item [Deklaration:]
int16_t vsm_choice ( int16_t handle, int16_t *choice );

!item [Beschreibung:]
Die Funktion ermittelt die Nummer der zuletzt betÑtigten Auswahltaste. Es
gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [handle]
Kennung der Workstation
!item [choice]
betÑtigte Auswahltaste oder 0, falls keine solche gedrÅckt worden ist
!end_xlist

Die Anzahl der Funktionstasten ist vom jeweiligen GerÑt abhÑngig. Falls eine
andere Taste betÑtigt worden ist, wird die zugehîrige Codenummer
zurÅckgeliefert.

!item [Ergebnis:]
Die Funktion liefert den Auswahlstatus (0 = keine Taste betÑtigt, 1 = Taste
betÑtigt) zurÅck.

!item [VerfÅgbar:]
Die Funktion ist zwar im ROM implementiert, scheint aber
nicht richtig zu funktionieren. Die Funktion wird (!I)nicht(!i) von allen
GerÑtetreibern unterstÅtzt. Die Eingabefunktionen des VDI arbeiten nur auf
der (!I)physikalischen(!i) Workstation, die im Normalfall von den AES
benutzt wird.

!item [Gruppe:]
Eingabefunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr vsm_choice]) ~ vrq_choice ~ vsin_mode

(!ende_liste)
!end_node



!begin_node Bindings fÅr vsm_choice
!ignore_index

(!begin_liste) [Umsetzung]

!item [C:]
int16_t vsm_choice ( int16_t handle, int16_t *choice );

!item [Umsetzung:]
!begin_verbatim
int16_t vsm_choice ( int16_t handle, int16_t *choice )
{
   contrl[0] = 30;
   contrl[1] = 0;
   contrl[3] = 0;
   contrl[6] = handle;

   vdi ();
 
   *choice = intout[0];
   return ( contrl[4] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
contrl    !! contrl[0] !! 30     # Opcode der Funktion
contrl+2  !! contrl[1] !! 0      # EintrÑge in ptsin
contrl+4  !! contrl[2] !! 0      # EintrÑge in ptsout
contrl+6  !! contrl[3] !! 0      # EintrÑge in intin
contrl+8  !! contrl[4] !! status # EintrÑge in intout
contrl+12 !! contrl[6] !! handle
intout    !! intout[0] !! choice
!end_table

(!ende_liste)
!end_node

!endif
