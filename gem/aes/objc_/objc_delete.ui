!iflang [english]

!begin_node objc_delete

(!begin_liste) [Availability]

!item [Name:]
ØObject deleteÆ - Remove object from an object tree.

!item [Opcode:]
41

!item [Syntax:]
int16_t objc_delete ( OBJECT *ob_dltree, int16_t ob_dlobject );

!item [Description:]
The call objc_delete removes an object from an object tree. The following
apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)ob_dltree(!i) !! Address of the relevant object tree
(!I)ob_dlobject(!i) !! Index of the object to be removed
!end_table

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Object library

!item [Querverweise:]
(!link [Binding] [Bindings for objc_delete]) ~ OBJECT ~ objc_add

(!ende_liste)



!begin_node Bindings for objc_delete
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_delete ( OBJECT *ob_dltree, int16_t ob_dlobject );

!item [Binding:]
!begin_verbatim
int16_t objc_delete (OBJECT *ob_dltree, int16_t ob_dlobject)
{
   int_in[0]  = ob_dlobject;
   addr_in[0] = ob_dltree;

   return ( crys_if(41) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 41    # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! ob_dlobject
addr_in   !! addr_in[0] !! ob_dltree
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node objc_delete

(!begin_liste) [Beschreibung]

!item [Name:]
ØObject deleteÆ - lîst ein Objekt aus einem Objektbaum.

!item [AES-Nummer:]
41

!item [Deklaration:]
int16_t objc_delete ( OBJECT *ob_dltree, int16_t ob_dlobject );

!item [Beschreibung:]
Die Funktion entfernt ein Objekt aus einem Objektbaum. Es gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)ob_dltree(!i) !! Adresse des Objektbaumes
(!I)ob_dlobject(!i) !! Nummer des zu lîschenden Objektes
!end_table

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Objekte][Objektfunktionen])

!item [See also:]
(!link [Binding] [Bindings fÅr objc_delete]) ~ OBJECT ~ objc_add

(!ende_liste)



!begin_node Bindings fÅr objc_delete
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_delete ( OBJECT *ob_dltree, int16_t ob_dlobject );

!item [Umsetzung:]
!begin_verbatim
int16_t objc_delete (OBJECT *ob_dltree, int16_t ob_dlobject)
{
   int_in[0]  = ob_dlobject;
   addr_in[0] = ob_dltree;

   return ( crys_if(41) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 41    # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! ob_dlobject
addr_in   !! addr_in[0] !! ob_dltree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
