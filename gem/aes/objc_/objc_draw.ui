!iflang [english]

!begin_node objc_draw

(!begin_liste) [Availability]

!item [Name:]
ØObject drawÆ - Draw an (!nolink [AES]) object tree.

!item [Opcode:]
42

!item [Syntax:]
int16_t objc_draw ( OBJECT *ob_drtree, int16_t ob_drstart, int16_t ob_drdepth,
                 int16_t ob_drxclip, int16_t ob_dryclip, int16_t ob_drwclip,
                 int16_t ob_drhclip );

!item [Description:]
The call objc_draw renders an object tree (or parts of objects) on the screen.
The following apply:

!begin_xlist !short [ob_drdepth]
!item [Parameter]
Meaning
!item [~]
~
!item [ob_drtree]
Address of object tree to draw
!item [ob_drstart]
Index of the first object to be drawn
!item [ob_drdepth]
Number of object generations to be drawn (0 = only the first object), maximum
of 8
!item [ob_drxclip]
X-coordinate, (!U)and(!u)
!item [ob_dryclip]
Y-coordinate of top left corner,
!item [ob_drwclip]
Width, (!U)and(!u)
!item [ob_drhclip]
Height of the bounding rectangle
!end_xlist

(!B)Note:(!b) With the parameters one can specify a rectangle to which drawing
is to be restricted ((!link [clipping][Clipping])).

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Object library

!item [See also:]
(!link [Binding] [Bindings for objc_draw]) ~ objc_wdraw ~ OBJECT

(!ende_liste)



!begin_node Bindings for objc_draw
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_draw ( OBJECT *ob_drtree, int16_t ob_drstart, int16_t ob_drdepth,
                 int16_t ob_drxclip, int16_t ob_dryclip, int16_t ob_drwclip,
                 int16_t ob_drhclip );

!item [Binding:]
!begin_verbatim
int16_t objc_draw (OBJECT *ob_drtree, int16_t ob_drstart,
                   int16_t ob_drdepth, int16_t ob_drxclip,
                   int16_t ob_dryclip, int16_t ob_drwclip,
                   int16_t ob_drhclip)
{
   int_in[0]  = ob_drstart;
   int_in[1]  = ob_drdepth;
   int_in[2]  = ob_drxclip;
   int_in[3]  = ob_dryclip; 
   int_in[4]  = ob_drwclip;
   int_in[5]  = ob_drhclip;

   addr_in[0] = ob_drtree;

   return ( crys_if(42) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 42    # Function opcode
control+2 !! control[1] !! 6     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! ob_drstart
int_in+2  !! int_in[1]  !! ob_drdepth
int_in+4  !! int_in[2]  !! ob_drxclip
int_in+6  !! int_in[3]  !! ob_dryclip
int_in+8  !! int_in[4]  !! ob_drwclip
int_in+10 !! int_in[5]  !! ob_drhclip
addr_in   !! addr_in[0] !! ob_drtree
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node objc_draw

(!begin_liste) [Beschreibung]

!item [Name:]
ØObject drawÆ - zeichnet ein Objekt.

!item [AES-Nummer:]
42

!item [Deklaration:]
int16_t objc_draw ( OBJECT *ob_drtree, int16_t ob_drstart, int16_t ob_drdepth,
                 int16_t ob_drxclip, int16_t ob_dryclip, int16_t ob_drwclip,
                 int16_t ob_drhclip );

!item [Beschreibung:]
Die Funktion stellt Objekte (oder Teile von Objekten) auf dem Bildschirm
dar. Es gilt:

!begin_xlist !short [ob_drdepth]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ob_drtree]
Adresse des Objektbaumes
!item [ob_drstart]
Nummer des ersten zu zeichnenden Objektes
!item [ob_drdepth]
Anzahl der zu zeichnenden Ebenen (0 = nur das erste Objekt), max 8
!item [ob_drxclip]
x-Koordinate
!item [ob_dryclip]
y-Koordinate
!item [ob_drwclip]
Breite
!item [ob_drhclip]
Hîhe des begrenzenden Rechteckes.
!end_xlist

(!B)Hinweis:(!b) öber die Parameter kann ein Rechteck angegeben werden, auf
das sich die Darstellung beschrÑnken soll (Clipping).

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Objekte][Objektfunktionen])

!item [Querverweise:]
(!link [Binding] [Bindings fÅr objc_draw]) ~ objc_wdraw ~ OBJECT

(!ende_liste)



!begin_node Bindings fÅr objc_draw
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_draw ( OBJECT *ob_drtree, int16_t ob_drstart, int16_t ob_drdepth,
                 int16_t ob_drxclip, int16_t ob_dryclip, int16_t ob_drwclip,
                 int16_t ob_drhclip );

!item [Umsetzung:]
!begin_verbatim
int16_t objc_draw (OBJECT *ob_drtree, int16_t ob_drstart,
                   int16_t ob_drdepth, int16_t ob_drxclip,
                   int16_t ob_dryclip, int16_t ob_drwclip,
                   int16_t ob_drhclip)
{
   int_in[0]  = ob_drstart;
   int_in[1]  = ob_drdepth;
   int_in[2]  = ob_drxclip;
   int_in[3]  = ob_dryclip; 
   int_in[4]  = ob_drwclip;
   int_in[5]  = ob_drhclip;

   addr_in[0] = ob_drtree;

   return ( crys_if(42) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 42    # Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! ob_drstart
int_in+2  !! int_in[1]  !! ob_drdepth
int_in+4  !! int_in[2]  !! ob_drxclip
int_in+6  !! int_in[3]  !! ob_dryclip
int_in+8  !! int_in[4]  !! ob_drwclip
int_in+10 !! int_in[5]  !! ob_drhclip
addr_in   !! addr_in[0] !! ob_drtree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
