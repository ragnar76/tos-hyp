!iflang [english]

!begin_node objc_edit

(!begin_liste) [Availability]

!item [Name:]
ØObject editÆ - Edit text in an editable text object.

!item [Opcode:]
46

!item [Syntax:]
int16_t objc_edit ( OBJECT *ob_edtree, int16_t ob_edobject, int16_t ob_edchar,
                 int16_t *ob_edidx, int16_t ob_edkind );

!item [Description:]
The call objc_edit permits manual text input into objects of the type G_FTEXT
or G_FBOXTEXT. The following apply:

!begin_xlist !short [ob_edobject]
!item [Parameter]
Meaning
!item [~]
~
!item [ob_edtree]
Address of the relevant object tree
!item [ob_edobject]
Index of the object to be edited
!item [ob_edchar]
Character that was input ((!link [scancode][The scancode]) in the high and
ASCII-code in the low byte)
!item [ob_edidx]
Position of the character in string
!item [ob_edkind]
Function selection, as follows:
!label EDSTART
!label EDINIT
!label EDCHAR
!label EDEND
!begin_xlist !short [EDSTART~]
!item [EDSTART 0]
Reserved
!item [EDINIT 1]
Calculate formatted string, and switch on cursor
!item [EDCHAR 2]
Process character and then display string anew
!item [EDEND 3]
Switch off cursor
!end_xlist
!end_xlist

(!B)Note:(!b) MagiC as of version 2.0 has an extended function objc_xedit.

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Object library

!item [See also:]
(!link [Binding] [Bindings for objc_edit]) ~ objc_wedit ~ OBJECT ~ 
TEDINFO ~ objc_xedit

(!ende_liste)



!begin_node Bindings for objc_edit
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_edit ( OBJECT *ob_edtree, int16_t ob_edobject, int16_t ob_edchar,
                 int16_t *ob_edidx, int16_t ob_edkind );

!item [Binding:]
!begin_verbatim
int16_t objc_edit (OBJECT *ob_edtree, int16_t ob_edobject,
                   int16_t ob_edchar, int16_t *ob_edidx,
                   int16_t ob_edkind)
{
   int_in[0]  = ob_edobject;
   int_in[1]  = ob_edchar;
   int_in[2]  = *ob_edidx;
   int_in[3]  = ob_edkind;  
   addr_in[0] = ob_edtree;

   crys_if (46);

   *ob_edidx = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 46    # Function opcode
control+2 !! control[1] !! 4     # Entry in int_in
control+4 !! control[2] !! 2     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! ob_edobject
int_in+2  !! int_in[1]  !! ob_edchar
int_in+4  !! int_in[2]  !! ob_edidx
int_in+6  !! int_in[3]  !! ob_edkind
addr_in   !! addr_in[0] !! ob_edtree
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! ob_edidx
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node objc_edit

(!begin_liste) [Beschreibung]

!item [Name:]
ØObject editÆ - editiert einen Text in einem Objekt.

!item [AES-Nummer:]
46

!item [Deklaration:]
int16_t objc_edit ( OBJECT *ob_edtree, int16_t ob_edobject, int16_t ob_edchar,
                 int16_t *ob_edidx, int16_t ob_edkind );

!item [Beschreibung:]
Die Funktion ermîglicht Texteingaben in Objekte des Typs G_FTEXT oder
G_FBOXTEXT. Es gilt:

!begin_xlist !short [ob_edobject]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ob_edtree]
Adresse des Objektbaumes
!item [ob_edobject]
Nummer des zu editierenden Objektes
!item [ob_edchar]
eingegebenes Zeichen
!item [ob_edidx]
Position des Zeichens im String
!item [ob_edkind]
Funktionsauswahl, wie folgt:
!label EDSTART
!label EDINIT
!label EDCHAR
!label EDEND
!begin_xlist !short [EDSTART~]
!item [EDSTART 0]
reserviert
!item [EDINIT 1]
formatierten String berechnen, und Cursor einschalten
!item [EDCHAR 2]
Zeichen verarbeiten und String anschlieûend neu anzeigen
!item [EDEND 3]
Cursor ausschalten
!end_xlist
!end_xlist

(!B)Hinweis:(!b) MagiC ab Version 2.0 kennt eine erweiterte Funktion
objc_xedit.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Objekte][Objektfunktionen])

!item [Querverweise:]
(!link [Binding] [Bindings fÅr objc_edit]) ~ objc_wedit ~ OBJECT ~ 
TEDINFO ~ objc_xedit

(!ende_liste)



!begin_node Bindings fÅr objc_edit
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t objc_edit ( OBJECT *ob_edtree, int16_t ob_edobject, int16_t ob_edchar,
                 int16_t *ob_edidx, int16_t ob_edkind );

!item [Umsetzung:]
!begin_verbatim
int16_t objc_edit (OBJECT *ob_edtree, int16_t ob_edobject,
                   int16_t ob_edchar, int16_t *ob_edidx,
                   int16_t ob_edkind)
{
   int_in[0]  = ob_edobject;
   int_in[1]  = ob_edchar;
   int_in[2]  = *ob_edidx;
   int_in[3]  = ob_edkind;  
   addr_in[0] = ob_edtree;

   crys_if (46);

   *ob_edidx = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 46    # Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! ob_edobject
int_in+2  !! int_in[1]  !! ob_edchar
int_in+4  !! int_in[2]  !! ob_edidx
int_in+6  !! int_in[3]  !! ob_edkind
addr_in   !! addr_in[0] !! ob_edtree
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! ob_edidx
!end_table

(!ende_liste)
!end_node
!end_node

!endif
