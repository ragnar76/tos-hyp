!iflang [english]

!begin_node wdlg_open

(!begin_liste) [Availability]

!item [Name:]
ØWindow-dialog openÆ - Opens a window-dialog

!item [Opcode:]
161

!item [Syntax:]
int16_t wdlg_open ( DIALOG *dialog, int8_t *title, int16_t kind,
                 int16_t x, int16_t y, int16_t code, void *data );

!item [Description:]
The call wdlg_open opens a window-dialog on the screen. The following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)dialog(!i) !! Pointer to the dialog structure
(!I)title(!i) !! Pointer to the window name or 0L
(!I)kind(!i) !! Window components (NAME/MOVER/CLOSER)
(!I)x(!i) !! X-coord. of top L of dialog, or -1 (centred)
(!I)y(!i) !! Y-coord. of top L of dialog, or -1 (centred)
(!I)code(!i) !! Passed to (!I)handle_exit()(!i) in HNDL_OBJ (!I)clicks(!i)
(!I)data(!i) !! Passed to (!I)handle_exit()(!i) in HNDL_OBJ (!I)data(!i)
!end_table

(!B)Note:(!b) Before wdlg_open returns to the caller, the service routine
(!I)handle_exit()(!i) (see above) is called with the function number HNDL_OPEN.


!item [(!nolink [Return]) value:]
Handle of the dialog window (0: Error)

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
Window-dialogs

!item [See also:]
(!link [Binding] [Bindings for wdlg_open]) ~ wdlg_close ~ wdlg_delete

(!ende_liste)



!begin_node Bindings for wdlg_open
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wdlg_open ( DIALOG *dialog, int8_t *title, int16_t kind,
                 int16_t x, int16_t y, int16_t code, void *data );

!item [Binding:]
!begin_verbatim
int16_t wdlg_open ( DIALOG *dialog, int8_t *title,
                    int16_t kind, int16_t x,
                    int16_t y, int16_t code, void *data )
{
   addr_in[0] = dialog;
   addr_in[1] = title;
   addr_in[2] = data;

   int_in[0] = kind;
   int_in[1] = x;
   int_in[2] = y;
   int_in[3] = code;

   crys_if (161);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 161   # Function opcode
control+2 !! control[1] !! 4     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 3     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
addr_in   !! addr_in[0] !! dialog
addr_in+4 !! addr_in[1] !! title
addr_in+8 !! addr_in[2] !! data
int_in    !! int_in[0]  !! kind
int_in+2  !! int_in[1]  !!  x
int_in+4  !! int_in[2]  !! y
int_in+6  !! int_in[3]  !! code
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node wdlg_open

(!begin_liste) [Beschreibung]

!item [Name:]
ØWindowDialog OpenÆ - îffnet einen Fensterdialog.

!item [AES-Nummer:]
161

!item [Deklaration:]
int16_t wdlg_open ( DIALOG *dialog, int8_t *title, int16_t kind,
                 int16_t x, int16_t y, int16_t code, void *data );

!item [Beschreibung:]
Die Funktion îffnet einen Fensterdialog auf dem Bildschirm. Es gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)dialog(!i) !! Zeiger auf den Dialog
(!I)title(!i) !! Fenstername oder NULL
(!I)kind(!i) !! Komponenten des Fensters
(!I)x(!i) !! x-Koordinate
(!I)y(!i) !! y-Koordinate des Dialogs
(!I)code(!i) !! wird handle_exit in der Komponente clicks Åbergeben
(!I)data(!i) !! wird handle_exit in der Komponente data Åbergeben
!end_table

(!B)Hinweis:(!b) Bevor die Funktion zum Aufrufer zurÅckkehrt, wird noch die
Serviceroutine (!I)handle_exit(!i) mit der Funktionsnummer HNDL_OPEN
aufgerufen. Bei Koordinaten von (-1,-1) wird der Dialog zentriert
dargestellt.

!item [Ergebnis:]
Die Funktion liefert die Fensterkennung des Dialogs zurÅck, bzw. im
Fehlerfall den Wert 0.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7)
festgestellt werden.

!item [Gruppe:]
Fensterdialoge

!item [Querverweis:]
(!link [Binding] [Bindings fÅr wdlg_open])  ~ wdlg_close ~  wdlg_delete

(!ende_liste)



!begin_node Bindings fÅr wdlg_open
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wdlg_open ( DIALOG *dialog, int8_t *title, int16_t kind,
                 int16_t x, int16_t y, int16_t code, void *data );

!item [Umsetzung:]
!begin_verbatim
int16_t wdlg_open ( DIALOG *dialog, int8_t *title,
                    int16_t kind, int16_t x,
                    int16_t y, int16_t code, void *data )
{
   addr_in[0] = dialog;
   addr_in[1] = title;
   addr_in[2] = data;

   int_in[0] = kind;
   int_in[1] = x;
   int_in[2] = y;
   int_in[3] = code;

   crys_if (161);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 161   # Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 3     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! dialog
addr_in+4 !! addr_in[1] !! title
addr_in+8 !! addr_in[2] !! data
int_in    !! int_in[0]  !! kind
int_in+2  !! int_in[1]  !!  x
int_in+4  !! int_in[2]  !! y
int_in+6  !! int_in[3]  !! code
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
