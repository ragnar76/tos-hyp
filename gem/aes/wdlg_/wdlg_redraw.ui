!iflang [english]

!begin_node wdlg_redraw

(!begin_liste) [Availability]

!item [Name:]
ØWindow-dialog redrawÆ - Draw an object in a window-dialog.

!item [Opcode:]
167

!item [Syntax:]
void wdlg_redraw ( DIALOG *dialog, GRECT *rect, int16_t obj, int16_t depth );

!item [Description:]
The call wdlg_redraw draws an object in a window-dialog while respecting the
rectangle list of the window. The following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)dialog(!i) !! Pointer to the dialog structure
(!I)rect(!i) !! Pointer to the bounding GRECT
(!I)obj(!i) !! Index of the start object
(!I)depth(!i) !! Index of the plane/depth
!end_table

(!B)Note:(!b) If one wants to draw an object within the dialog then one should
always use wdlg_redraw and not objc_draw. Before calling wdlg_redraw, just as
before and after (!nolink [objc_draw]), a wind_update call is necessary.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
Window-dialogs

!item [See also:]
(!link [Binding] [Bindings for wdlg_redraw]) ~ objc_draw ~ WM_REDRAW

(!ende_liste)



!begin_node Bindings for wdlg_redraw
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void wdlg_redraw ( DIALOG *dialog, GRECT *rect, int16_t obj, int16_t depth );

!item [Binding:]
!begin_verbatim
void wdlg_redraw ( DIALOG *dialog, GRECT *rect, int16_t obj,
                   int16_t depth )
{
   addr_in[0] = dialog;
   addr_in[1] = rect;

   int_in[0] = obj;
   int_in[1] = depth;
   crys_if (167);
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 167   # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 0     # Entry in int_out
control+6 !! control[3] !! 2     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
addr_in   !! addr_in[0] !! dialog
addr_in+4 !! addr_in[1] !! rect
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! depth
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node wdlg_redraw

(!begin_liste) [Beschreibung]

!item [Name:]
ØWindowDialog RedrawÆ - Objekt in einem Dialog zeichnen.

!item [AES-Nummer:]
167

!item [Deklaration:]
void wdlg_redraw ( DIALOG *dialog, GRECT *rect, int16_t obj, int16_t depth );

!item [Beschreibung:]
Die Funktion zeichnet ein Objekt in einem Dialog, unter Beachtung der
Rechteckliste des Fensters. Es gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)dialog(!i) !! Zeiger auf den Dialog
(!I)rect(!i) !! Zeiger auf das begrenzende Rechteck
(!I)obj(!i) !! Nummer des Startobjektes
(!I)depth(!i) !! Anzahl der zu zeichnenden Ebenen
!end_table

(!B)Hinweis:(!b) Um ein Objekt innerhalb des Dialogs zu zeichnen, sollte
immer diese Funktion und (!I)nicht(!i) objc_draw verwendet werden. Vor
Anwendung der Funktion ist wie Åblich ein Aufruf von wind_update nîtig.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7)
festgestellt werden.

!item [Gruppe:]
Fensterdialoge

!item [Querverweis:]
(!link [Binding] [Bindings fÅr wdlg_redraw]) ~  objc_draw  ~ WM_REDRAW

(!ende_liste)



!begin_node Bindings fÅr wdlg_redraw
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void wdlg_redraw ( DIALOG *dialog, GRECT *rect, int16_t obj, int16_t depth );

!item [Umsetzung:]
!begin_verbatim
void wdlg_redraw ( DIALOG *dialog, GRECT *rect, int16_t obj,
                   int16_t depth )
{
   addr_in[0] = dialog;
   addr_in[1] = rect;

   int_in[0] = obj;
   int_in[1] = depth;
   crys_if (167);
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 167   # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 0     # EintrÑge in int_out
control+6 !! control[3] !! 2     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! dialog
addr_in+4 !! addr_in[1] !! rect
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! depth
!end_table

(!ende_liste)
!end_node
!end_node

!endif
