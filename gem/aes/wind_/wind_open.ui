!iflang [english]

!begin_node wind_open

(!begin_liste) [Availability]

!item [Name:]
ØOpen windowÆ - Opens a window.

!item [Opcode:]
101

!item [Syntax:]
int16_t wind_open ( int16_t wi_ohandle, int16_t wi_owx, int16_t wi_owy,
                 int16_t wi_oww, int16_t wi_owh );

!item [Description:]
The call wind_open displays a window on the screen. The following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)wi_ohandle(!i) !! ID of the window to be opened
(!I)wi_owx(!i) !! X-coordinate, (!U)and(!u)
(!I)wi_owy(!i) !! Y-coordinate of top left corner,
(!I)wi_oww(!i) !! Width, (!U)and(!u)
(!I)wi_owh(!i) !! Height of the window
!end_table

(!B)Note:(!b) The window must have been created beforehand with wind_create.
The (!link [components][The components of a window]) title-bar, info-line
and slider must have been set previously with a call of wind_set.

When specifying the coordinates -1,-1,-1,-1 for MagiC 3 onwards, the window will
be placed at the next free position for iconifiable windows.

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Window library

!item [See also:]
(!link [Binding] [Bindings for wind_open]) ~ wind_create ~ wind_close ~ wind_set

(!ende_liste)



!begin_node Bindings for wind_open
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wind_open ( int16_t wi_ohandle, int16_t wi_owx, int16_t wi_owy,
                 int16_t wi_oww, int16_t wi_owh );

!item [Binding:]
!begin_verbatim
int16_t wind_open (int16_t wi_ohandle, int16_t wi_owx,
                   int16_t wi_owy, int16_t wi_oww,
                   int16_t wi_owh)
{
   int_in[0]  = wi_ohandle;
   int_in[1]  = wi_owx;
   int_in[2]  = wi_owy;
   int_in[3]  = wi_oww;
   int_in[4]  = wi_owh;

   return ( crys_if(101) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 101   # Function opcode
control+2 !! control[1] !! 5     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! wi_ohandle
int_in+2  !! int_in[1]  !! wi_owx 
int_in+4  !! int_in[2]  !! wi_owy
int_in+6  !! int_in[3]  !! wi_oww
int_in+8  !! int_in[4]  !! wi_owh
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node wind_open

(!begin_liste) [Beschreibung]

!item [Name:]
ØOpen WindowÆ - îffnet ein Fenster.

!item [AES-Nummer:]
101

!item [Deklaration:]
int16_t wind_open ( int16_t wi_ohandle, int16_t wi_owx, int16_t wi_owy,
                 int16_t wi_oww, int16_t wi_owh );

!item [Beschreibung:]
Die Funktion stellt ein Fenster auf dem Bildschirm dar. Es gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)wi_ohandle(!i) !! Kennung des zu îffnenden Fensters
(!I)wi_owx(!i) !! x-Koordinate
(!I)wi_owy(!i) !! y-Koordinate
(!I)wi_oww(!i) !! Breite
(!I)wi_owh(!i) !! Hîhe des Fensters
!end_table

(!B)Hinweis:(!b) Das Fenster muû vorher per wind_create erzeugt worden sein.
Die Komponenten Titelzeile, Infozeile und Slider mÅssen bereits vorher durch
einen wind_set Aufruf gesetzt worden sein.

Bei Angabe der Koordinaten -1,-1,-1,-1 wird das Fenster ab MagiC 3 an die
nÑchste freie Position fÅr ikonifizierbare Fenster gelegt.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgeliefert
wird.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
Fensterverwaltung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr wind_open]) ~ wind_create ~ wind_close ~ wind_set

(!ende_liste)



!begin_node Bindings fÅr wind_open
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t wind_open ( int16_t wi_ohandle, int16_t wi_owx, int16_t wi_owy,
                 int16_t wi_oww, int16_t wi_owh );

!item [Umsetzung:]
!begin_verbatim
int16_t wind_open (int16_t wi_ohandle, int16_t wi_owx,
                   int16_t wi_owy, int16_t wi_oww,
                   int16_t wi_owh)
{
   int_in[0]  = wi_ohandle;
   int_in[1]  = wi_owx;
   int_in[2]  = wi_owy;
   int_in[3]  = wi_oww;
   int_in[4]  = wi_owh;

   return ( crys_if(101) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 101   # Opcode der Funktion
control+2 !! control[1] !! 5     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! wi_ohandle
int_in+2  !! int_in[1]  !! wi_owx 
int_in+4  !! int_in[2]  !! wi_owy
int_in+6  !! int_in[3]  !! wi_oww
int_in+8  !! int_in[4]  !! wi_owh
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
