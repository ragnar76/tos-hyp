!iflang [english]

!begin_node shel_read

(!begin_liste) [Availability]

!item [Name:]
ØShell readÆ - Read command line parameters of the application.

!item [Opcode:]
120

!item [Syntax:]
int16_t shel_read ( int8_t *sh_rpcmd, int8_t *sh_rptail );

!item [Description:]
The call shel_read obtains the name and the command line tail with which an
application was launched. The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [sh_rpcmd]
Complete pathname with program name
!item [sh_rptail]
Command line (according to Pexec, so NULL-terminated and with length specified
in first byte)
!end_xlist

(!B)Note:(!b) The function only works correctly if the appli!-cation was launched
with shel_write. In case of doubt, therefore, one should fall back to the values
from the basepage.

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Shell library

!item [See also:]
(!link [Binding] [Bindings for shel_read]) ~ shel_write ~ Pexec

(!ende_liste)



!begin_node Bindings for shel_read
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t shel_read ( int8_t *sh_rpcmd, int8_t *sh_rptail );

!item [Binding:]
!begin_verbatim
int16_t shel_read (int8_t *sh_rpcmd, int8_t *sh_rptail)
{
   addr_in[0] = sh_rpcmd;
   addr_in[1] = sh_rptail;

   return ( crys_if(120) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 120   # Function opcode
control+2 !! control[1] !! 0     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 2     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
addr_in   !! addr_in[0] !! sh_rpcmd
addr_in+4 !! addr_in[1] !! sh_rptail
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node shel_read

(!begin_liste) [Beschreibung]

!item [Name:]
ØShell readÆ - liest die Kommandozeilen-Parameter der Applikation.

!item [AES-Nummer:]
120

!item [Deklaration:]
int16_t shel_read ( int8_t *sh_rpcmd, int8_t *sh_rptail );

!item [Beschreibung:]
Die Funktion ermittelt den Namen und die Kommandozeile, mit der eine
Applikation gestartet wurde. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [sh_rpcmd]
vollstÑndiger Pfadname mit Programmname
!item [sh_rptail]
Kommandozeile (gemÑû Pexec, also nullterminiert und mit LÑngenangaben im ersten Byte)
!end_xlist

(!B)Hinweis:(!b) Die Funktion arbeitet nur dann korrekt, wenn die
Applikation per shel_write gestartet worden ist. Daher sollte man im
Zweifelsfall auf die Werte der Basepage zurÅckgreifen.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Shell-Kommunikation][Shellfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr shel_read]) ~ shel_write ~ Pexec

(!ende_liste)



!begin_node Bindings fÅr shel_read
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t shel_read ( int8_t *sh_rpcmd, int8_t *sh_rptail );

!item [Umsetzung:]
!begin_verbatim
int16_t shel_read (int8_t *sh_rpcmd, int8_t *sh_rptail)
{
   addr_in[0] = sh_rpcmd;
   addr_in[1] = sh_rptail;

   return ( crys_if(120) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 120   # Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 2     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! sh_rpcmd
addr_in+4 !! addr_in[1] !! sh_rptail
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
