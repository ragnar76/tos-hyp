!iflang [english]

!begin_node rsrc_obfix

(!begin_liste) [Availability]

!item [Name:]
ØResource object fixÆ - Convert an object's coordinates from character-based to
pixel-based.

!item [Opcode:]
114

!item [Syntax:]
int16_t rsrc_obfix ( OBJECT *re_otree, int16_t re_oobject );

!item [Description:]
The call rsrc_obfix converts the size and position of a displayed object from
character-based to pixel-based coordinates at the current screen resolution.
(This is required because all objects in RSC files have their coordinates based
on character positions rather than screen coordinates to ensure correct display
of trees and objects at any screen resolution.) The following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)re_otree(!i) !! Address of the relevant object tree
(!I)re_oobject(!i) !! Index of the object to convert
!end_table

(!B)Note:(!b) A call of this function is always required if objects are created at
run-time, or are not loaded with rsrc_load.

The conversion is performed by multiplying the lower byte of the coordinate
specification with the size of a character from the system font, and then
adding the (signed) upper byte. (!B)Exception:(!b) For a width of exactly
80 characters, the width of the screen is substituted; this is used for the
background object of the menu tree for instance.

!item [(!nolink [Return]) value:]
This always has the value 1.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Resource library

!item [See also:]
(!link [Binding] [Bindings for rsrc_obfix]) ~ rsrc_load ~ rsrc_rcfix

(!ende_liste)



!begin_node Bindings for rsrc_obfix
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t rsrc_obfix ( OBJECT *re_otree, int16_t re_oobject );

!item [Binding:]
!begin_verbatim
int16_t rsrc_obfix (OBJECT *re_otree, int16_t re_oobject)
{
   int_in[0]  = re_oobject;
   addr_in[0] = re_otree;

   return ( crys_if(114) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 114   # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! re_oobject
addr_in   !! addr_in[0] !! re_otree
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node rsrc_obfix

(!begin_liste) [Beschreibung]

!item [Name:]
ØResource Object fixÆ - wandelt Zeichensatz- in Pixel-Koordinaten um.

!item [AES-Nummer:]
114

!item [Deklaration:]
int16_t rsrc_obfix ( OBJECT *re_otree, int16_t re_oobject );

!item [Beschreibung:]
Die Funktion konvertiert die Grîûe und Position eines Objektes von einer
Zeichendarstellung in die Pixeldarstellung. Es gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)re_otree(!i) !! Adresse des Objektbaumes
(!I)re_oobject(!i) !! Nummer des Objektes
!end_table

(!B)Hinweis:(!b) Ein Aufruf dieser Funktion ist immer dann notwendig, wenn
Objekte zur Laufzeit erzeugt werden, oder nicht per rsrc_load geladen
werden.

Die Konvertierung erfolgt, indem das untere Byte der Koordinatenangabe mit
der Grîûe eines Zeichens aus dem Systemzeichensatz multipliziert, und darauf
das (vorzeichenbehaftete) obere Byte addiert wird. (!B)Ein Sonderfall:(!b)
Bei einer Breite von genau 80 Zeichen wird die Breite des Bildschirms
eingesetzt; dies wird z.B. beim Hintergrundobjekt des MenÅbaums benutzt.

!item [Ergebnis:]
Als Ergebnis wird immer der Wert 1 zurÅckgegeben.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Resourceorganisation][Resourcefunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr rsrc_obfix]) ~ rsrc_load ~ rsrc_rcfix

(!ende_liste)



!begin_node Bindings fÅr rsrc_obfix
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t rsrc_obfix ( OBJECT *re_otree, int16_t re_oobject );

!item [Umsetzung:]
!begin_verbatim
int16_t rsrc_obfix (OBJECT *re_otree, int16_t re_oobject)
{
   int_in[0]  = re_oobject;
   addr_in[0] = re_otree;

   return ( crys_if(114) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 114   # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! re_oobject
addr_in   !! addr_in[0] !! re_otree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
