!iflang [english]

!begin_node graf_handle

(!begin_liste) [Availability]

!item [Name:]
ØGraphics handleÆ - Obtain the (!nolink [VDI]) handle of the (!nolink [AES])
workstation.

!item [Opcode:]
77

!item [Syntax:]
int16_t graf_handle ( int16_t *gr_hwchar, int16_t *gr_hhchar, int16_t *gr_hwbox,
                   int16_t *gr_hhbox );

!item [Description:]
The call graf_handle obtains the ID of the physical screen workstation on which
the (!nolink [AES]) outputs, as well as some further information which will be
filled in the following parameters when the function exits:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [gr_hwchar]
Width, (!U)and(!u)
!item [gr_hhchar]
Height of a character from the system font, in points
!item [gr_hwbox]
Width, (!U)and(!u)
!item [gr_hhbox]
Height of a cell into which any character from the system font will fit
completely
!end_xlist

(!B)Note:(!b) The information from the parameters (!I)gr_hwbox(!i) or
(!I)gr_hhbox(!i) is used be the (!nolink [AES]) for the width of the individual
window components.

!item [(!nolink [Return]) value:]
The function returns the ID (handle) of the opened (!nolink [AES]) workstation.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Graphics library

!item [See also:]
(!link [Binding] [Bindings for graf_handle]) ~ v_opnvwk ~ graf_xhandle

(!ende_liste)



!begin_node Bindings for graf_handle
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t graf_handle ( int16_t *gr_hwchar, int16_t *gr_hhchar, int16_t *gr_hwbox,
                   int16_t *gr_hhbox );

!item [Binding:]
!begin_verbatim
int16_t graf_handle (int16_t *gr_hwchar, int16_t *gr_hhchar,
                     int16_t *gr_hwbox, int16_t *gr_hhbox)
{
   crys_if (77);

   *gr_hwchar = int_out[1];
   *gr_hhchar = int_out[2];
   *gr_hwbox  = int_out[3];
   *gr_hhbox  = int_out[4];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 77    # Function opcode
control+2 !! control[1] !! 0     # Entry in int_in
control+4 !! control[2] !! 5     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! gr_hwchar
int_out+4 !! int_out[2] !! gr_hhchar
int_out+6 !! int_out[3] !! gr_hwbox
int_out+8 !! int_out[4] !! gr_hhbox
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node graf_handle

(!begin_liste) [Beschreibung]

!item [Name:]
ØGraphics handleÆ - ermittelt den (!nolink [VDI])-Handle der Arbeitsstation.

!item [AES-Nummer:]
77

!item [Deklaration:]
int16_t graf_handle ( int16_t *gr_hwchar, int16_t *gr_hhchar, int16_t *gr_hwbox,
                   int16_t *gr_hhbox );

!item [Beschreibung:]
Die Funktion ermittelt die Kennung der Bildschirm-Workstation, auf der das
(!nolink [AES]) ausgibt. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [gr_hwchar]
Breite
!item [gr_hhchar]
Hîhe eines Zeichens aus dem Systemzeichensatz in Punkten
!item [gr_hwbox]
Breite
!item [gr_hhbox]
Hîhe einer Zelle, in die ein beliebiges Zeichen aus dem Systemzeichensatz
komplett hinein paût.
!end_xlist

(!B)Hinweis:(!b) Die Information aus den Parametern (!I)gr_hwbox(!i) bzw.
(!I)gr_hhbox(!i) wird vom (!nolink [AES]) fÅr die Breite der einzelnen
Fensterelemente verwendet.

!item [Ergebnis:]
Die Funktion liefert die Kennung (handle) der geîffneten
(!nolink [AES])-Workstation.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr graf_handle]) ~ v_opnvwk ~ graf_xhandle

(!ende_liste)



!begin_node Bindings fÅr graf_handle
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t graf_handle ( int16_t *gr_hwchar, int16_t *gr_hhchar, int16_t *gr_hwbox,
                   int16_t *gr_hhbox );

!item [Umsetzung:]
!begin_verbatim
int16_t graf_handle (int16_t *gr_hwchar, int16_t *gr_hhchar,
                     int16_t *gr_hwbox, int16_t *gr_hhbox)
{
   crys_if (77);

   *gr_hwchar = int_out[1];
   *gr_hhchar = int_out[2];
   *gr_hwbox  = int_out[3];
   *gr_hhbox  = int_out[4];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 77    # Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 5     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! gr_hwchar
int_out+4 !! int_out[2] !! gr_hhchar
int_out+6 !! int_out[3] !! gr_hwbox
int_out+8 !! int_out[4] !! gr_hhbox
!end_table

(!ende_liste)
!end_node
!end_node

!endif
