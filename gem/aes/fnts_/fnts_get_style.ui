!iflang [english]

!begin_node fnts_get_style

(!begin_liste) [Availability]

!item [Name:]
ØFont selector get style IDÆ - Obtain ID of the n-th style of a font family.

!item [Opcode:]
184 (sub-opcode 1)

!item [Syntax:]
int32_t fnts_get_style ( FNT_DIALOG *fnt_dialog, int32_t id, int16_t index );

!item [Description:]
The call fnts_get_style obtains the ID of the n-th font of a font family. The
following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)fnt_dialog(!i) !! Pointer to management structure
(!I)id(!i) !! ID of a font of the family
(!I)index(!i) !! Index within the family
!end_table

(!B)Hint:(!b)
The parameter (!I)index(!i) must be a number between 1 and the result of
fnts_get_no_styles.

!item [(!nolink [Return]) value:]
This function returns ID of the (!I)index(!i)-th font of the family.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
Font selection

!item [See also:]
(!link [Binding] [Bindings for fnts_get_style]) ~ fnts_get_info ~ fnts_get_name ~
(!link [xFSL interface][About the xFSL interface])

(!ende_liste)



!begin_node Bindings for fnts_get_style
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int32_t fnts_get_style ( FNT_DIALOG *fnt_dialog, int32_t id, int16_t index );

!item [Binding:]
!begin_verbatim
int32_t fnts_get_style ( FNT_DIALOG *fnt_dialog, int32_t id,
                         int16_t index )
{
   addr_in[0] = fnt_dialog;

   int_in[0]    = 1;
   int_in[1..2] = id;
   int_in[3]    = index;
   crys_if (184);

   return ( int_out[0..1] );
} 
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0]    !! 184   # Function opcode
control+2 !! control[1]    !! 4     # Entry in int_in
control+4 !! control[2]    !! 2     # Entry in int_out
control+6 !! control[3]    !! 1     # Entry in addr_in
control+8 !! control[4]    !! 0     # Entry in addr_out
addr_in   !! addr_in[0]    !! fnt_dialog
int_in    !! int_in[0]     !! 1     # Sub-opcode
int_in+2  !! int_in[1..2]  !! id
int_in+6  !! int_in[3]     !! index
int_out   !! int_out[0..1] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node fnts_get_style

(!begin_liste) [Beschreibung]

!item [Name:]
ØFont Selector Get Style IDÆ - Zeichensatz ID des n-ten Stils einer
Font-Familie ermitteln.

!item [AES-Nummer:]
184 (Unterfunktion 1)

!item [Deklaration:]
int32_t fnts_get_style ( FNT_DIALOG *fnt_dialog, int32_t id, int16_t index );

!item [Beschreibung:]
Die Funktion ermittelt die ID des n-ten Fonts einer Zeichensatzfamilie. Es
gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)fnt_dialog(!i) !! Zeiger auf Verwaltungsstruktur
(!I)id(!i) !! ID eines Fonts der Familie
(!I)index(!i) !! gewÅnschter Index innerhalb der Familie
!end_table

(!B)Hinweis:(!b) Der Parameter (!I)index(!i) muû eine Zahl zwischen 1 und
dem Ergebnis von fnts_get_no_styles sein.

!item [Ergebnis:]
Die Funktion liefert die ID des n-ten Fonts der Zeichensatzfamilie zurÅck.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7])
(Opcode 7) festgestellt werden.

!item [Gruppe:]
Zeichensatzauswahl

!item [Querverweis:]
(!link [Binding] [Bindings fÅr fnts_get_style]) ~ fnts_get_info ~ fnts_get_name ~
(!link [xFSL-Schnittstelle][xFSL-Schnittstelle])

(!ende_liste)



!begin_node Bindings fÅr fnts_get_style
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int32_t fnts_get_style ( FNT_DIALOG *fnt_dialog, int32_t id, int16_t index );

!item [Umsetzung:]
!begin_verbatim
int32_t fnts_get_style ( FNT_DIALOG *fnt_dialog, int32_t id,
                         int16_t index )
{
   addr_in[0] = fnt_dialog;

   int_in[0]    = 1;
   int_in[1..2] = id;
   int_in[3]    = index;
   crys_if (184);

   return ( int_out[0..1] );
} 
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0]    !! 184   # Opcode der Funktion
control+2 !! control[1]    !! 4     # EintrÑge in int_in
control+4 !! control[2]    !! 2     # EintrÑge in int_out
control+6 !! control[3]    !! 1     # EintrÑge in addr_in
control+8 !! control[4]    !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0]    !! fnt_dialog
int_in    !! int_in[0]     !! 1     # Unterfunktion
int_in+2  !! int_in[1..2]  !! id
int_in+6  !! int_in[3]     !! index
int_out   !! int_out[0..1] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
