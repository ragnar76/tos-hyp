!iflang [english]

!begin_node fnts_delete

(!begin_liste) [Availability]

!item [Name:]
ØFont selector deleteÆ - Release memory used by font selector.

!item [Opcode:]
181

!item [Syntax:]
int16_t fnts_delete ( FNT_DIALOG *fnt_dialog, int16_t vdi_handle );

!item [Description:]
The call fnts_delete releases the memory that was used by the font selector.
The following apply:

!begin_xlist !short [fnt_dialog]
!item [Parameter]
Meaning
!item [~]
~
!item [fnt_dialog]
Pointer to management structure
!item [vdi_handle]
Handle of the Workstation, or 0 if vst_unload_fonts() is not to be called
!end_xlist

(!B)Hint:(!b)
If (!I)vdi_handle(!i) is not 0, then vst_unload_fonts() will be called.

!item [(!nolink [Return]) value:]
This function returns always one.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
Font selection

!item [See also:]
(!link [Binding] [Bindings for fnts_delete]) ~ fnts_close ~ fnts_remove ~ 
(!link [xFSL interface][About the xFSL interface])

(!ende_liste)




!begin_node Bindings for fnts_delete
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t fnts_delete ( FNT_DIALOG *fnt_dialog, int16_t vdi_handle );

!item [Binding:]
!begin_verbatim
int16_t fnts_delete ( FNT_DIALOG *fnt_dialog,
                      int16_t vdi_handle )
{
   addr_in[0] = fnt_dialog;
   int_in[0]  = vdi_handle;
   crys_if (181);

   return ( int_out[0] );
} 
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 181   # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
addr_in   !! addr_in[0] !! fnt_dialog
int_in    !! int_in[0]  !! vdi_handle
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node fnts_delete

(!begin_liste) [Beschreibung]

!item [Name:]
ØFont Selector DeleteÆ - Speicher der (!nolink [Zeichensatzauswahl]) freigeben.

!item [AES-Nummer:]
181

!item [Deklaration:]
int16_t fnts_delete ( FNT_DIALOG *fnt_dialog, int16_t vdi_handle );

!item [Beschreibung:]
Die Funktion gibt den Speicherplatz fÅr die (!nolink [Zeichensatzauswahl]) wieder
frei. Es gilt:

!begin_xlist !short [fnt_dialog]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fnt_dialog]
Zeiger auf Verwaltungsstruktur
!item [vdi_handle]
Kennung der Workstation (oder 0)
!end_xlist

(!B)Hinweis:(!b) Ist (!I)vdi_handle(!i) ungleich 0, so wird die Funktion
vst_unload_fonts aufgerufen.

!item [Ergebnis:]
Die Funktion liefert stets den Wert 1 zurÅck.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7])
(Opcode 7) festgestellt werden.

!item [Gruppe:]
Zeichensatzauswahl

!item [Querverweis:]
(!link [Binding] [Bindings fÅr fnts_delete]) ~ fnts_close ~ fnts_remove ~
xFSL-Schnittstelle

(!ende_liste)




!begin_node Bindings fÅr fnts_delete
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t fnts_delete ( FNT_DIALOG *fnt_dialog, int16_t vdi_handle );

!item [Umsetzung:]
!begin_verbatim
int16_t fnts_delete ( FNT_DIALOG *fnt_dialog,
                      int16_t vdi_handle )
{
   addr_in[0] = fnt_dialog;
   int_in[0]  = vdi_handle;
   crys_if (181);

   return ( int_out[0] );
} 
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 181   # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! fnt_dialog
int_in    !! int_in[0]  !! vdi_handle
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
