!iflang [english]

!begin_node appl_bvset
(!begin_liste) [Availability]
!item [Name:]
ØApplication bit-vector setÆ - Set the available logical drives for the
file-selector.

!item [Opcode:]
16
!item [Syntax:]
int16_t appl_bvset ( uint16_t bvdisk, uint16_t bvhard );

!item [Description:]
The call appl_bvset informs the (!nolink [GEM]) about the logical drives that are
present; required (amongst others) for the file-selector. The following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)bvdisk(!i) !! Bit-vector of the floppy disk drives present (bit 15 = Drive A: etc).
(!I)bvhard(!i) !! Bit-vector of the hard drives present (bit 15 = Drive A: etc).
!end_table

They are available to the application in (!nolink [global])[13]
and (!nolink [global])[14].

In (!nolink [GEM])/4 and (!nolink [GEM])/5, use appl_xbvset to access drives
beyond P.
               
!item [(!nolink [Return]) value:]
Not known at present.

!item [Availability:]
The function is available only from PC-(!nolink [GEM]) Version 2.0
onwards, KAOS 1.4.2 and MagiC.


!item [Group:]
Application library

!item [See also:]
(!link [Binding] [Bindings for appl_bvset]) ~ appl_xbvset ~ Dsetdrv
(!ende_liste)



!begin_node Bindings for appl_bvset
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_bvset ( uint16_t bvdisk, uint16_t bvhard );
!item [Binding:]
!begin_verbatim
int16_t appl_bvset (uint16_t bvdisk, uint16_t bvhard)
{
   int_in[0]  = bvdisk;
   int_in[1]  = bvhard;
   return ( crys_if(16) );  
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! Contents
!hline
control !! control[0] !! 16      # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in !! int_in[0] !! bvdisk
int_in+2 !! int_in[1] !! bvhard
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node appl_bvset
(!begin_liste) [Beschreibung]
!item [Name:]
ØApplication Bitvektor-SetÆ - setzt die angeschlossenen logischen
Laufwerke fÅr die Dateiauswahlbox
!item [AES-Nummer:]
16
!item [Deklaration:]
int16_t appl_bvset ( uint16_t bvdisk, uint16_t bvhard );

!item [Beschreibung:]
Die Funktion informiert das GEM Åber die vorhandenen logischen Laufwerke,
die u.a. fÅr die Dateiauswahl-box (Fileselector) benîtigt werden. Es gilt:
!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)bvdisk(!i) !! Bitvektor der vorhandenen Diskettenlaufwerke (Bit-15 = Laufwerk-A etc).
(!I)bvhard(!i) !! Bitvektor der vorhandenen Festplattenlaufwerke (Bit-15 = Laufwerk-A etc).
!end_table

Die Werte stehen der Applikation in global[13] und (!nolink [global])[14]
zur VerfÅgung.

In GEM/4 and GEM/5, use appl_xbvset to access drives beyond P.

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist z.Zt. nicht bekannt.

!item [VerfÅgbar:]
Die Funktion steht erst ab PC-GEM Version 2.0, KAOS 1.4.2 und MagiC zur VerfÅgung.


!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr appl_bvset]) ~ appl_xbvset ~ Dsetdrv
(!ende_liste)



!begin_node Bindings fÅr appl_bvset
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_bvset ( uint16_t bvdisk, uint16_t bvhard );
!item [Umsetzung:]
!begin_verbatim
int16_t appl_bvset (uint16_t bvdisk, uint16_t bvhard)
{
   int_in[0]  = bvdisk;
   int_in[1]  = bvhard;
   return ( crys_if(16) );  
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control !! control[0] !! 16    # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in !! int_in[0] !! bvdisk
int_in+2 !! int_in[1] !! bvhard
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
