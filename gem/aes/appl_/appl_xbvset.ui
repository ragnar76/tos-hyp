!iflang [english]

!begin_node appl_xbvset
(!begin_liste) [Availability]
!item [Name:]
ØExtended application bit-vector setÆ - Set the available logical drives for
the file-selector.

!item [Opcode:]
18
!item [Syntax:]
int16_t appl_xbvset ( uint32_t bvdisk, uint32_t bvhard );

!item [Description:]
The call appl_xbvset informs (!nolink [GEM]) about the logical drives that are
present; it's needed, amongst others, for the file-selector, and this extended
version allows drives beyond P:. The following apply:
!begin_ilist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [bvdisk]
Bit-vector of floppy drives present (bit 31 = Drive A: etc).
!item [bvhard]
Bit-vector of hard drives present (bit 31 = Drive A: etc).
!end_ilist

!item [(!nolink [Return]) value:]
Return value of the function is unknown at present.

!item [Availability:]
(!nolink [GEM])/4, (!nolink [GEM])/5 and FreeGEM.

The function to do this is present on FreeGEM if the ABLE_XBVSET bit is set in
the "abilities" bitmap.

!item [Group:]
Application library

!item [See also:]
(!link [Binding] [Bindings for appl_xbvset]) ~ appl_bvset
(!ende_liste)



!begin_node Bindings for appl_xbvset
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_xbvset ( uint32_t bvdisk, uint32_t bvhard );
!item [Binding:]
!begin_verbatim
int16_t appl_xbvset (uint32_t bvdisk, uint32_t bvhard)
{
   int_in[0]  = 1;
   addr_in[0] = bvdisk;
   addr_in[1] = bvhard;

   return ( crys_if(18) );  
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control !! control[0] !! 18    # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 2     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in !! int_in[0] !! 1
addr_in !! addr_in[0] !! bvdisk
addr_in+4 !! addr_in[1] !! bvhard
int_out !! int_out[0] !! Return value
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node appl_xbvset
(!begin_liste) [Beschreibung]
!item [Name:]
ØExtended application bit-vector setÆ

!item [AES-Nummer:]
18
!item [Deklaration:]
int16_t appl_bvset ( uint16_t bvdisk, uint16_t bvhard );

!item [Beschreibung:]
Die Funktion informiert das GEM Åber die vorhandenen logischen Laufwerke,
die u.a. fÅr die Dateiauswahl-box (Fileselector) benîtigt werden. Es gilt:
!begin_ilist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [bvdisk]
Bitvektor der vorhandenen Diskettenlaufwerke (Bit-31 = Laufwerk-A etc).
!item [bvhard]
Bitvektor der vorhandenen Festplattenlaufwerke (Bit-31 = Laufwerk-A etc).
!end_ilist

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist z.Zt. nicht bekannt.

!item [VerfÅgbar:]
(!nolink [GEM])/4, (!nolink [GEM])/5 und FreeGEM.

The function to do this is present on FreeGEM if the ABLE_XBVSET bit is
set in the "abilities" bitmap.



!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr appl_xbvset]) ~ appl_bvset

(!ende_liste)



!begin_node Bindings fÅr appl_xbvset
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_xbvset ( uint32_t bvdisk, uint32_t bvhard );
!item [Umsetzung:]
!begin_verbatim
int16_t appl_xbvset (uint32_t bvdisk, uint32_t bvhard)
{
   int_in[0]  = 1;
   addr_in[0] = bvdisk;
   addr_in[1] = bvhard;

   return ( crys_if(18) );  
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control !! control[0] !! 18    # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 2     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in !! addr_in[0] !! bvdisk
addr_in+4 !! addr_in[1] !! bvhard
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
