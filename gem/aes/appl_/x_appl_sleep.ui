!iflang [english]

!begin_node x_appl_sleep
(!begin_liste) [Availability]
!item [Name:]
ØPut application to sleepÆ - or wake it up (Geneva)

!item [Opcode:]
28930
!item [Syntax:]
int16_t x_appl_sleep( int16_t id, int16_t sleep );

!item [Description:]
The call x_appl_sleep searches for the application whose ID (found by appl_find
or appl_search) is (!I)id(!i) and either puts it to sleep or wakes it up. While
an application is asleep, its windows are automatically closed, and it does not
receive any events.

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)sleep(!i) !! ~0: Awaken application
~             !! ~1: Put application to sleep
~             !! -1: No change
!end_table

The old state of wakefulness is always returned in xas_return, unless an
error occurs. There are several situations where an error code will be
returned:
!begin_itemize !short
   !item There is no application with the ID specified.
   !item The application was the only program awake and the user tried to put
     it to sleep.
   !item The application has a single-tasking child.
!end_itemize
If an application puts itself to sleep, it will not be able to wake
itself; this must be done by another application or by the user from the
Desk menu.

If an application which is asleep is about to be terminated for any
reason, it is first awakened, so that it can receive the AP_TERM message.

!item [(!nolink [Return]) value:]
-1:  Application not found, or the state could not be changed (!nl)
bit 0 set:  Application was sleep (!nl)
bit 1 set:  Application is multitasking
            is clear, the application is single-tasking

!item [Availability:]
The function is available only under Geneva.

!item [Group:]
Application library

!item [See also:]
(!link [Binding] [Bindings for x_appl_font])
(!ende_liste)



!begin_node Bindings for x_appl_sleep
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t x_appl_sleep( int16_t id, int16_t sleep );
!item [Binding:]
!begin_verbatim
int16_t x_appl_sleep( int16_t id, int16_t sleep );
{
   int_in[0]  = id;
   int_in[1]  = sleep;
   return ( crys_if(28930) );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control !! control[0] !! 28930  # Function opcode
control+2 !! control[1] !! 2      # Entry in int_in
control+4 !! control[2] !! 1      # Entry in int_out
control+6 !! control[3] !! 0      # Entry in addr_in
control+8 !! control[4] !! 0      # Entry in addr_out
int_in !! int_in[0] !! id
int_in+2 !! int_in[1] !! sleep
int_out !! int_out[0] !! Return value
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node x_appl_sleep
(!begin_liste) [Beschreibung]
!item [Name:]
ØPut application to sleepÆ - or wake it up (Geneva)

!item [AES-Nummer:]
28930
!item [Deklaration:]
int16_t x_appl_sleep( int16_t id, int16_t sleep );

!item [Beschreibung:]
The call x_appl_sleep searches for the application whose ID (found by appl_find
or appl_search) is (!I)id(!i) and either puts it to sleep or wakes it up. While
an application is asleep, its windows are automatically closed, and it does not
receive any events.

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)sleep(!i) !! ~0: Awaken application
~             !! ~1: Put application to sleep
~             !! -1: No change
!end_table

The old state of wakefulness is always returned in xas_return, unless an
error occurs. There are several situations where an error code will be
returned:
!begin_itemize !short
   !item There is no application with the ID specified.
   !item The application was the only program awake and the user tried to put
     it to sleep.
   !item The application has a single-tasking child.
!end_itemize
If an application puts itself to sleep, it will not be able to wake
itself; this must be done by another application or by the user from the
Desk menu.

If an application which is asleep is about to be terminated for any
reason, it is first awakened, so that it can receive the AP_TERM message.

!item [Ergebnis:]
-1:  Application not found, or the state could not be changed (!nl)
bit 0 set:  Application was--sleep (!nl)
bit 1 set:  Application is multitasking
            is clear, the application is single-tasking

!item [VerfÅgbar:]
Die Funktion steht nur unter Geneva zur VerfÅgung.

!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr x_appl_sleep])
(!ende_liste)



!begin_node Bindings fÅr x_appl_sleep
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t x_appl_sleep( int16_t id, int16_t sleep );
!item [Umsetzung:]
!begin_verbatim
int16_t x_appl_sleep( int16_t id, int16_t sleep );
{
   int_in[0]  = id;
   int_in[1]  = sleep;
   return ( crys_if(28930) );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control !! control[0] !! 28930  # Opcode der Funktion
control+2 !! control[1] !! 2      # EintrÑge in int_in
control+4 !! control[2] !! 1      # EintrÑge in int_out
control+6 !! control[3] !! 0      # EintrÑge in addr_in
control+8 !! control[4] !! 0      # EintrÑge in addr_out
int_in !! int_in[0] !! id
int_in+2 !! int_in[1] !! sleep
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
