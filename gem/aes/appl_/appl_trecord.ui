!iflang [english]

!begin_node appl_trecord
(!begin_liste) [Availability]
!item [Name:]
ØApplication recordÆ - Record (!nolink [AES]) events.
!item [Opcode:]
15
!item [Syntax:]
int16_t appl_trecord ( APPLRECORD *ap_tbuffer, int16_t ap_trcount );

!item [Description:]
The call appl_trecord serves for recording user actions to be able to play them
back again later. The following apply:
!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [ap_tbuffer]
Address of memory block in which the events are to be stored
!item [ap_trcount]
Number of events to be stored
!end_xlist


!item [(!nolink [Return]) value:]
The number of events actually recorded.

!item [Availability:]
All (!nolink [AES]) versions. The function is only implemented properly as of
(!nolink [GEM]) Version 1.2.

!item [Group:]
Application library

!item [See also:]
(!link [Binding] [Bindings for appl_trecord]) ~ appl_tplay

(!ende_liste)    



!begin_node Bindings for appl_trecord
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_trecord ( APPLRECORD *ap_tbuffer, int16_t ap_trcount );
!item [Binding:]
!begin_verbatim
int16_t appl_trecord (APPLRECORD *ap_tbuffer,
                      int16_t ap_trcount)
{
   int_in[0]  = ap_trcount;
   addr_in[0] = ap_tbuffer;

   return ( crys_if(15) );  
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control !! control[0] !! 15    # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in !! int_in[0] !! ap_trcount
addr_in !! addr_in[0] !! ap_tbuffer
int_out !! int_out[0] !! Return value
!end_table
(!ende_liste)       
!end_node
!end_node

!else

!begin_node appl_trecord
(!begin_liste) [Beschreibung]
!item [Name:]
ØApplication recordÆ - nimmt (!nolink [AES])-Ereignisse auf.
!item [AES-Nummer:]
15
!item [Deklaration:]
int16_t appl_trecord ( APPLRECORD *ap_tbuffer, int16_t ap_trcount );

!item [Beschreibung:]
Die Funktion dient zum Speichern von Benutzeraktionen, um diese spÑter
wieder abzuspielen. Es gilt:
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [ap_tbuffer]
Adresse des Speicherbereichs, in dem die Ereignisse abgelegt werden sollen
!item [ap_trcount]
Anzahl der zu speichernden Ereignisse
!end_xlist


!item [Ergebnis:]
Als Ergebnis wird die Anzahl der tatsÑchlich aufgezeichneten Ereignisse
zurÅckgeliefert.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.
Die Funktion ist erst ab GEM-Version 1.2 richtig implementiert.

!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])
!item [Querverweis:]
(!link [Binding] [Bindings fÅr appl_trecord]) ~ appl_tplay

(!ende_liste)    



!begin_node Bindings fÅr appl_trecord
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_trecord ( APPLRECORD *ap_tbuffer, int16_t ap_trcount );
!item [Umsetzung:]
!begin_verbatim
int16_t appl_trecord (APPLRECORD *ap_tbuffer,
                      int16_t ap_trcount)
{
   int_in[0]  = ap_trcount;
   addr_in[0] = ap_tbuffer;

   return ( crys_if(15) );  
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control !! control[0] !! 15    # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in !! int_in[0] !! ap_trcount
addr_in !! addr_in[0] !! ap_tbuffer
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)       
!end_node
!end_node

!endif
