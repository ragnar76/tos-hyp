!iflang [english]

!begin_node appl_init
(!begin_liste) [Availability]
!item [Name:]
ØApplication initializationÆ - Registers the applica!-tion under (!nolink [AES]).
!item [Opcode:]
10
!item [Syntax:]
int16_t appl_init ( void ); (!nl)
int16_t appl_init ( X_BUF_V2 *xbuf );

!item [Description:]
The call appl_init registers the program with the (!nolink [AES]), and
initializes the internal parameter passing fields. It should be the first
function called by any applica!-tion that wants to use GEM calls. As first
prototyped, the function accepted no parameters; however all 'C' compilers use
this call to set up internal information as well as to update the
application's (!nolink [global]) array.

The extra parameter to an X_BUF_V2 is an extension in the FreeGEM (!nolink [AES]).
If addr_in[0] is set to 1 and an initialized X_BUF_V2 structure is passed in,
then on return its (!I)arch(!i) member will be 0 for DRI (!nolink [GEM]) or
ViewMAX, and 16 or 32 for FreeGEM.

(!B)Note:(!b) The version number of the (!nolink [AES]) can be inquired
after this call via the global field (global[0]).

!label AUTO folder, Start from the
To test whether a program has been started from the AUTO folder, the following
procedure is suggested:
!begin_itemize !short
!item 
Write the value 0 in (!nolink [global])[0]
!item
Call function appl_init
!item
Inspect (!nolink [global field (global])[0]): If there is still a zero there,
then the (!nolink [AES]) is not yet ready for operation and the program was
started from the AUTO folder.
!end_itemize

Although this procedure is not documented officially, it is used by the mouse
accelerator MACCEL by Atari in this way.

KAOS-(!nolink [GEM]) 1.4.2 returns 'KA' in int_in[0] and 'OS' in int_in[1].

!item [(!nolink [Return]) value:]
The function returns the ID of the application. In case of an error the value -1
is returned.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Application library

!item [See also:]
(!link [Binding] [Bindings for appl_init]) ~ appl_find ~ appl_search ~ appl_exit
(!ende_liste)



!begin_node Bindings for appl_init
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_init ( void );
!item [Binding:]
!begin_verbatim
EXTERN AESPB c;

int16_t appl_init (void)
{
   c.cb_pcontrol = control;
   c.cb_pglobal  = global;
   c.cb_pintin   = int_in;
   c.cb_pintout  = int_out;
   c.cb_padrin   = addr_in;
   c.cb_padrout  = addr_out;

   control[4] = 0;
   crys_if (10);

   return (int_out[0]);
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 10    # Function opcode
control+2 !! control[1] !! 0     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_out !! int_out[0] !! Return value
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node appl_init
(!begin_liste) [Beschreibung]
!item [Name:]
ØApplication InitializationÆ - meldet die Applikation unter (!nolink [AES]) an.
!item [AES-Nummer:]
10
!item [Deklaration:]
int16_t appl_init ( void );  (!nl)
int16_t appl_init ( X_BUF_V2 *xbuf );

!item [Beschreibung:]
Die Funktion meldet das Programm beim AES an, und initialisiert die
internen ParameterÅbergabefelder.

The extra parameter to an X_BUF_V2 is an extension in 
the FreeGEM AES. If addr_in[0] is set to 1 and an initialised X_BUF_V2
structure is passed in, then on return its arch member will be
0 for DRI GEM or ViewMAX, and 16 or 32 for FreeGEM.

(!B)Hinweis:(!b) Die Versionsnummer des AES lÑût sich nach diesem Aufruf
Åber das Globalfeld (global[0]) erfragen.

!label Auto-Ordner, Start aus dem
Um zu testen, ob ein Programm aus dem Auto-Ordner heraus gestartet worden
ist, bietet sich folgendes Verfahren an:
!begin_itemize !short
!item 
Wert 0 in (!nolink [global])[0] schreiben
!item 
Funktion appl_init aufrufen
!item 
Globalfeld ((!nolink [global])[0]) inspizieren: steht dort immer noch eine Null, so ist
das (!nolink [AES]) noch nicht betriebsbereit, und das Programm wurde aus dem
Auto-Ordner heraus gestartet.
!end_itemize

Dieses Verfahren ist zwar nicht offiziell dokumentiert, wird aber auch im
Mausbeschleuniger MACCEL von Atari so angewendet.

KAOS-GEM 1.4.2 liefert in int_in[0] 'KA' und int_in[1] 'OS' zurÅck.

!item [Ergebnis:]
Die Funktion liefert die ID der Applikation zurÅck. Im Fehlerfall wird der
Wert -1 zurÅckgegeben.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Applikationen][Applikationsfunktionen])
!item [Querverweis:]
(!link [Binding] [Bindings fÅr appl_init]) ~ appl_find ~ appl_search ~ appl_exit
(!ende_liste)



!begin_node Bindings fÅr appl_init
!ignore_index
(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t appl_init ( void );
!item [Umsetzung:]
!begin_verbatim
EXTERN AESPB c;

int16_t appl_init (void)
{
   c.cb_pcontrol = control;
   c.cb_pglobal  = global;
   c.cb_pintin   = int_in;
   c.cb_pintout  = int_out;
   c.cb_padrin   = addr_in;
   c.cb_padrout  = addr_out;

   control[4] = 0;
   crys_if (10);

   return (int_out[0]);
} 
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 10    # Opcode der Funktion
control+2 !! control[1] !! 0     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_out !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
