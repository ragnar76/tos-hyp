!iflang [english]

!begin_node form_popup

(!begin_liste) [Availability]

!item [Name:]
ØForm (!nolink [Popup])Æ - Manage a popup menu.

!item [Opcode:]
135

!item [Syntax:]
int16_t form_popup ( OBJECT *tree, int16_t x, int16_t y );

!item [Description:]
The call form_popup displays a popup menu on the screen and takes over its
management. The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [tree]
Address of the object tree
!item [x]
X-coordinate, (!U)and(!u)
!item [y]
Y-coordinate, around which the box is to be centered
!end_xlist

(!B)Note:(!b) If the parameters (!I)x(!i) and (!I)y(!i) have the value 0, then the
corresponding values from the object structure will be respected, and the
centering is abandoned. At all times the function ensures that the complete popup
is displayed on the screen.

Selectable objects must have the status SELECTABLE and (!I)non-selectable(!i) objects
the status DISABLED assigned. The object with the index 0 in the object tree should
be of the type G_BOX or G_IBOX.


!item [(!nolink [Return]) value:]
The function returns the index of the selected object from the popup menu, else the
value -1.

!item [Availability:]
As of MagiC 1.11, but can also be inquired for by (!link [appl_getinfo][%apgi_9])
(opcode 9), as other systems also understand this function.


!item [Group:]
Form library

!item [See also:]
(!link [Binding] [Bindings for form_popup])  ~ OBJECT ~ xfrm_popup

(!ende_liste)



!begin_node Bindings for form_popup
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t form_popup ( OBJECT *tree, int16_t x, int16_t y );

!item [Binding:]
!begin_verbatim
int16_t form_popup (OBJECT *tree, int16_t x, int16_t y)
{
   int_in[0]  = x;
   int_in[1]  = y;
   addr_in[0] = tree;

   return ( crys_if(135) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 135   # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! x
int_in+2  !! int_in[1]  !! y
addr_in   !! addr_in[0] !! tree
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node form_popup

(!begin_liste) [Beschreibung]

!item [Name:]
ØForm (!nolink [Popup])Æ - verwaltet ein Popup-MenÅ

!item [AES-Nummer:]
135

!item [Deklaration:]
int16_t form_popup ( OBJECT *tree, int16_t x, int16_t y );

!item [Beschreibung:]
Die Funktion stellt ein (!nolink [Popup])-MenÅ auf dem Bildschirm dar, und Åbernimmt
dessen Verwaltung. Es gilt:

!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
Adresse des Objektbaumes
!item [x]
x-Koordinate
!item [y]
y-Koordinate, um die die Box zentriert werden soll.
!end_xlist

(!B)Hinweis:(!b) Falls die Parameter (!I)x(!i) und (!I)y(!i) den Wert 0
besitzen, werden die entsprechenden Werte aus der Objektstruktur beachtet,
und das zentrieren entfÑllt. Es wird immer dafÅr gesorgt, daû das (!nolink [Popup])
vollstÑndig auf dem Bildschirm liegt.

WÑhlbare Objekte mÅssen den Status SELECTABLE, (!I)nicht(!i) wÑhlbare
Objekte den Status DISABLED erhalten. Das Objekt mit der Nummer 0 im
Objektbaum, sollte den Typ G_BOX oder G_IBOX besitzen.

!item [Ergebnis:]
Die Funktion liefert die Nummer des gewÑhlten Objektes aus dem (!nolink [Popup])-MenÅ
oder den Wert -1.

!item [VerfÅgbar:]
Seit MagiC 1.11, kann aber auch per (!link [appl_getinfo][%apgi_9]) (Opcode 9)
abgefragt werden, da andere System die Funktion auch kennen.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_popup])  ~ OBJECT ~ xfrm_popup

(!ende_liste)



!begin_node Bindings fÅr form_popup
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t form_popup ( OBJECT *tree, int16_t x, int16_t y );

!item [Umsetzung:]
!begin_verbatim
int16_t form_popup (OBJECT *tree, int16_t x, int16_t y)
{
   int_in[0]  = x;
   int_in[1]  = y;
   addr_in[0] = tree;

   return ( crys_if(135) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 135   # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! x
int_in+2  !! int_in[1]  !! y
addr_in   !! addr_in[0] !! tree
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
