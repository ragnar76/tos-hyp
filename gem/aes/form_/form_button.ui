!iflang [english]

!begin_node form_button

(!begin_liste) [Availability]

!item [Name:]
ØForm buttonÆ - Simulate the clicking on an object.

!item [Opcode:]
56

!item [Syntax:]
int16_t form_button ( OBJECT *fo_btree, int16_t fo_bobject,
int16_t fo_bclicks, int16_t *fo_bnxtobj );

!item [Description:]
The call form_button simulates mouse clicks on an object. The following apply:

!begin_xlist !short [fo_bnxtobj]
!item [Parameter]
Meaning
!item [~]
~
!item [fo_btree]
Address of the object tree in memory
!item [fo_bobject]
Object to be processed
!item [fo_bclicks]
Number of mouse clicks
!item [fo_bnxtobj]
New current object, or 0 if the next object has the status HIDDEN or DISABLED,
or is not editable
!end_xlist

(!B)Note:(!b) At a double-click on an object with TOUCHEXIT, bit 15 will be set
in the parameter (!I)fo_bnxtobj.(!i) The rectangle list will (!I)not(!i) be
taken into account by this function.

The correct usage of the function is as follows:
!begin_itemize !short
!item Monitor mouse clicks with evnt_multi or evnt_button
!item Once a click occurs, use obj_find to check if the
      click was made on the object.
!item If it was, call form_button with the appropriate values.
!end_itemize
(!B)Warning:(!b) This function was not originally documented by Atari, so you
may need to add bindings for it to some earlier 'C' compilers.

!item [(!nolink [Return]) value:]
The return value of the function is 0 if an EXIT or TOUCHEXIT object was
selected, else it is positive.

!item [Availability:]
All (!nolink [AES]) versions.

!item [Group:]
Form library

!item [See also:]
(!link [Binding] [Bindings for form_button]) ~ OBJECT ~ evnt_multi ~ form_keybd

(!ende_liste)



!begin_node Bindings for form_button
!ignore_index
(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t form_button ( OBJECT *fo_btree, int16_t fo_bobject,
int16_t fo_bclicks, int16_t *fo_bnxtobj );

!item [Binding:]
!begin_verbatim
int16_t form_button (OBJECT *fo_btree, int16_t fo_bobject,
                     int16_t fo_bclicks, int16_t *fo_bnxtobj)
{
   int_in[0]  = fo_bobject;
   int_in[1]  = fo_bclicks;
   addr_in[0] = fo_btree;

   crys_if (56);

   *fo_bnxtobj = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 56    # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 2     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! fo_bobject
int_in+2  !! int_in[1]  !! fo_bclicks
addr_in   !! addr_in[0] !! fo_btree
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! fo_bnxtobj
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node form_button

(!begin_liste) [Beschreibung]

!item [Name:]
ØForm ButtonÆ - simuliert das Anklicken eines Objektes

!item [AES-Nummer:]
56

!item [Deklaration:]
int16_t form_button ( OBJECT *fo_btree, int16_t fo_bobject,
int16_t fo_bclicks, int16_t *fo_bnxtobj );

!item [Beschreibung:]
Die Funktion simuliert das Anklicken eines Objektes. Es gilt:

!begin_xlist !short [fo_bnxtobj]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_btree]
Adresse des Objektbaumes
!item [fo_bobject]
zu bearbeitendes Objekt
!item [fo_bclicks]
Anzahl der Mausklicks
!item [fo_bnxtobj]
neues aktuelles Objekt, oder 0, falls das nÑchste Objekt den Status HIDDEN
oder DISABLED besitzt bzw. nicht editierbar ist.
!end_xlist

(!B)Hinweis:(!b) Bei einem (!nolink [Doppelklick]) auf ein Objekt mit TOUCHEXIT,
wird im Parameter (!I)fo_bnxtobj(!i) Bit-15 gesetzt. Die Rechteckliste wird von
dieser Funktion (!I)nicht(!i) beachtet.

!item [Ergebnis:]
Der RÅckgabewert der Funktion ist Null, falls ein Exitobjekt selektiert
wurde, sonst ist er positiv.

!item [VerfÅgbar:]
All (!nolink [AES]) versions.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_button]) ~ OBJECT ~ evnt_multi ~ form_keybd

(!ende_liste)



!begin_node Bindings fÅr form_button
!ignore_index
(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t form_button ( OBJECT *fo_btree, int16_t fo_bobject,
int16_t fo_bclicks, int16_t *fo_bnxtobj );

!item [Umsetzung:]
!begin_verbatim
int16_t form_button (OBJECT *fo_btree, int16_t fo_bobject,
                     int16_t fo_bclicks, int16_t *fo_bnxtobj)
{
   int_in[0]  = fo_bobject;
   int_in[1]  = fo_bclicks;
   addr_in[0] = fo_btree;

   crys_if (56);

   *fo_bnxtobj = int_out[1];
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 56    # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_bobject
int_in+2  !! int_in[1]  !! fo_bclicks
addr_in   !! addr_in[0] !! fo_btree
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! fo_bnxtobj
!end_table

(!ende_liste)
!end_node
!end_node

!endif
