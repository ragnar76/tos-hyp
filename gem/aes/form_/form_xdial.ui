!iflang [english]

!begin_node form_xdial

(!begin_liste) [Availability]

!item [Name:]
ØForm Xdialog spaceÆ - Reserve or release screen memory for a dialog object when
using Flydials.

!item [Opcode:]
51

!item [Syntax:]
int16_t form_xdial ( int16_t fo_diflag, int16_t fo_dilittlx, int16_t fo_dilittly,
int16_t fo_dilittlw, int16_t fo_dilittlh, int16_t fo_dibigx, int16_t fo_dibigy,
int16_t fo_dibigw, int16_t fo_dibigh, void **flydial );

!item [Description:]
The call form_xdial takes on various tasks, depending on the passed parameters.
The following apply:

!begin_xlist !short [fo_dilittlx]
!item [Parameter]
Meaning
!item [~]
~
!item [fo_diflag]
(!B)0 = FMD_START(!b)
reserves screen memory for the dialog
(!nl)
(!B)3 = FMD_FINISH(!b)
restores the screen and releases the buffer used to save the background in
!item [fo_dilittlx]
X-coordinate, (!U)and(!u)
!item [fo_dilittly]
Y-coordinate of the top left corner,
!item [fo_dilittlw]
Width, (!U)and(!u)
!item [fo_dilittlh]
Height of the smallest growing or shrinking rectangle
!item [fo_dibigx]
X-coordinate, (!U)and(!u)
!item [fo_dibigy]
Y-coordinate of the top left corner,
!item [fo_dibigw]
Width, (!U)and(!u)
!item [fo_dibigh]
Height of the largest growing or shrinking rectangle
!item [flydial]
See below
!end_xlist

(!B)Note:(!b) If (!I)flydial(!i) is non-zero, a test is made whether enough
memory is available to save the background of the dialog box. A pointer to this
saved data is then stored in this variable. If insufficient memory is available to
save the background, then the dialog box processed by form_xdo is not movable; in
that case also the dialog will display no 'fly corner' ('asses ear').

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
When Flydials is in use, whose presence can be checked for with
(!link [appl_getinfo][%apgi_14]) (opcode 14).

!item [Group:]
Form library

!item [See also:]
(!link [Binding] [Bindings for form_xdial]) ~ evnt_mesag ~ form_dial ~
graf_growbox ~ graf_shrinkbox

(!ende_liste)



!begin_node Bindings for form_xdial
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t form_xdial ( int16_t fo_diflag, int16_t fo_dilittlx, int16_t fo_dilittly,
int16_t fo_dilittlw, int16_t fo_dilittlh, int16_t fo_dibigx, int16_t fo_dibigy,
int16_t fo_dibigw, int16_t fo_dibigh, void **flydial );

!item [Binding:]
!begin_verbatim
int16_t form_xdial (int16_t fo_diflag, int16_t fo_dilittlx,
                    int16_t fo_dilittly, int16_t fo_dilittlw,
                    int16_t fo_dilittlh, int16_t fo_dibigx,
                    int16_t fo_dibigy, int16_t fo_dibigw,
                    int16_t fo_dibigh, void **flydial)
{
   int_in[0]  = fo_diflag;
   int_in[1]  = fo_dilittlx;
   int_in[2]  = fo_dilittly;
   int_in[3]  = fo_dilittlw;
   int_in[4]  = fo_dilittlh;
   int_in[5]  = fo_dibigx;
   int_in[6]  = fo_dibigy;
   int_in[7]  = fo_dibigw;
   int_in[8]  = fo_dibigh;
   addr_in[0] = flydial;
   addr_in[1] = 0;            /* reserved */

   return ( crys_if(51) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 51    # Function opcode
control+2 !! control[1] !! 9     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 2     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! fo_diflag
int_in+2  !! int_in[1]  !! fo_dilittlx
int_in+4  !! int_in[2]  !! fo_dilittly
int_in+6  !! int_in[3]  !! fo_dilittlw
int_in+8  !! int_in[4]  !! fo_dilittlh
int_in+10 !! int_in[5]  !! fo_dibigx
int_in+12 !! int_in[6]  !! fo_dibigy
int_in+14 !! int_in[7]  !! fo_dibigw
int_in+16 !! int_in[8]  !! fo_dibigh
addr_in   !! addr_in[0] !! flydial
addr_in+4 !! addr_in[1] !! 0
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node form_xdial

(!begin_liste) [Beschreibung]

!item [Name:]
ØForm XDialog SpaceÆ - reserviert oder gibt Speicherplatz frei fÅr ein
Dialogobjekt.

!item [AES-Nummer:]
51

!item [Deklaration:]
int16_t form_xdial ( int16_t fo_diflag, int16_t fo_dilittlx, int16_t fo_dilittly,
int16_t fo_dilittlw, int16_t fo_dilittlh, int16_t fo_dibigx, int16_t fo_dibigy,
int16_t fo_dibigw, int16_t fo_dibigh, void **flydial );

!item [Beschreibung:]
Die Funktion Åbernimmt abhÑngig von den Åbergebenen Parametern verschiedene
Aufgaben. Es gilt:

!begin_xlist !short [fo_dilittlx]
!item [Parameter]
Bedeutung
!item [~]
~
!item [fo_diflag]
(!B)0 = FMD_START(!b)
reserviert Bildschirmspeicher fÅr den Dialog.
(!nl)
(!B)3 = FMD_FINISH(!b)
restauriert den Bildschirm und gibt den Puffer mit dem geretteten
Hintergrund wieder frei.
!item [fo_dilittlx]
x und y Koordinate,
!item [fo_dilittly]
Breite und Hîhe,
!item [fo_dilittlw]
des kleinsten sich ausdehnenden bzw.
!item [fo_dilittlh]
schlieûenden Rechtecks.
!item [fo_dibigx]
x und y Koordinate,
!item [fo_dibigy]
Breite und Hîhe,
!item [fo_dibigw]
des grîûten sich ausdehnenden bzw.
!item [fo_dibigh]
schlieûenden Rechtecks.
!item [flydial]
siehe unten
!end_xlist

(!B)Hinweis:(!b) Wenn (!I)flydial(!i) ungleich 0 ist, wird getestet, ob
genÅgend Speicher zur VerfÅgung steht, um den Hintergrund der Dialogbox zu
retten. Ein Zeiger auf die geretteten Daten wird dann in dieser Variablen
vermerkt. Falls nicht genÅgend Speicher zur VerfÅgung steht, um den
Hintergrund zu retten, ist die per form_xdo zu bearbeitende Dialogbox nicht
verschiebbar; in diesem Fall wird auch keine 'Flugecke' im Dialog angezeigt.

!item [Ergebnis:]
Ein Fehler ist nur dann aufgetreten, wenn als Ergebnis 0 zurÅckgegeben wird.

!item [VerfÅgbar:]
Das Vorhandensein der Flydials kann per (!link [appl_getinfo][%apgi_14]) (Opcode 14)
abgefragt werden.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr form_xdial]) ~ evnt_mesag ~ form_dial ~
graf_growbox ~ graf_shrinkbox

(!ende_liste)



!begin_node Bindings fÅr form_xdial
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t form_xdial ( int16_t fo_diflag, int16_t fo_dilittlx, int16_t fo_dilittly,
int16_t fo_dilittlw, int16_t fo_dilittlh, int16_t fo_dibigx, int16_t fo_dibigy,
int16_t fo_dibigw, int16_t fo_dibigh, void **flydial );

!item [Umsetzung:]
!begin_verbatim
int16_t form_xdial (int16_t fo_diflag, int16_t fo_dilittlx,
                    int16_t fo_dilittly, int16_t fo_dilittlw,
                    int16_t fo_dilittlh, int16_t fo_dibigx,
                    int16_t fo_dibigy, int16_t fo_dibigw,
                    int16_t fo_dibigh, void **flydial)
{
   int_in[0]  = fo_diflag;
   int_in[1]  = fo_dilittlx;
   int_in[2]  = fo_dilittly;
   int_in[3]  = fo_dilittlw;
   int_in[4]  = fo_dilittlh;
   int_in[5]  = fo_dibigx;
   int_in[6]  = fo_dibigy;
   int_in[7]  = fo_dibigw;
   int_in[8]  = fo_dibigh;
   addr_in[0] = flydial;
   addr_in[1] = 0;              /* reserviert */

   return ( crys_if(51) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 51    # Opcode der Funktion
control+2 !! control[1] !! 9     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 2     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! fo_diflag
int_in+2  !! int_in[1]  !! fo_dilittlx
int_in+4  !! int_in[2]  !! fo_dilittly
int_in+6  !! int_in[3]  !! fo_dilittlw
int_in+8  !! int_in[4]  !! fo_dilittlh
int_in+10 !! int_in[5]  !! fo_dibigx
int_in+12 !! int_in[6]  !! fo_dibigy
int_in+14 !! int_in[7]  !! fo_dibigw
int_in+16 !! int_in[8]  !! fo_dibigh
addr_in   !! addr_in[0] !! flydial
addr_in+4 !! addr_in[1] !! 0
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
