!iflang [english]

!begin_node lbox_get_item

(!begin_liste) [Availability]

!item [Name:]
ØList box get itemÆ - Return pointer to n-th item.

!item [Opcode:]
174 (sub-opcode 7)

!item [Syntax:]
LBOX_ITEM *lbox_get_item ( LIST_BOX *box, int16_t n );

!item [Description:]
The call lbox_get_item returns a pointer to the (!I)n(!i)-th item of the list
box. The following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)box(!i) !! Pointer to the list box structure
(!I)n(!i) !! Index of the items
!end_table

!item [(!nolink [Return]) value:]
TThe function returns the pointer to item (!I)n(!i), or NULL if this is not
found.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
List boxes

!item [See also:]
(!link [Binding] [Bindings for lbox_get_item]) ~ lbox_get_first ~ lbox_get_idx

(!ende_liste)



!begin_node Bindings for lbox_get_item
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
LBOX_ITEM *lbox_get_item ( LIST_BOX *box, int16_t n );

!item [Binding:]
!begin_verbatim
LBOX_ITEM *lbox_get_item ( LIST_BOX *box, int16_t n )
{
   addr_in[0] = box;
   int_in[0]  = 7;
   int_in[1]  = n;
   crys_if (174);

   return ( addr_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0]  !! 174   # Function opcode
control+2 !! control[1]  !! 2     # Entry in int_in
control+4 !! control[2]  !! 0     # Entry in int_out
control+6 !! control[3]  !! 1     # Entry in addr_in
control+8 !! control[4]  !! 1     # Entry in addr_out
addr_in   !! addr_in[0]  !! box
int_in    !! int_in[0]   !! 7     # Sub-opcode
int_in+2  !! int_in[1]   !! n
addr_out  !! addr_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node lbox_get_item

(!begin_liste) [Beschreibung]

!item [Name:]
ØList Box Get ItemÆ - Zeiger auf n-tes Element der Listbox ermitteln.

!item [AES-Nummer:]
174 (Unterfunktion 7)

!item [Deklaration:]
LBOX_ITEM *lbox_get_item ( LIST_BOX *box, int16_t n );

!item [Beschreibung:]
Die Funktion liefert einen Zeiger auf das (!I)n-te(!i) Element der Listbox
zurÅck. Es gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)box(!i) !! Zeiger auf Listbox-Struktur
(!I)n(!i) !! Index des gewÅnschten Elements
!end_table

!item [Ergebnis:]
Die Funktion liefert einen Zeiger auf das (!I)n-te(!i) Element der Liste
(oder im Fehlerfall den Wert NULL) zurÅck.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7)
festgestellt werden.

!item [Gruppe:]
Listboxen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr lbox_get_item]) ~  lbox_get_first ~  lbox_get_idx

(!ende_liste)



!begin_node Bindings fÅr lbox_get_item
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
LBOX_ITEM *lbox_get_item ( LIST_BOX *box, int16_t n );

!item [Umsetzung:]
!begin_verbatim
LBOX_ITEM *lbox_get_item ( LIST_BOX *box, int16_t n )
{
   addr_in[0] = box;
   int_in[0]  = 7;
   int_in[1]  = n;
   crys_if (174);

   return ( addr_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0]  !! 174   # Opcode der Funktion
control+2 !! control[1]  !! 2     # EintrÑge in int_in
control+4 !! control[2]  !! 0     # EintrÑge in int_out
control+6 !! control[3]  !! 1     # EintrÑge in addr_in
control+8 !! control[4]  !! 1     # EintrÑge in addr_out
addr_in   !! addr_in[0]  !! box
int_in    !! int_in[0]   !! 7     # Unterfunktion
int_in+2  !! int_in[1]   !! n
addr_out  !! addr_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
