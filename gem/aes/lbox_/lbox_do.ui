!iflang [english]

!begin_node lbox_do

(!begin_liste) [Availability]

!item [Name:]
ØList box doÆ - Process button of a list box.

!item [Opcode:]
172

!item [Syntax:]
int16_t lbox_do ( LIST_BOX *box, int16_t obj );

!item [Description:]
The call lbox_do reacts to the operation of a button of a list box. The
following apply:

!begin_table [l|l]
Parameter !! Meaning
!hline
(!I)box(!i) !! Pointer to the list box structure
(!I)obj(!i) !! Index of the selected object
!end_table

(!B)Hint:(!b) The function should be called after form_do (or by the service
function of the window dialog). Double-clicks (see below) are recognized by the
function by a set top bit (obj | 0x8000) of the object index. In the returned
object index the top bit is cleared in all cases.

!item [(!nolink [Return]) value:]
The function returns the index of the selected object (or the value -1 if a
double-click was made on an entry). In the latter case the dialog should be
closed and the action seen as a click on the OK button.

!item [Availability:]
The presence of this call should be checked for using
(!link [appl_getinfo][%apgi_7]) (Opcode 7).

!item [Group:]
List boxes

!item [See also:]
(!link [Binding] [Bindings for lbox_do]) ~ lbox_delete ~ lbox_create

(!ende_liste)



!begin_node Bindings for lbox_do
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t lbox_do ( LIST_BOX *box, int16_t obj );

!item [Binding:]
!begin_verbatim
int16_t lbox_do ( LIST_BOX *box, int16_t obj )
{
   addr_in[0] = box;
   int_in[0]  = obj;
   crys_if (172);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 172   # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
addr_in   !! addr_in[0] !! box
int_in    !! int_in[0]  !! obj
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node lbox_do

(!begin_liste) [Beschreibung]

!item [Name:]
ØList Box DoÆ - Button einer Listbox abarbeiten.

!item [AES-Nummer:]
172

!item [Binding:]
(!link [Bindings fÅr lbox_do] [Bindings fÅr lbox_do])

!item [Beschreibung:]
Die Funktion reagiert auf die BetÑtigung eines Buttons einer Listbox. Es
gilt:

!begin_table [l|l]
Parameter !! Bedeutung
!hline
(!I)box(!i) !! Zeiger auf die Listbox-Struktur
(!I)obj(!i) !! Nummer des ausgewÑhlten Objekts
!end_table

(!B)Hinweis:(!b) Die Funktion sollte nach form_do (oder von der
Servicefunktion des Fensterdialogs) aufgerufen werden. Doppelklicks (s.u.)
werden von der Funktion am gesetzten obersten Bit (obj | 0x8000) der
Objektnummer erkannt. Bei der zurÅckgelieferten Objektnummer ist das
oberste Bit in jedem Fall gelîscht.

!item [Ergebnis:]
Die Funktion liefert die Nummer des ausgewÑhlten Objekts (oder den Wert -1,
falls ein (!nolink [Doppelklick]) auf einen Eintrag erfolgte) zurÅck. Im letzteren Fall
sollte der Dialog geschlossen werden, und die Aktion als Klick auf den
Ok-Button angesehen werden.

!item [VerfÅgbar:]
Das Vorhandensein dieser Funktion kann per (!link [appl_getinfo][%apgi_7]) (Opcode 7)
festgestellt werden.

!item [Gruppe:]
Listboxen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr lbox_do]) ~  lbox_delete ~  lbox_create

(!ende_liste)



!begin_node Bindings fÅr lbox_do
!ignore_index

(!begin_liste) [Implementierung:]

!item [C:]
WORD lbox_do ( LIST_BOX *box, WORD obj );

!item [Implementierung:]
!begin_verbatim
WORD lbox_do ( LIST_BOX *box, WORD obj )
{
   addr_in[0] = box;
   int_in[0]  = obj;
   crys_if (172);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 172   # Opcode der Funktion
control+2 !! control[1] !! 1     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
addr_in   !! addr_in[0] !! box
int_in    !! int_in[0]  !! obj
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
