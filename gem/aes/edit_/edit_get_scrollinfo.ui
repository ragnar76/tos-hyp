!iflang [english]

!begin_node edit_get_scrollinfo
(!begin_liste) [Availability]
!item [Name:]
ØEdit Object Get ScrollinformationÆ - Examine settings: Scroll information

!item [Opcode:]
216 (sub-opcode 9)

!item [Syntax:]
void edit_get_scrollinfo ( OBJECT *tree, int16_t obj,
                           int32_t *nlines, int32_t *yscroll,
                           int16_t *yvis, int16_t *yval,
                           int16_t *ncols, int16_t *xscroll,
                           int16_t *xvis );

!item [Description:]
The call edit_get_scrollinfo obtains information about scrollable text
capabilities in an editable object. The following apply:

!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [tree]
RSC-tree of object
!item [obj]
Object index
!item [nlines]
Number of lines in text
!item [yscroll]
First visible line
!item [yvis]
Number of max. visible lines
!item [yval]
Number of currently visible lines
!item [ncols]
Number of columns, or -1 (unknown)
!item [xscroll]
Horizontal scroll offset in pixels
!item [xvis]
Number of visible columns (in pixels)
!end_xlist

This information is required in order to set the horizontal and vertical scroll
bars. As the editable object would have to make a vq_extend for each individual
line, actually at each alteration of a line, the number of columns is currently
not defined and the call returns -1. (!nl)
MGEDIT here simply assumes a fixed width, in the same way as other programs e.g.
VIEW.PRG and PC.PRG do as well. (!I)yval(!i) is always smaller or equal to
(!I)yvis.(!i) If the text has fewer lines that (!I)yvis(!i), then (!I)yval(!i)
is always smaller.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
As of MagiC 5.20 by means of a shared library.

!item [Group:]
Editable object functions

!item [See also:]
(!link [Binding] [Bindings for edit_get_scrollinfo])
(!ende_liste)



!begin_node Bindings for edit_get_scrollinfo
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
void edit_get_scrollinfo ( OBJECT *tree, int16_t obj,
                           int32_t *nlines, int32_t *yscroll,
                           int16_t *yvis, int16_t *yval,
                           int16_t *ncols, int16_t *xscroll,
                           int16_t *xvis );
!item [Binding:]
!begin_verbatim
void edit_get_scrollinfo ( OBJECT *tree, int16_t obj,
                           int32_t *nlines, int32_t *yscroll,
                           int16_t *yvis, int16_t *yval,
                           int16_t *ncols, int16_t *xscroll,
                           int16_t *xvis )
{
   int_in[0]  = obj;
   int_in[1]  = 9;      /* Sub-opcode for function */

   addr_in[0] = tree;

   crys_if( 216 );

   *nlines   = int_out[1..2];
   *yscroll  = int_out[3..4];
   *yvis     = int_out[5];
   *yval     = int_out[6];
   *ncols    = int_out[7];
   *xscroll  = int_out[8];
   *xvis     = int_out[9];

   return;
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 216   # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 10    # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! 9     # Sub-opcode
addr_in   !! addr_in[0] !! tree
int_out   !! int_out[0]  !! undefined
int_out+2 !! int_out[1..2]  !! nlines
int_out+6 !! int_out[3..4]  !! yscroll
int_out+10 !! int_out[5]    !! yvis
int_out+11 !! int_out[6]    !! yval
int_out+12 !! int_out[7]    !! ncols
int_out+13 !! int_out[8]    !! xscroll
int_out+14 !! int_out[9]    !! xvis
!end_table
In mt_edit.c is (!nolink [control])[2] set with 6 (?).
(!ende_liste)
!end_node
!end_node

!else

!begin_node edit_get_scrollinfo
(!begin_liste) [Beschreibung]
!item [Name:]
ØEdit Object Get ScrollinformationÆ - ermittelt wichtige Informationen fÅr
die Scrollbalken eines Editobjektes.
!item [AES-Nummer:]
216 (Unterfunktion 9)
!item [Deklaration:]
void edit_get_scrollinfo ( OBJECT *tree, int16_t obj,
                           int32_t *nlines, int32_t *yscroll,
                           int16_t *yvis, int16_t *yval,
                           int16_t *ncols, int16_t *xscroll,
                           int16_t *xvis );

!item [Beschreibung:]
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
RSC-Baum des Objekts
!item [obj]
Objektnummer
!item [nlines]
Anzahl Zeilen im Text
!item [yscroll]
erste sichtbare Zeile
!item [yvis]
Anzahl max. sichtbarer Zeilen
!item [yval]
Anzahl momentan sichtbarer Zeilen
!item [ncols]
Anzahl Spalten oder -1 (unbekannt)
!item [xscroll]
horiz. Scroll-Offset in Pixeln
!item [xvis]
Anzahl sichtbarer Spalten (in Pixeln)
!end_xlist

Diese Informationen werden benîtigt, um horizontale und vertikale
Scrollbalken einzustellen. Da das Edit-Objekt fÅr jede einzelne Zeile
ein vq_extend() machen mÅûte, und zwar bei jeder énderung einer Zeile,
wird die Anzahl Spalten momentan nicht bestimmt, der Aufruf liefert -1.
MGEDIT nimmt hier einfach eine feste Breite an, wie dies andere Programme,
z.B. VIEW.PRG und PC.PRG ebenfalls tun.

(!I)yval(!i) ist immer kleiner oder gleich (!I)yvis(!i). Falls der Text weniger als
(!I)yvis(!i) Zeilen hat, ist (!I)yval(!i) immer kleiner.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
ab MagiC 5.20 mittels SharedLibrary

!item [Gruppe:]
Editobjekt-Funktionen
!item [Querverweis:]
(!link [Binding] [Bindings fÅr edit_get_scrollinfo])
(!ende_liste)



!begin_node Bindings fÅr edit_get_scrollinfo
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
void edit_get_scrollinfo ( OBJECT *tree, int16_t obj,
                           int32_t *nlines, int32_t *yscroll,
                           int16_t *yvis, int16_t *yval,
                           int16_t *ncols, int16_t *xscroll,
                           int16_t *xvis );
!item [Umsetzung:]
!begin_verbatim
void edit_get_scrollinfo ( OBJECT *tree, int16_t obj,
                           int32_t *nlines, int32_t *yscroll,
                           int16_t *yvis, int16_t *yval,
                           int16_t *ncols, int16_t *xscroll,
                           int16_t *xvis )
{
   int_in[0]  = obj;
   int_in[1]  = 9;      /* Subcode fÅr Funktion */

   addr_in[0] = tree;

   crys_if( 216 );

   *nlines   = int_out[1..2];
   *yscroll  = int_out[3..4];
   *yvis     = int_out[5];
   *yval     = int_out[6];
   *ncols    = int_out[7];
   *xscroll  = int_out[8];
   *xvis     = int_out[9];

   return;
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 216   # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 10    # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! 9     # Sub-Opcode
addr_in   !! addr_in[0] !! tree
int_out   !! int_out[0]  !! undefiniert
int_out+2 !! int_out[1..2]  !! nlines
int_out+6 !! int_out[3..4]  !! yscroll
int_out+10 !! int_out[5]    !! yvis
int_out+11 !! int_out[6]    !! yval
int_out+12 !! int_out[7]    !! ncols
int_out+13 !! int_out[8]    !! xscroll
int_out+14 !! int_out[9]    !! xvis
!end_table
In der mt_edit.c wird (!nolink [control])[2] mit 6 belegt (?).
(!ende_liste)
!end_node
!end_node

!endif
