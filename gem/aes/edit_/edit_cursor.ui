!iflang [english]

!begin_node edit_cursor
(!begin_liste) [Availability]
!item [Name:]
ØEdit object cursorÆ - Edit cursor on/off.
!item [Opcode:]
214
!item [Syntax:]
int16_t edit_cursor ( OBJECT *tree, int16_t obj, int16_t whdl, int16_t show );

!item [Description:]
!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [tree]
RSC-tree of object
!item [obj]
Object index
!item [whdl]
Window handle or -1
!item [show]
The cursor is switched on (show == 1), switched off (show == 0) or examined
(show == -1).
!end_xlist
The call can be nested.

!item [(!nolink [Return]) value:]
Return value is the cursor-off counter.

!item [Availability:]
As of MagiC 5.20 by means of a shared library.

!item [Group:]
Editable object functions

!item [See also:]
(!link [Binding] [Bindings for edit_cursor])
(!ende_liste)



!begin_node Bindings for edit_cursor
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t edit_cursor ( OBJECT *tree, int16_t obj, int16_t whdl, int16_t show );
!item [Binding:]
!begin_verbatim
int16_t edit_cursor ( OBJECT *tree, int16_t obj, int16_t whdl,
                   int16_t show )
{
   addr_in[0] = tree;

   int_in[0]  = obj;
   int_in[1]  = whdl;
   int_in[2]  = show;

   crys_if( 214 );
  
   return ( int_out[0] );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 214   # Function opcode
control+2 !! control[1] !! 3     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! whdl
int_in+2  !! int_in[2]  !! show
addr_in   !! addr_in[0] !! tree
int_out   !! int_out[0] !! Return value
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node edit_cursor
(!begin_liste) [Beschreibung]
!item [Name:]
ØEdit Object CursorÆ - schaltet den Cursor eines Editobjektes ein oder aus.
!item [AES-Nummer:]
214
!item [Deklaration:]
int16_t edit_cursor ( OBJECT *tree, int16_t obj, int16_t whdl, int16_t show );

!item [Beschreibung:]
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
RSC-Baum des Objekts
!item [obj]
Objektnummer
!item [whdl]
  Fenster-Handle oder -1
!item [show]
Der Cursor wird eingeschaltet (1), ausgeschaltet (0)
oder abgefragt (-1).
!end_xlist
Der Aufruf kann geschachtelt werden.

!item [Ergebnis:]
RÅckgabewert ist der Cursor-Aus-ZÑhler.

!item [VerfÅgbar:]
ab MagiC 5.20 mittels SharedLibrary

!item [Gruppe:]
Editobjekt-Funktionen
!item [Querverweis:]
(!link [Binding] [Bindings fÅr edit_cursor])
(!ende_liste)



!begin_node Bindings fÅr edit_cursor
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
int16_t edit_cursor ( OBJECT *tree, int16_t obj, int16_t whdl, int16_t show );
!item [Umsetzung:]
!begin_verbatim
int16_t edit_cursor ( OBJECT *tree, int16_t obj, int16_t whdl,
                   int16_t show )
{
   addr_in[0] = tree;

   int_in[0]  = obj;
   int_in[1]  = whdl;
   int_in[2]  = show;

   crys_if( 214 );
  
   return ( int_out[0] );
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 214   # Opcode der Funktion
control+2 !! control[1] !! 3     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! whdl
int_in+2  !! int_in[2]  !! show
addr_in   !! addr_in[0] !! tree
int_out   !! int_out[0] !! Return-Wert
!end_table
(!ende_liste)
!end_node
!end_node

!endif
