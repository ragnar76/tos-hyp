!iflang [english]

!begin_node edit_set_dirty
(!begin_liste) [Availability]
!item [Name:]
ØEdit Object Set DirtyflagÆ - Alter settings: Dirty flag
!item [Opcode:]
217 (sub-opcode 7)

!item [Syntax:]
void edit_set_dirty ( OBJECT *tree, int16_t obj, int16_t dirty );

!item [Description:]
The call edit_set_dirty changes the settings of the Dirty flag for an editable
object. The following apply:
!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [tree]
RSC-tree of object
!item [obj]
Object number
!item [dirty]
0 = clear, or 1 = set
!end_xlist

With this one can clear the Dirty flag when the text has been saved.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
As of MagiC 5.20 by means of a shared library.

!item [Group:]
Editable object functions

!item [See also:]
(!link [Binding] [Bindings for edit_set_dirty])
(!ende_liste)



!begin_node Bindings for edit_set_dirty
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
void edit_set_dirty ( OBJECT *tree, int16_t obj, int16_t dirty );
!item [Binding:]
!begin_verbatim
void edit_set_dirty ( OBJECT *tree, int16_t obj,
                      int16_t dirty )
{
   int_in[0]  = obj;
   int_in[1]  = 7;      /* Sub-opcode for function */
   int_in[2]  = dirty;

   addr_in[0] = tree;

   crys_if( 217 );

   return;
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 217   # Function opcode
control+2 !! control[1] !! 3     # Entry in int_in
control+4 !! control[2] !! 0     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! 7     # Sub-opcode
int_in+4  !! int_in[4]  !! dirty
addr_in   !! addr_in[0] !! tree
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node edit_set_dirty
(!begin_liste) [Beschreibung]
!item [Name:]
ØEdit Object Set DirtyflagÆ - kennzeichnet ein Editobjekt als verÑndert.
!item [AES-Nummer:]
217 (Unterfunktion 7)
!item [Deklaration:]
void edit_set_dirty ( OBJECT *tree, int16_t obj, int16_t dirty );

!item [Beschreibung:]
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
RSC-Baum des Objekts
!item [obj]
Objektnummer
!item [dirty]
0 oder 1
!end_xlist

Hiermit kann das Dirty-Flag gelîscht werden, wenn der Text
abgespeichert wurde.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
ab MagiC 5.20 mittels SharedLibrary

!item [Gruppe:]
Editobjekt-Funktionen
!item [Querverweis:]
(!link [Binding] [Bindings fÅr edit_set_dirty])
(!ende_liste)



!begin_node Bindings fÅr edit_set_dirty
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
void edit_set_dirty ( OBJECT *tree, int16_t obj, int16_t dirty );
!item [Umsetzung:]
!begin_verbatim
void edit_set_dirty ( OBJECT *tree, int16_t obj,
                      int16_t dirty )
{
   int_in[0]  = obj;
   int_in[1]  = 7;      /* Subcode fÅr Funktion */
   int_in[2]  = dirty;

   addr_in[0] = tree;

   crys_if( 217 );

   return;
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 217   # Opcode der Funktion
control+2 !! control[1] !! 3     # EintrÑge in int_in
control+4 !! control[2] !! 0     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! 7     # Sub-Opcode
int_in+4  !! int_in[4]  !! dirty
addr_in   !! addr_in[0] !! tree
!end_table
(!ende_liste)
!end_node
!end_node

!endif
