!iflang [english]

!begin_node edit_set_font
(!begin_liste) [Availability]
!item [Name:]
ØEdit Object Set FontÆ - Alter settings: Font
!item [Opcode:]
217 (sub-opcode 3)

!item [Syntax:]
void edit_set_font ( OBJECT *tree, int16_t obj, int16_t fontID, int16_t fontH,
                     int16_t fontPix, int16_t mono );

!item [Description:]
The call edit_set_font sets the ID, size and type of font used in an editable
object. The following apply:
!begin_xlist !short [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [tree]
Object tree
!item [obj]
Object index
!item [fontID]
Font ID
!item [fontH]
Character height in "points"
!item [fontPix]
0=points, 1=pixels (from 3.5.98 on)
!item [mono]
'Equidistant' flag
!end_xlist

If the editable object was opened previously, then one should generally 
trigger a redraw when changing the font.

The (!I)mono(!i) flag is required to give the editable object the possibility to 
handle equidistant fonts (mono == 1) appreciably faster that proportional
fonts (mono == 0).

(!I)fontPix(!i) is only available from version 8 of the SLB onwards. Older versions
always assume fontPix=0, i.e. exclusively use vst_point() for setting the 
character height. The SLB recognises from contrl[1] whether (!I)fontPix(!i) was 
passed. If not then 0 will be asumed.

!item [(!nolink [Return]) value:]
The function does not return a result.

!item [Availability:]
As of MagiC 5.20 by means of a shared library.

!item [Group:]
Editable object functions

!item [See also:]
(!link [Binding] [Bindings for edit_set_font])
(!ende_liste)



!begin_node Bindings for edit_set_font
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
void edit_set_font ( OBJECT *tree, int16_t obj, int16_t fontID, int16_t fontH,
                     int16_t fontPix, int16_t mono );
!item [Binding:]
!begin_verbatim
void edit_set_font ( OBJECT *tree, int16_t obj,
                     int16_t fontID, int16_t fontH,
                     int16_t fontPix, int16_t mono )
{
   int_in[0]  = obj;
   int_in[1]  = 3;      /* Sub-opcode for function */
   int_in[2]  = fontID;
   int_in[3]  = fontH;
   int_in[4]  = mono;
   int_in[5]  = fontPix;

   addr_in[0] = tree;

   crys_if( 217 );

   return;
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 217   # Function opcode
control+2 !! control[1] !! 6     # Entry in int_in
control+4 !! control[2] !! 0     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! 3     # Sub-opcode
int_in+4  !! int_in[2]  !! fontID
int_in+6  !! int_in[3]  !! fontH
int_in+8  !! int_in[4]  !! mono
int_in+10 !! int_in[5]  !! fontPix
addr_in   !! addr_in[0] !! tree
!end_table
(!ende_liste)
!end_node
!end_node

!else

!begin_node edit_set_font
(!begin_liste) [Beschreibung]
!item [Name:]
ØEdit Object Set FontÆ - Ñndert den Zeichensatz eines Editobjektes.
!item [AES-Nummer:]
217 (Unterfunktion 3)
!item [Deklaration:]
void edit_set_font ( OBJECT *tree, int16_t obj, int16_t fontID, int16_t fontH,
                     int16_t fontPix, int16_t mono );

!item [Beschreibung:]
!begin_xlist !short [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
RSC-Baum des Objekts
!item [obj]
Objektnummer
!item [fontID]
Zeichensatz-ID
!item [fontH]
Zeichenhîhe in "Punkt"
!item [fontPix]
0=Punkt 1=Pixel (ab 3.5.98)
!item [mono]
Flag "Ñquidistant"
!end_xlist

Wenn das Editobjekt bereits geîffnet wurde, ist bei énderung des
Zeichensatzes i.a. ein Redraw auszulîsen.

Das Flag (!I)mono(!i) wird benîtigt, um dem Editobjekt die Mîglichkeit zu
geben, Ñquidistante ZeichensÑtze (mono = 1) wesentlich schneller zu
bearbeiten als proportionale ZeichensÑtze (mono = 0).

(!I)fontPix(!i) steht erst ab Version 8 der SLB zur VerfÅgung. éltere Versionen
nehmen immer fontPix=0 an, d.h. verwenden ausschlieûlich vst_point zum
Einstellen der Zeichenhîhe. Die SLB erkennt an (!nolink [contrl])[1], ob fontPix
Åbergeben wurde. Wenn nicht, wird 0 angenommen.

!item [Ergebnis:]
Die Funktion liefert kein Ergebnis zurÅck.

!item [VerfÅgbar:]
ab MagiC 5.20 mittels SharedLibrary

!item [Gruppe:]
Editobjekt-Funktionen
!item [Querverweis:]
(!link [Binding] [Bindings fÅr edit_set_font])
(!ende_liste)



!begin_node Bindings fÅr edit_set_font
!ignore_index

(!begin_liste) [GEM-Arrays]
!item [C:]
void edit_set_font ( OBJECT *tree, int16_t obj, int16_t fontID, int16_t fontH,
                     int16_t fontPix, int16_t mono );
!item [Umsetzung:]
!begin_verbatim
void edit_set_font ( OBJECT *tree, int16_t obj,
                     int16_t fontID, int16_t fontH,
                     int16_t fontPix, int16_t mono )
{
   int_in[0]  = obj;
   int_in[1]  = 3;      /* Subcode fÅr Funktion */
   int_in[2]  = fontID;
   int_in[3]  = fontH;
   int_in[4]  = mono;
   int_in[5]  = fontPix;

   addr_in[0] = tree;

   crys_if( 217 );

   return;
}
!end_verbatim
!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 217   # Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 0     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! obj
int_in+2  !! int_in[1]  !! 3     # Sub-Opcode
int_in+4  !! int_in[2]  !! fontID
int_in+6  !! int_in[3]  !! fontH
int_in+8  !! int_in[4]  !! mono
int_in+10 !! int_in[5]  !! fontPix
addr_in   !! addr_in[0] !! tree
!end_table
(!ende_liste)
!end_node
!end_node

!endif
